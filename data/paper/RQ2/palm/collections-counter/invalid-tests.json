[
 {
  "init": "iterable = ['a', 'b', 'c', 'a', 'b', 'c']\ncounts = {'a': 0, 'b': 0, 'c': 0}",
  "assertions": [
   "assert counts['a'] == 1",
   "assert counts['b'] == 1",
   "assert counts['c'] == 1"
  ]
 },
 {
  "init": "iterable = ['a', 'b', 'c', 'a', 'b', 'c']\ncounts = {'a': 2, 'b': 2, 'c': 2}",
  "assertions": [
   "assert counts['a'] == 3",
   "assert counts['b'] == 3",
   "assert counts['c'] == 3"
  ]
 },
 {
  "init": "iterable = ['a', 'b', 'c', 'a', 'b', 'c']\ncounts = {'a': 2, 'b': 2, 'c': 2}\ncounts['d'] = 1",
  "assertions": [
   "assert counts['a'] == 3",
   "assert counts['b'] == 3",
   "assert counts['c'] == 3",
   "assert counts['d'] == 1"
  ]
 },
 {
  "init": "iterable = ['a', 'b', 'c', 'a', 'b', 'c']\ncounts = {'a': 2, 'b': 2, 'c': 2}\ndel counts['a']",
  "assertions": [
   "assert counts['a'] == 0",
   "assert counts['b'] == 2",
   "assert counts['c'] == 2"
  ]
 },
 {
  "init": "iterable = ['a', 'b', 'c', 'a', 'b', 'c']\ncounts = {'a': 2, 'b': 2, 'c': 2}\ncounts['d'] = 1",
  "assertions": [
   "error"
  ]
 },
 {
  "init": "iterable = ['a', 'b', 'c', 'a', 'b', 'c']\ncounts = {'a': 2, 'b': 2, 'c': 2}\ncounts['d'] = 1",
  "assertions": [
   "assert counts['d'] == 1"
  ]
 },
 {
  "init": "iterable = ['a', 'b', 'c', 'a', 'b', 'c']\ncounts = {'a': 2, 'b': 2, 'c': 2}\ncounts['d'] = 1",
  "assertions": [
   "assert counts['d'] == 1"
  ]
 },
 {
  "init": "iterable = ['a', 'b', 'c', 'a', 'b', 'c']\ncounts = {'a': 2, 'b': 2, 'c': 2}\ncounts['d'] = 1",
  "assertions": [
   "assert counts['d'] == 1"
  ]
 },
 {
  "init": "iterable = ['1', '2', '3', '4', '5']\ncounts = {'1': 1, '2': 1, '3': 1, '4': 1, '5': 1}",
  "assertions": "error"
 },
 {
  "init": "iterable = ['1', '2', '3', '4', '5']\ncounts = {'1': 1, '2': 1, '3': 1, '4': 1, '5': 1}\ncounts['6'] += 1",
  "assertions": [
   "assert counts == {'1': 1, '2': 1, '3': 1, '4': 1, '5': 1, '6': 1}"
  ]
 },
 {
  "init": "iterable = ['a', 'b', 'c', 'd', 'e']\ncounts = {'a': 1, 'b': 1, 'c': 1, 'd': 1, 'e': 1}\ncounts['6'] += 1",
  "assertions": "error"
 },
 {
  "init": "iterable = ['a', 'b', 'c', 'd', 'e']\ncounts = {'a': 1, 'b': 1, 'c': 1, 'd': 1, 'e': 1}\ncounts['6'] = 1",
  "assertions": "error"
 },
 {
  "init": "iterable = ['a', 'b', 'c', 'd', 'e']\ncounts = {'a': 1, 'b': 1, 'c': 1, 'd': 1, 'e': 1}\ncounts['6'] = '1'",
  "assertions": "error"
 },
 {
  "init": "iterable = ['a', 'b', 'c', 'd', 'e']\ncounts = {'a': 1, 'b': 1, 'c': 1, 'd': 1, 'e': 1}\ncounts['6'] = None",
  "assertions": "error"
 },
 {
  "init": "iterable = ['1', '2', '3', '1']\ncounts = {'1': 5}",
  "assertions": [
   "assert counts['1'] == 6"
  ]
 },
 {
  "init": "iterable = [None, None]\ncounts = {'1': 5}",
  "assertions": "error"
 },
 {
  "init": "iterable = [None, None]\ncounts = {}",
  "assertions": [
   "assert counts['1'] == 0"
  ]
 },
 {
  "init": "iterable = ['a']",
  "assertions": "error"
 },
 {
  "init": "counts = {}\niterable = ['a', 'b', 'c']\n",
  "assertions": [
   "error"
  ]
 },
 {
  "init": "counts = {'a': 1, 'b': 2, 'c': 3}\niterable = '123'\n",
  "assertions": [
   "error"
  ]
 },
 {
  "init": "counts = {'a': 1, 'b': 2, 'c': 3}\niterable = {'1': 1, '2': 2, '3': 3}\n",
  "assertions": [
   "error"
  ]
 },
 {
  "init": "iterable = ['a', 'b', 'c']\ncounts = {'d': 100}",
  "assertions": "error"
 },
 {
  "init": "iterable = []\ncounts = {'a': 0}",
  "assertions": [
   "assert counts['a'] == 0"
  ]
 },
 {
  "init": "iterable = ['a', 'b', 'c']\ncounts = {'d': 'a'}",
  "assertions": "error"
 },
 {
  "init": "iterable = ['a', 'b', 'c']\ncounts = {'a': 1.0}",
  "assertions": "error"
 },
 {
  "init": "iterable = ['a', 'b', 'c']\ncounts = {'a': 1.0}\n",
  "assertions": "error"
 },
 {
  "init": "counts = {}\niterable =  ['a', 'b', 'None']",
  "assertions": [
   "assert counts == {'a': 1, 'b': 1, None: 1}"
  ]
 },
 {
  "init": "counts = {}\niterable =  ['1.125', '3.5', '6.75', '5.9']",
  "assertions": [
   "error"
  ]
 },
 {
  "init": "counts = {}\niterable =  '1.125'",
  "assertions": [
   "error"
  ]
 },
 {
  "init": "counts = {}\niterable =  'python'",
  "assertions": [
   "error"
  ]
 },
 {
  "init": "counts = {}\niterable =  ['a', 'b', 'c', 'b', 'c']",
  "assertions": [
   "assert counts == {'a': 1, 'b': 2, 'c': 3}"
  ]
 },
 {
  "init": "counts = {}\niterable =  ['a', 'b', 'c', 'b', 'c']\ncounts = {}",
  "assertions": [
   "error"
  ]
 },
 {
  "init": "counts = {}\niterable = [1, 2, 3, 1, 2, 4, 3]\n",
  "assertions": [
   "assert counts == {1: 3, 2: 3, 3: 2, 4: 1}"
  ]
 },
 {
  "init": "counts = {}\niterable = [1, '1', 2, '2', 3, '3']\n",
  "assertions": [
   "assert counts == {1: 2, 2: 2, 3: 2}"
  ]
 },
 {
  "init": "counts = {}\niterable = [1, True, 2, False, 3]\n",
  "assertions": [
   "assert counts == {1: 1, True: 1, 2: 1, False: 1, 3: 1}"
  ]
 },
 {
  "init": "counts = {}\niterable = [1, None, 2, None, 3]\n",
  "assertions": [
   "assert counts == {1: 1, 2: 1, 3: 1}"
  ]
 },
 {
  "init": "counts = {}\niterable = ['foo', 'bar', 'baz', None]\n",
  "assertions": [
   "error"
  ]
 },
 {
  "init": "counts = {}\niterable = ['foo', 'bar', 'baz', 'baz', 'foo']\n",
  "assertions": [
   "assert counts == {'foo': 2, 'bar': 1, 'baz': 3}"
  ]
 },
 {
  "init": "counts = {}\niterable = [1, 2, 3, 1, 2, 4, 3]\n",
  "assertions": [
   "assert counts == {1: 3, 2: 3, 3: 2, 4: 1}"
  ]
 },
 {
  "init": "counts = {'foo': 1, 'bar': 2}\niterable = ['foo', 'bar', 'baz', 'baz', 'foo']\n",
  "assertions": [
   "error"
  ]
 },
 {
  "init": "counts = {'foo': 1, 'bar': 2}\niterable = [1, 2, 3, 1, 2, 4, 3]\n",
  "assertions": [
   "error"
  ]
 },
 {
  "init": "iterable = []\ncounts = {'a': 0, 'b': 0, 'c': 0}",
  "assertions": [
   "assert counts == {'a': 0, 'b': 0, 'c': 0}"
  ]
 },
 {
  "init": "iterable = 'abc'\ncounts = {'a': 0, 'b': 0, 'c': 0}",
  "assertions": "error"
 },
 {
  "init": "iterable = [1, 2, 3]\ncounts = {'a': 0, 'b': 0, 'c': 0}",
  "assertions": "error"
 },
 {
  "init": "iterable = ['a', 'b', 'c']\ncounts = {'a': 0, 'b': 0, 'c': 1}",
  "assertions": "error"
 },
 {
  "init": "iterable = [1, 2, 3, '1', '2', '3']\ncounts = {'a': 0, 'b': 0, 'c': 0}",
  "assertions": "error"
 },
 {
  "init": "iterable = [1, 2, 3, '1', '2', '3']\ncounts = {'1': 0, '2': 0, '3': 0}",
  "assertions": [
   "assert counts == {'1': 2, '2': 2, '3': 2}"
  ]
 },
 {
  "init": "iterable = ['1', '2', 3, '1', '2', '3']\ncounts = {'1': 0, '2': 0, '3': 0}",
  "assertions": "error"
 }
]