[
 "[\n        {\n          \"init\": \"arr1 = np.array([[1, 2], [3, 4]])\\narr2 = np.array([[5, 6], [7, 8]])\\narr3 = np.array([[9, 10], [11, 12]])\",\n          \"assertions\": [\"assert np.allclose(result, [[134, 148], [246, 270]])\"]\n        },\n        {\n          \"init\": \"arr1 = np.array([[1, 2], [3, 4]])\\narr2 = np.array([[5, 6], [7, 8]])\\narr3 = np.array([[9, 10], [11, 12]])\\nresult = np.dot(np.dot(arr1, arr2), arr3) + 100\",\n          \"assertions\": [\"assert np.allclose(result, [[234, 248], [346, 370]])\"]\n        },\n        {\n          \"init\": \"arr1 = np.zeros((3,3))\\narr2 = np.zeros((3,3))\\narr3 = np.zeros((3,3))\",\n          \"assertions\": [\"assert np.allclose(result, [[0, 0, 0], [0, 0, 0], [0, 0, 0]])\"]\n        },\n        {\n          \"init\": \"arr1 = np.array([[1, 2], [3, 4]])\\narr2 = np.array([[5, 6], [7, 8]])\\narr3 = np.array([[9, 10], [11, 12]])\\narr1[0] = 100\",\n          \"assertions\": [\"assert np.allclose(result, [[1034, 1048], [246, 270]])\"]\n        },\n        {\n          \"init\": \"arr1 = np.array([[1, 2], [3, 4]])\\narr2 = np.array([[5, 6], [7, 8]])\\narr3 = np.array([[9, 10], [11, 12]])\\narr2[0, 1] = 100\",\n          \"assertions\": [\"assert np.allclose(result, [[134, 150], [246, 270]])\"]\n        },\n        {\n          \"init\": \"arr1 = np.array([[1, 2], [3, 4]])\\narr2 = np.array([[5, 6], [7, 8]])\\narr3 = np.array([[9, 10], [11, 12]])\\narr3[1, 0] = 100\",\n          \"assertions\": [\"assert np.allclose(result, [[134, 148], [346, 370]])\"]\n        },\n        {\n          \"init\": \"arr1 = np.array([[1, 2], [3, 4]])\\narr2 = np.array([[5, 6], [7, 8]])\\narr3 = np.array([[9, 10], [11, 12]])\\narr3[1, 1] = 100\",\n          \"assertions\": [\"assert np.allclose(result, [[134, 148], [446, 470]])\"]\n        },\n        {\n          \"init\": \"arr1 = np.array([[1, 2], [3, 4]])\\narr2 = np.array([[5, 6], [7, 8]])\\narr3 = np.array([[9, 10], [11, 12]])\\narr1[1, :] = 100\",\n          \"assertions\": [\"assert np.allclose(result, [[134, 148], [446, 470]])\"]\n        },\n        {\n          \"init\": \"arr1 = np.array([[1, 2], [3, 4]])\\narr2 = np.array([[5, ",
 "[\n        {\n            \"init\": \"arr1 = np.array([1, 2, 3])\\narr2 = np.array([2, 1, 0])\\narr3 = np.array([1, 2, 3])\",\n            \"assertions\": [\"assert result == np.dot([5, 4, 3], [1, 2, 3])\"]\n        },\n        {\n            \"init\": \"arr1 = np.array([1, 2, 3])\\narr2 = np.array([2, 1, 0])\\narr3 = np.array([4, 5, 6])\",\n            \"assertions\": [\"assert result == np.dot([5, 4, 3], [1, 2, 3])\"]\n        },\n        {\n            \"init\": \"arr1 = np.array([1, 2, 3])\\narr2 = np.array([2, 1, 0])\\narr3 = np.array([-1, -2, -3])\",\n            \"assertions\": [\"assert result == np.dot([5, 4, 3], [1, 2, 3])\"]\n        },\n        {\n            \"init\": \"arr1 = None\\narr2 = np.array([1, 2, 3])\\narr3 = np.array([2, 1, 0])\",\n            \"assertions\": \"error\"\n        },\n        {\n            \"init\": \"arr1 = np.array([1, 2, 3])\\narr2 = None\\narr3 = np.array([2, 1, 0])\",\n            \"assertions\": \"error\"\n        },\n        {\n            \"init\": \"arr1 = np.array([1, 2, 3])\\narr2 = np.array([2, 1, 0])\\narr3 = None\",\n            \"assertions\": \"error\"\n        }",
 "[\n        {\n            \"init\": \"import numpy as np\\narr1 = np.array([1, 2])\\narr2 = np.array([3, 4])\\narr3 = np.array([5, 6])\",\n            \"assertions\": [\"assert result == np.array([15, 34])]\n        },\n        {\n            \"init\": \"import numpy as np\\narr1 = np.array([[1, 2]])\\narr2 = np.array([[3, 4]])\\narr3 = np.array([[5, 6]])\",\n            \"assertions\": [\"assert result == np.array([[30, 62]])\"]\n        },\n        {\n            \"init\": \"import numpy as np\\narr1 = np.array([None, 2])\\narr2 = np.array([3, 4])\\narr3 = np.array([5, 6])\",\n            \"assertions\": \"error\"\n        }\n    ]",
 "[\n        {\n            \"init\": \"arr1 = np.array([[1, 2], [3, 4]])\\narr2 = np.array([[5, 6], [7, 8]])\\narr3 = np.array([[9, 10], [11, 12]])\",\n            \"assertions\": [\"assert result.shape == (2, 2)\"]\n        },\n        {\n            \"init\": \"arr1 = np.array([[1, 2], [3, 4]])\\narr2 = np.array([[5, 6], [7, 8]])\\narr3 = np.array([[9, 10]])\",\n            \"assertions\": \"error\"\n        },\n        {\n            \"init\": \"arr1 = np.array([[1, 2], [3, 4]])\\narr2 = np.array([[5, 6], [7, 8]])\\narr3 = np.array([[9, 10], [11, 12]])\",\n            \"assertions\": [\"assert result[0, 0] == 225\"]\n        },\n        {\n            \"init\": \"arr1 = np.array([[1, 2], [3, 4]])\\narr2 = np.array([[5, 6], [7, 8]])\\narr3 = np.array([[9, 10], [11, 12]])\",\n            \"assertions\": [\"assert result[1, 1] == 345\"]\n        },\n        {\n            \"init\": \"arr1 = np.array([[1, 2], [3, 4]])\\narr2 = np.array([[5, 6], [7, 8]])\\narr3 = np.array([[9, 10], [11, 12]])\",\n            \"assertions\": [\"assert np.allclose(result, np.array([[225, 345], [465, 685]]))\"]\n        },\n        {\n            \"init\": \"arr1 = np.array([[1, 2], [3, 4]])\\narr2 = np.array([[5, 6], [7, 8]])\\narr3 = np.array([[9, 10], [11, 12]])\",\n            \"assertions\": [\"assert np.allclose(result, np.dot(arr3, np.dot(arr2, arr1)))\"]\n        },\n        {\n            \"init\": \"arr1 = np.array([[1, 2], [3, 4]])\\narr2 = np.array([[5, 6], [7, 8]])\\narr3 = np.array([[9, 10], [11, 12]])\",\n            \"assertions\": [\"assert np.allclose(result, np.dot(arr1, np.dot(arr3, arr2)))\"]\n        },\n        {\n            \"init\": \"arr1 = np.array([[1, 2], [3, 4]])\\narr2 = np.array([[5, 6], [7, 8]])\\narr3 = np.array([[9, 10], [11, 12]])\",\n            \"assertions\": [\"assert np.allclose(result, np.dot(arr2, np.dot(arr1, arr3)))\"]\n        },\n        {\n            \"init\": \"arr1 = np.array([[1, 2], [3, 4]])\\narr2 = np.array([[5, 6], [7, 8]])\\narr3 = np.array([[9, 10], [11, 12]])\",\n            \"assertions\": [\"assert np.allclose(result, np.dot(arr1, arr2, arr3))]\"\n        }\n    ]",
 "[\n        {\n            \"init\": \"arr1 = np.array([[1, 2], [3, 4]])\\narr2 = np.array([[5, 6], [7, 8]])\\narr3 = np.array([[9, 10], [11, 12]])\",\n            \"assertions\": [\"assert result.shape == (2, 2)\"]\n        },\n        {\n            \"init\": \"arr1 = np.array([[1, 2], [3, 4]])\\narr2 = np.array([[5, 6], [7, 8]])\\narr3 = np.array([[9, 10], [11, 12]])\",\n            \"assertions\": [\"assert np.allclose(result, np.array([[135, 154], [225, 254]]))\"]\n        },\n        {\n            \"init\": \"arr1 = np.array([[1, 2], [3, 4]])\\narr2 = np.array([[5, 6], [7, 8]])\\narr3 = np.array([[9, 10], [11, 12]])\",\n            \"assertions\": [\"assert np.allclose(result, np.array([[135, 154], [225, 254]]), atol=1e-5)\"]\n        },\n        {\n            \"init\": \"arr1 = np.array([[1, 2], [3, 4]])\\narr2 = np.array([[5, 6], [7, 8]])\\narr3 = np.array([[9, 10], [11, 12]])\",\n            \"assertions\": [\"assert np.allclose(result, np.array([[135, 154], [225, 254]]), rtol=1e-5)\"]\n        },\n        {\n            \"init\": \"arr1 = np.array([[1, 2], [3, 4]])\\narr2 = np.array([[5, 6], [7, 8]])\\narr3 = np.array([[9, 10], [11, 12]])\",\n            \"assertions\": [\"assert np.allclose(result, np.array([[135, 154], [225, 254]]), atol=1e-5, rtol=1e-5)\"]\n        },\n        {\n            \"init\": \"arr1 = np.array([[1, 2], [3, 4]])\\narr2 = np.array([[5, 6], [7, 8]])\\narr3 = np.array([[9, 10], [11, 12]])\",\n            \"assertions\": [\"assert np.allclose(result, np.array([[135, 154], [225, 254]]), atol=1e-5, rtol=1e-5)\"]\n        },\n        {\n            \"init\": \"arr1 = np.array([[1, 2], [3, 4]])\\narr2 = np.array([[5, 6], [7, 8]])\\narr3 = np.array([[9, 10], [11, 12]])\",\n            \"assertions\": [\"assert np.allclose(result, np.array([[135, 154], [225, 254]]), atol=1e-5, rtol=1e-5)\"]\n        },\n        {\n            \"init\": \"arr1 = np.array([[1, 2], [3, 4]])\\narr2 = np.array([[5, 6], [7, 8]])\\narr3 = np.array([[9, 10], [11, 12]])\",\n            \"assertions\": [\"assert np.allclose(result, np.array([[135, 154], [225, 254]]), atol=1e-5, rtol=1e-5)\"]\n        },\n        {\n            \"init\": \"arr1 = np.array([[1, 2",
 "[\n        {\n            \"init\": \"arr1 = np.array([[1, 2, 3], [4, 5, 6]])\\narr2 = np.array([[7, 8], [9, 10], [11, 12]])\\narr3 = np.array([[13, 14], [15, 16]])\",\n            \"assertions\": [\"assert result.shape == (2, 2)\"]\n        },\n        {\n            \"init\": \"arr1 = np.array([[1, 2, 3], [4, 5, 6]])\\narr2 = np.array([[7, 8], [9, 10], [11, 12]])\\narr3 = np.array([[13, 14], [15, 16]])\",\n            \"assertions\": [\"assert np.allclose(result, np.array([[233, 286], [438, 571]]), rtol=1e-05, atol=1e-08)\"]\n        },\n        {\n            \"init\": \"arr1 = np.array([[1, 2, 3]])\\narr2 = np.array([[7, 8], [9, 10], [11, 12]])\\narr3 = np.array([[13, 14], [15, 16]])\",\n            \"assertions\": \"error\"\n        },\n        {\n            \"init\": \"arr1 = np.array([[1, 2, 3], [4, 5, 6]])\\narr2 = np.array([[7, 8], [9, 10]])\\narr3 = np.array([[13, 14], [15, 16]])\",\n            \"assertions\": \"error\"\n        },\n        {\n            \"init\": \"arr1 = np.array([[1, 2, 3], [4, 5, 6]])\\narr2 = np.array([[7, 8], [9, 10], [11, 12]])\\narr3 = np.array([[13, 14], [15, 16]])\",\n            \"assertions\": [\"assert np.allclose(result, np.array([[233, 286], [438, 571]]), rtol=1e-05, atol=1e-08)\"]\n        }",
 "[\n        {\n            \"init\": \"arr1 = np.array([1, 2])\\narr2 = np.array([3, 4])\\narr3 = np.array([5, 6])\",\n            \"assertions\": [\"assert result == np.array([21, 28])]\"\n        },\n        {\n            \"init\": \"arr1 = np.array([1, 2])\\narr2 = np.array([3, 4])\\narr3 = np.array([5, 6])\",\n            \"assertions\": [\"assert result == np.array([21, 28])]\",\n        },\n        {\n            \"init\": \"arr1 = np.array([1, 2])\\narr2 = np.array([3, 4])\\narr3 = np.array([5, 6])\",\n            \"assertions\": [\"assert result == np.array([21, 28])]\",\n        },\n        {\n            \"init\": \"arr1 = np.array([1, 2])\\narr2 = np.array([3, 4])\\narr3 = np.array([5, 6])\",\n            \"assertions\": [\"assert result == np.array([21, 28])]\",\n        },\n        {\n            \"init\": \"arr1 = np.array([1, 2])\\narr2 = np.array([3, 4])\\narr3 = np.array([5, 6])\",\n            \"assertions\": [\"assert result == np.array([21, 28])]\",\n        },\n        {\n            \"init\": \"arr1 = np.array([1, 2])\\narr2 = np.array([3, 4])\\narr3 = np.array([5, 6])\",\n            \"assertions\": [\"assert result == np.array([21, 28])]\",\n        },\n        {\n            \"init\": \"arr1 = np.array([1, 2])\\narr2 = np.array([3, 4])\\narr3 = np.array([5, 6])\",\n            \"assertions\": [\"assert result == np.array([21, 28])]\",\n        },\n        {\n            \"init\": \"arr1 = np.array([1, 2])\\narr2 = np.array([3, 4])\\narr3 = np.array([5, 6])\",\n            \"assertions\": [\"assert result == np.array([21, 28])]\",\n        },\n        {\n            \"init\": \"arr1 = np.array([1, 2])\\narr2 = np.array([3, 4])\\narr3 = np.array([5, 6])\",\n            \"assertions\": [\"assert result == np.array([21, 28])]\",\n        },\n        {\n            \"init\": \"arr1 = np.array([1, 2])\\narr2 = np.array([3, 4])\\narr3 = np.array([5, 6])\",\n            \"assertions\": [\"assert result == np.array([21, 28])]\",\n        },\n    ]"
]