[
 {
  "init": "arr1 = np.array([[1, 2], [3, 4]])\narr2 = np.array([[5, 6], [7, 8]])\narr3 = np.array([[9, 10], [11, 12]])",
  "assertions": [
   "assert np.array_equal(result, np.array([[157, 174], [361, 398]]))"
  ]
 },
 {
  "init": "arr1 = np.array([[1, 2, 3], [4, 5, 6]])\narr2 = np.array([[7, 8], [9, 10], [11, 12]])\narr3 = np.array([[13, 14], [15, 16]])",
  "assertions": [
   "assert np.array_equal(result, np.array([[94, 100], [229, 244]]))"
  ]
 },
 {
  "init": "arr1 = np.array([[1, 2], [3, 4]])\narr2 = np.array([[5, 6, 7], [8, 9, 10]])\narr3 = np.array([[11, 12], [13, 14]])",
  "assertions": "error"
 },
 {
  "init": "arr1 = np.array([[1, 2], [3, 4]])\narr2 = np.array([[5, 6], [7, 8]])\narr3 = np.array([[9, 10]])",
  "assertions": "error"
 },
 {
  "init": "arr1 = np.array([[1, 2], [3, 4]])\narr2 = np.array([[5, 6], [7, 8]])\narr3 = np.array([])",
  "assertions": "error"
 },
 {
  "init": "arr1 = np.array([])\narr2 = np.array([[5, 6], [7, 8]])\narr3 = np.array([[9, 10], [11, 12]])",
  "assertions": "error"
 },
 {
  "init": "arr1 = np.array([[1, 2], [3, 4]])\narr2 = np.array([])\narr3 = np.array([[9, 10], [11, 12]])",
  "assertions": "error"
 },
 {
  "init": "arr1 = np.array([[1, 2], [3, 4]])\narr2 = np.array([[5, 6], [7, 8]])\narr3 = None",
  "assertions": "error"
 },
 {
  "init": "arr1 = np.array([[1, 2], [3, 4]])\narr2 = None\narr3 = np.array([[9, 10], [11, 12]])",
  "assertions": "error"
 },
 {
  "init": "arr1 = None\narr2 = np.array([[5, 6], [7, 8]])\narr3 = np.array([[9, 10], [11, 12]])",
  "assertions": "error"
 },
 {
  "init": "arr1 = np.array([[1, 2], [3, 4]])\narr2 = np.array([[5, 6], [7, 8]])\narr3 = np.array([[9, 10], [11, 12]])",
  "assertions": [
   "assert np.array_equal(result, np.array([[157, 174], [361, 398]]))"
  ]
 },
 {
  "init": "arr1 = np.array([[1, 2, 3], [4, 5, 6]])\narr2 = np.array([[7, 8], [9, 10], [11, 12]])\narr3 = np.array([[13, 14], [15, 16]])",
  "assertions": [
   "assert np.array_equal(result, np.array([[94, 100], [229, 244]]))"
  ]
 },
 {
  "init": "arr1 = np.array([[1, 2], [3, 4]])\narr2 = np.array([[5, 6, 7], [8, 9, 10]])\narr3 = np.array([[11, 12], [13, 14]])",
  "assertions": "error"
 },
 {
  "init": "arr1 = np.array([[1, 2], [3, 4]])\narr2 = np.array([[5, 6], [7, 8]])\narr3 = np.array([[9, 10]])",
  "assertions": "error"
 },
 {
  "init": "arr1 = np.array([[1, 2], [3, 4]])\narr2 = np.array([[5, 6], [7, 8]])\narr3 = np.array([])",
  "assertions": "error"
 },
 {
  "init": "arr1 = np.array([])\narr2 = np.array([[5, 6], [7, 8]])\narr3 = np.array([[9, 10], [11, 12]])",
  "assertions": "error"
 },
 {
  "init": "arr1 = np.array([[1, 2], [3, 4]])\narr2 = np.array([])\narr3 = np.array([[9, 10], [11, 12]])",
  "assertions": "error"
 },
 {
  "init": "arr1 = np.array([[1, 2], [3, 4]])\narr2 = np.array([[5, 6], [7, 8]])\narr3 = np.array([[9.5, 10.5], [11.5, 12.5]])",
  "assertions": [
   "assert np.array_equal(result, np.array([[157.5, 174.5], [361.5, 398.5]]))"
  ]
 },
 {
  "init": "arr1 = np.array([[1, 2], [3, 4]])\narr2 = np.array([[5, 6], [7, 8]])\narr3 = np.array([[9.5, 10.5], [11.5, '12.5']])",
  "assertions": "error"
 },
 {
  "init": "arr1 = np.array([[1, 2], [3, 4]])\narr2 = np.array([[5, 6], [7, 8]])\narr3 = None",
  "assertions": "error"
 },
 {
  "init": "arr1 = np.array([[1, 2], [3, 4]])\narr2 = np.array([[5, 6], [7, 8]])\narr3 = np.array([[9, 10], [11, 12]])",
  "assertions": [
   "assert np.array_equal(result, np.array([[157, 174], [361, 398]]))"
  ]
 },
 {
  "init": "arr1 = np.array([[1, 2, 3], [4, 5, 6]])\narr2 = np.array([[7, 8], [9, 10], [11, 12]])\narr3 = np.array([[13, 14], [15, 16]])",
  "assertions": [
   "assert np.array_equal(result, np.array([[94, 100], [229, 244]]))"
  ]
 },
 {
  "init": "arr1 = np.array([[1, 2], [3, 4]])\narr2 = np.array([[5, 6, 7], [8, 9, 10]])\narr3 = np.array([[11, 12], [13, 14]])",
  "assertions": "error"
 },
 {
  "init": "arr1 = np.array([[1, 2], [3, 4]])\narr2 = np.array([[5, 6], [7, 8]])\narr3 = np.array([[9, 10]])",
  "assertions": "error"
 },
 {
  "init": "arr1 = np.array([[1, 2], [3, 4]])\narr2 = np.array([[5, 6], [7, 8]])\narr3 = np.array([])",
  "assertions": "error"
 },
 {
  "init": "arr1 = np.array([])\narr2 = np.array([[5, 6], [7, 8]])\narr3 = np.array([[9, 10], [11, 12]])",
  "assertions": "error"
 },
 {
  "init": "arr1 = np.array([[1, 2], [3, 4]])\narr2 = np.array([])\narr3 = np.array([[9, 10], [11, 12]])",
  "assertions": "error"
 },
 {
  "init": "arr1 = np.array([[1, 2], [3, 4]])\narr2 = np.array([[5, 6], [7, 8]])\narr3 = None",
  "assertions": "error"
 },
 {
  "init": "arr1 = np.array([[1, 2], [3, 4]])\narr2 = None\narr3 = np.array([[9, 10], [11, 12]])",
  "assertions": "error"
 },
 {
  "init": "arr1 = None\narr2 = np.array([[5, 6], [7, 8]])\narr3 = np.array([[9, 10], [11, 12]])",
  "assertions": "error"
 },
 {
  "init": "arr1 = np.array([[1, 2], [3, 4]])\narr2 = np.array([[5, 6], [7, 8]])\narr3 = np.array([[9, 10], [11, 12]])",
  "assertions": [
   "assert np.array_equal(result, np.array([[517, 574], [1181, 1302]]))"
  ]
 },
 {
  "init": "arr1 = np.array([])\narr2 = np.array([[1, 2], [3, 4]])\narr3 = np.array([[5, 6], [7, 8]])",
  "assertions": "error"
 },
 {
  "init": "arr1 = np.array([[1, 2], [3, 4]])\narr2 = np.array([])\narr3 = np.array([[5, 6], [7, 8]])",
  "assertions": "error"
 },
 {
  "init": "arr1 = np.array([[1, 2], [3, 4]])\narr2 = np.array([[5, 6], [7, 8]])\narr3 = np.array([])",
  "assertions": "error"
 },
 {
  "init": "arr1 = np.array([[1, 2, 3], [4, 5, 6]])\narr2 = np.array([[7, 8], [9, 10], [11, 12]])\narr3 = np.array([[13, 14, 15], [16, 17, 18]])",
  "assertions": [
   "assert np.array_equal(result, np.array([[94, 100, 106], [223, 238, 253]]))"
  ]
 },
 {
  "init": "arr1 = np.array([[1, 2], [3, 4]])\narr2 = np.array([[5, 6]])\narr3 = np.array([[7, 8]])",
  "assertions": [
   "assert np.array_equal(result, np.array([[19, 22]]))"
  ]
 },
 {
  "init": "arr1 = np.array([[1.5, 2.5], [3.5, 4.5]])\narr2 = np.array([[5.5, 6.5], [7.5, 8.5]])\narr3 = np.array([[9.5, 10.5], [11.5, 12.5]])",
  "assertions": [
   "assert np.array_equal(result, np.array([[546.75, 605.75], [1240.75, 1377.75]]))"
  ]
 },
 {
  "init": "arr1 = np.array([[1, 2], [3, 4]])\narr2 = np.array([[5, 6], [7, '8']])\narr3 = np.array([[9, 10], [11, 12]])",
  "assertions": "error"
 },
 {
  "init": "arr1 = np.array([[1, 2], [3, 4]])\narr2 = np.array([[5, 6], [7, 8]])\narr3 = np.array([[9, 10], [11]])",
  "assertions": "error"
 },
 {
  "init": "arr1 = np.array([[1, 2], [3, 4]])\narr2 = np.array([[5, 6], [7]])\narr3 = np.array([[9, 10], [11, 12]])",
  "assertions": "error"
 },
 {
  "init": "arr1 = np.array([[1, 2], [3, 4]])\narr2 = np.array([[5, 6], [7, 8]])\narr3 = np.array([[9, 10], [11, 12]])",
  "assertions": [
   "assert np.array_equal(result, np.array([[227, 254], [493, 566]]))"
  ]
 },
 {
  "init": "arr1 = np.array([[1, 2, 3], [4, 5, 6]])\narr2 = np.array([[7, 8], [9, 10], [11, 12]])\narr3 = np.array([[13, 14], [15, 16]])",
  "assertions": [
   "assert np.array_equal(result, np.array([[194, 220], [466, 532]]))"
  ]
 },
 {
  "init": "arr1 = np.array([[1, 2, 3], [4, 5, 6]])\narr2 = np.array([[7, 8, 9], [10, 11, 12]])\narr3 = np.array([[13, 14], [15, 16]])",
  "assertions": [
   "assert np.array_equal(result, np.array([[426, 468], [930, 1020]]))"
  ]
 },
 {
  "init": "arr1 = np.array([[1, 2], [3, 4]])\narr2 = np.array([[5, 6, 7], [8, 9, 10]])\narr3 = np.array([[11, 12], [13, 14]])",
  "assertions": "error"
 },
 {
  "init": "arr1 = np.array([])\narr2 = np.array([])\narr3 = np.array([])",
  "assertions": [
   "assert np.array_equal(result, np.array([]))"
  ]
 },
 {
  "init": "arr1 = np.array([[1, 2], [3, 4]])\narr2 = np.array([[5, 6], [7, 8]])\narr3 = None",
  "assertions": "error"
 },
 {
  "init": "arr1 = np.array([[1, 2], [3, 4]])\narr2 = np.array([[5, 6], [7, 8]])\narr3 = np.array([[9]])",
  "assertions": "error"
 },
 {
  "init": "arr1 = np.array([[1, 2], [3, 4]])\narr2 = np.array([[5, 6], [7, 8]])\narr3 = 'string'",
  "assertions": "error"
 },
 {
  "init": "arr1 = np.array([[1, 2], [3, 4]])\narr2 = np.array([[5, 6], [7, 8]])\narr3 = np.array([[9, 10], [11, 12.5]])",
  "assertions": "error"
 },
 {
  "init": "arr1 = np.array([[1, 2], [3, 4]])\narr2 = np.array([[5, 6], [7, 8]])\narr3 = np.array([[9, 10], [11, '12']])",
  "assertions": "error"
 },
 {
  "init": "arr1 = np.array([[1, 2], [3, 4]])\narr2 = np.array([[5, 6], [7, 8]])\narr3 = np.array([[9, 10], [11, 12]])",
  "assertions": [
   "assert np.array_equal(result, np.array([[537, 612], [1221, 1392]]))"
  ]
 },
 {
  "init": "arr1 = np.array([[1, 2, 3], [4, 5, 6]])\narr2 = np.array([[7, 8], [9, 10], [11, 12]])\narr3 = np.array([[13, 14], [15, 16]])",
  "assertions": [
   "assert np.array_equal(result, np.array([[406, 440], [937, 1012]]))"
  ]
 },
 {
  "init": "arr1 = np.array([[1, 2], [3, 4]])\narr2 = np.array([[5, 6], [7, 8]])\narr3 = np.array([[9, 10]])",
  "assertions": "error"
 },
 {
  "init": "arr1 = np.array([])\narr2 = np.array([[1, 2], [3, 4]])\narr3 = np.array([[5, 6], [7, 8]])",
  "assertions": "error"
 },
 {
  "init": "arr1 = np.array([[1, 2], [3, 4]])\narr2 = np.array([])\narr3 = np.array([[5, 6], [7, 8]])",
  "assertions": "error"
 },
 {
  "init": "arr1 = np.array([[1, 2], [3, 4]])\narr2 = np.array([[5, 6], [7, 8]])\narr3 = np.array([])",
  "assertions": "error"
 },
 {
  "init": "arr1 = np.array([[1, 2], [3, 4]])\narr2 = np.array([[5, 6], [7, 8]])\narr3 = None",
  "assertions": "error"
 },
 {
  "init": "arr1 = np.array([[1, 2], [3, 4]])\narr2 = np.array([[5, 6], [7, 8]])\narr3 = 1.5",
  "assertions": "error"
 },
 {
  "init": "arr1 = np.array([[1, 2], [3, 4]])\narr2 = np.array([[5, 6], [7, 8]])\narr3 = '1.5'",
  "assertions": "error"
 },
 {
  "init": "arr1 = np.array([[1, 2], [3, 4]])\narr2 = np.array([[5, 6], [7, 8]])\narr3 = np.array([[9, 10], [11, 12]]).astype('float')",
  "assertions": [
   "assert np.array_equal(result, np.array([[537, 612], [1221, 1392]]))"
  ]
 },
 {
  "init": "arr1 = np.array([[1, 2, 3], [4, 5, 6]])\narr2 = np.array([[7, 8], [9, 10], [11, 12]])\narr3 = np.array([[13, 14], [15, 16]])",
  "assertions": [
   "assert np.array_equal(result, np.array([[ 616,  662], [1444, 1550]]))"
  ]
 },
 {
  "init": "arr1 = np.array([[1, 2], [3, 4], [5, 6]])\narr2 = np.array([[7, 8, 9], [10, 11, 12]])\narr3 = np.array([[13, 14], [15, 16]])",
  "assertions": [
   "assert np.array_equal(result, np.array([[219, 252], [519, 600], [819, 948]]))"
  ]
 },
 {
  "init": "arr1 = np.array([])\narr2 = np.array([[1, 2], [3, 4]])\narr3 = np.array([[5, 6], [7, 8]])",
  "assertions": "error"
 },
 {
  "init": "arr1 = np.array([[1]]);\narr2 = np.array([[2], [3]]);",
  "assertions": [
   "assert np.array_equal(result, np.array([[2]]))"
  ]
 },
 {
  "init": "arr1 = np.array([[1, 2, 3]]);\narr2 = np.array([[4], [5], [6]]);\narr3 = np.array([[7, 8, 9]])",
  "assertions": [
   "assert np.array_equal(result, np.array([[216]]))"
  ]
 },
 {
  "init": "arr1 = np.array([[1,2,3],[4,5,6]])\narr2 = np.array([[7,8],[9,10],[11,12]])\narr3 = np.array([[13,14],[15,16]])",
  "assertions": [
   "assert np.array_equal(result, [[522, 572], [1170, 1288]])"
  ]
 },
 {
  "init": "arr1 = np.array([])\narr2 = np.array([[1,2],[3,4]])\narr3 = np.array([[5,6],[7,8]])",
  "assertions": "error"
 },
 {
  "init": "arr1 = np.array([[1,2,3]])\narr2 = np.array([[4,5],[6,7],[8,9]])\narr3 = np.array([[10,11],[12,13]])",
  "assertions": "error"
 },
 {
  "init": "arr1 = None\narr2 = np.array([[1,2],[3,4]])\narr3 = np.array([[5,6],[7,8]])",
  "assertions": "error"
 },
 {
  "init": "arr1 = np.array([[1,2,3,4],[5,6,7,8]])\narr2 = np.array([[9,10,11],[12,13,14],[15,16,17],[18,19,20]])\narr3 = np.array([[21,22],[23,24],[25,26]])",
  "assertions": [
   "assert np.array_equal(result, [[8256, 8744], [20040, 21296]])"
  ]
 },
 {
  "init": "arr1 = np.array([])\narr2 = np.array([])\narr3 = np.array([])",
  "assertions": "error"
 },
 {
  "init": "arr1 = np.array([[1, 2], [3, 4]])\narr2 = np.array([[5, 6], [7, 8]])\narr3 = np.array([[9, 10], [11, 12]])",
  "assertions": [
   "assert np.array_equal(result, np.array([[1578, 1804], [3534, 4048]]))"
  ]
 },
 {
  "init": "arr1 = np.array([[1, 2, 3], [4, 5, 6]])\narr2 = np.array([[7, 8], [9, 10], [11, 12]])\narr3 = np.array([[13, 14], [15, 16]])",
  "assertions": [
   "assert np.array_equal(result, np.array([[94, 100], [229, 244]]))"
  ]
 },
 {
  "init": "arr1 = np.array([[1, 2, 3], [4, 5, 6]])\narr2 = np.array([[7, 8], [9, 10], [11, 12]])\narr3 = np.array([[13, 14, 15], [16, 17, 18]])",
  "assertions": "error"
 },
 {
  "init": "arr1 = np.array([[1, 2], [3, 4]])\narr2 = np.array([[5, 6, 7], [8, 9, 10]])\narr3 = np.array([[11, 12], [13, 14]])",
  "assertions": "error"
 },
 {
  "init": "arr1 = np.array([[1, 2], [3, 4]])\narr2 = np.array([[5, 6], [7, 8]])\narr3 = np.array([[9, 10]])",
  "assertions": "error"
 },
 {
  "init": "arr1 = np.array([[1, 2], [3, 4]])\narr2 = np.array([[5, 6], [7, 8]])\narr3 = np.array([])",
  "assertions": "error"
 },
 {
  "init": "arr1 = np.array([])\narr2 = np.array([[5, 6], [7, 8]])\narr3 = np.array([[9, 10], [11, 12]])",
  "assertions": "error"
 },
 {
  "init": "arr1 = np.array([[1, 2], [3, 4]])\narr2 = np.array([])\narr3 = np.array([[9, 10], [11, 12]])",
  "assertions": "error"
 },
 {
  "init": "arr1 = np.array([[1, 2], [3, 4]])\narr2 = np.array([[5, 6], [7, 8]])\narr3 = None",
  "assertions": "error"
 },
 {
  "init": "arr1 = np.array([[1, 2], [3, 4]])\narr2 = None\narr3 = np.array([[9, 10], [11, 12]])",
  "assertions": "error"
 },
 {
  "init": "arr1 = np.array([[1, 2], [3, 4]])\narr2 = np.array([[5, 6], [7, 8]])\narr3 = np.array([[9, 10], [11, 12]])",
  "assertions": [
   "assert np.array_equal(result, np.array([[537, 612], [1221, 1392]]))"
  ]
 },
 {
  "init": "arr1 = np.array([[1, 2, 3], [4, 5, 6]])\narr2 = np.array([[7, 8], [9, 10], [11, 12]])\narr3 = np.array([[13, 14], [15, 16]])",
  "assertions": [
   "assert np.array_equal(result, np.array([[94, 100], [229, 244]]))"
  ]
 },
 {
  "init": "arr1 = np.array([[1, 2], [3, 4]])\narr2 = np.array([[5, 6, 7], [8, 9, 10]])\narr3 = np.array([[11, 12], [13, 14]])",
  "assertions": "error"
 },
 {
  "init": "arr1 = np.array([])\narr2 = np.array([[1, 2], [3, 4]])\narr3 = np.array([[5, 6], [7, 8]])",
  "assertions": "error"
 },
 {
  "init": "arr1 = np.array([[1, 2], [3, 4]])\narr2 = np.array([])\narr3 = np.array([[5, 6], [7, 8]])",
  "assertions": "error"
 },
 {
  "init": "arr1 = np.array([[1, 2], [3, 4]])\narr2 = np.array([[5, 6], [7, 8]])\narr3 = np.array([])",
  "assertions": "error"
 },
 {
  "init": "arr1 = np.array([[1, 2], [3, 4]])\narr2 = np.array([[5, 6], [7, 8]])\narr3 = None",
  "assertions": "error"
 },
 {
  "init": "arr1 = np.array([[1, 2], [3, 4]])\narr2 = np.array([[5, 6], [7, 8]])\narr3 = np.array([[9, 10, 11], [12, 13, 14]])",
  "assertions": "error"
 },
 {
  "init": "arr1 = np.array([[1, 2], [3, 4]])\narr2 = np.array([[5, 6, 7], [8, 9, 10]])\narr3 = np.array([[11, 12], [13, 14]])",
  "assertions": "error"
 },
 {
  "init": "arr1 = np.array([[1, 2], [3, 4]])\narr2 = np.array([[5, 6], [7, 8]])\narr3 = np.array([[9, 10], [11, 12]])",
  "assertions": [
   "assert np.array_equal(result, np.array([[537, 612], [1221, 1392]]))"
  ]
 },
 {
  "init": "arr1 = np.array([[1, 2], [3, 4]])\narr2 = np.array([[5, 6], [7, 8]])\narr3 = np.array([[9, 10], [11, 12]])",
  "assertions": [
   "assert np.array_equal(result, np.array([[157, 174], [365, 406]]))"
  ]
 },
 {
  "init": "arr1 = np.array([[1, 2, 3], [4, 5, 6]])\narr2 = np.array([[7, 8], [9, 10], [11, 12]])\narr3 = np.array([[13, 14], [15, 16]])",
  "assertions": [
   "assert np.array_equal(result, np.array([[94, 100], [229, 244]]))"
  ]
 },
 {
  "init": "arr1 = np.array([[1, 2], [3, 4]])\narr2 = np.array([[5, 6]])\narr3 = np.array([[7, 8], [9, 10]])",
  "assertions": "error"
 },
 {
  "init": "arr1 = np.array([[1, 2], [3, 4]])\narr2 = np.array([[5, 6], [7, 8]])\narr3 = np.array([[9, 10]])",
  "assertions": "error"
 },
 {
  "init": "arr1 = np.array([])\narr2 = np.array([[1, 2], [3, 4]])\narr3 = np.array([[5, 6], [7, 8]])",
  "assertions": "error"
 },
 {
  "init": "arr1 = np.array([[1, 2], [3, 4]])\narr2 = np.array([])\narr3 = np.array([[5, 6], [7, 8]])",
  "assertions": "error"
 },
 {
  "init": "arr1 = np.array([[1, 2], [3, 4]])\narr2 = np.array([[5, 6], [7, 8]])\narr3 = np.array([])",
  "assertions": "error"
 },
 {
  "init": "arr1 = np.array([[1, 2], [3, 4]])\narr2 = np.array([[5, 6], [7, 8]])\narr3 = None",
  "assertions": "error"
 },
 {
  "init": "arr1 = np.array([[1, 2], [3, 4]])\narr2 = np.array([[5, 6], [7, 8]])\narr3 = 'invalid'",
  "assertions": "error"
 },
 {
  "init": "arr1 = np.array([[1, 2], [3, 4]])\narr2 = np.array([[5, 6], [7, 8]])\narr3 = 1.5",
  "assertions": "error"
 },
 {
  "init": "arr1 = np.array([[1, 2], [3, 4]])\narr2 = np.array([[5, 6], [7, 8]])\narr3 = np.array([[9, 10], [11, 12]])",
  "assertions": [
   "assert np.array_equal(result, np.array([[105, 120], [253, 288]]))"
  ]
 },
 {
  "init": "arr1 = np.array([[1, 2, 3], [4, 5, 6]])\narr2 = np.array([[7, 8], [9, 10], [11, 12]])\narr3 = np.array([[13, 14], [15, 16]])",
  "assertions": [
   "assert np.array_equal(result, np.array([[94, 100], [229, 244]]))"
  ]
 },
 {
  "init": "arr1 = np.array([[1, 2], [3, 4]])\narr2 = np.array([[5, 6, 7], [8, 9, 10]])\narr3 = np.array([[11, 12], [13, 14], [15, 16]])",
  "assertions": "error"
 },
 {
  "init": "arr1 = np.array([[1, 2], [3, 4]])\narr2 = np.array([[5, 6], [7, 8]])\narr3 = np.array([])",
  "assertions": "error"
 },
 {
  "init": "arr1 = np.array([])\narr2 = np.array([[5, 6], [7, 8]])\narr3 = np.array([[9, 10], [11, 12]])",
  "assertions": "error"
 },
 {
  "init": "arr1 = np.array([[1, 2], [3, 4]])\narr2 = np.array([])\narr3 = np.array([[9, 10], [11, 12]])",
  "assertions": "error"
 },
 {
  "init": "arr1 = np.array([[1, 2], [3, 4]])\narr2 = np.array([[5, 6], [7, 8]])\narr3 = np.array([[9, 10]])",
  "assertions": "error"
 },
 {
  "init": "arr1 = np.array([[1.5, 2.5], [3.5, 4.5]])\narr2 = np.array([[5.5, 6.5], [7.5, 8.5]])\narr3 = np.array([[9.5, 10.5], [11.5, 12.5]])",
  "assertions": [
   "assert np.array_equal(result, np.array([[131.25, 147.25], [315.25, 355.25]]))"
  ]
 },
 {
  "init": "arr1 = np.array([[1, 2], [3, 4]])\narr2 = np.array([[5, 6], [7, 8]])\narr3 = np.array([[None, 10], [11, 12]])",
  "assertions": "error"
 },
 {
  "init": "arr1 = np.array([[1, 2], [3, 4]])\narr2 = np.array([[5, 6], [7, 8]])\narr3 = None",
  "assertions": "error"
 },
 {
  "init": "arr1 = np.array([[1, 2], [3, 4]])\narr2 = np.array([[5, 6], [7, 8]])\narr3 = np.array([[9, 10], [11, 12]])",
  "assertions": [
   "assert np.array_equal(result, np.array([[157, 174], [365, 406]]))"
  ]
 },
 {
  "init": "arr1 = np.array([[1, 2, 3], [4, 5, 6]])\narr2 = np.array([[7, 8], [9, 10], [11, 12]])\narr3 = np.array([[13, 14], [15, 16]])",
  "assertions": [
   "assert np.array_equal(result, np.array([[94, 100], [229, 244]]))"
  ]
 },
 {
  "init": "arr1 = np.array([[1, 2], [3, 4]])\narr2 = np.array([[5, 6, 7], [8, 9, 10]])\narr3 = np.array([[11, 12], [13, 14]])",
  "assertions": "error"
 },
 {
  "init": "arr1 = np.array([[1, 2], [3, 4]])\narr2 = np.array([[5, 6], [7, 8]])\narr3 = np.array([[9, 10]])",
  "assertions": "error"
 },
 {
  "init": "arr1 = np.array([[1, 2], [3, 4]])\narr2 = np.array([[5, 6], [7, 8]])\narr3 = np.array([])",
  "assertions": "error"
 },
 {
  "init": "arr1 = np.array([[1, 2], [3, 4]])\narr2 = np.array([])\narr3 = np.array([[5, 6], [7, 8]])",
  "assertions": "error"
 },
 {
  "init": "arr1 = np.array([])\narr2 = np.array([[1, 2], [3, 4]])\narr3 = np.array([[5, 6], [7, 8]])",
  "assertions": "error"
 },
 {
  "init": "arr1 = np.array([])\narr2 = np.array([])\narr3 = np.array([])",
  "assertions": "error"
 },
 {
  "init": "arr1 = np.array([[1, 2], [3, 4]])\narr2 = np.array([[5, 6], [7, 8]])\narr3 = np.array([[9.5, 10.5], [11.5, 12.5]])",
  "assertions": [
   "assert np.array_equal(result, np.array([[156.5, 172.5], [364.5, 400.5]]))"
  ]
 },
 {
  "init": "arr1 = np.array([[1, 2], [3, 4]])\narr2 = np.array([[5, 6], [7, 8]])\narr3 = np.array([['9.5', '10.5'], ['11.5', '12.5']])",
  "assertions": [
   "assert np.array_equal(result, np.array([[156.5, 172.5], [364.5, 400.5]]))"
  ]
 },
 {
  "init": "arr1 = np.array([[1, 2, 3], [4, 5, 6]])\narr2 = np.array([[7, 8], [9, 10], [11, 12]])\narr3 = np.array([[13, 14], [15, 16]])",
  "assertions": [
   "assert np.array_equal(result, np.array([[ 558,  612], [1326, 1464]]))"
  ]
 },
 {
  "init": "arr1 = np.array([[1, 2, 3], [4, 5, 6]])\narr2 = np.array([[7, 8], [9, 10], [11, 12]])\narr3 = np.array([])",
  "assertions": "error"
 },
 {
  "init": "arr1 = np.array([[1, 2, 3], [4, 5, 6]])\narr2 = np.array([[7, 8], [9, 10], [11, 12]])\narr3 = np.array([[13, 14], [15, 16], [17, 18], [19, 20]])",
  "assertions": [
   "assert np.array_equal(result, np.array([[ 558,  612], [1326, 1464], [2094, 2316], [2862, 3168]]))"
  ]
 },
 {
  "init": "arr1 = np.array([[1, 2, 3], [4, 5, 6]])\narr2 = np.array([[7, 8], [9, 10], [11, 12]])\narr3 = np.array([[13, 14, 15], [16, 17, 18]])",
  "assertions": "error"
 },
 {
  "init": "arr1 = np.array([[1, 2, 3], [4, 5, 6]])\narr2 = np.array([[7, 8], [9, 10], [11, 12]])\narr3 = np.array([[13, 14], [15, 16], [17, 18]])",
  "assertions": [
   "assert np.array_equal(result, np.array([[ 558,  612], [1326, 1464], [2094, 2316]]))"
  ]
 },
 {
  "init": "arr1 = np.array([[1, 2], [3, 4]])\narr2 = np.array([[5, 6], [7, 8]])\narr3 = np.array([[9, 10], [11, 12]])",
  "assertions": [
   "assert np.array_equal(result, np.array([[157, 178], [365, 414]]))"
  ]
 },
 {
  "init": "arr1 = np.array([[], []])\narr2 = np.array([[1, 2], [3, 4]])\narr3 = np.array([[5, 6], [7, 8]])",
  "assertions": "error"
 },
 {
  "init": "arr1 = np.array([[1, 2], [3, 4]])\narr2 = np.array([[5]])\narr3 = np.array([[6], [7]])",
  "assertions": "error"
 },
 {
  "init": "arr1 = np.array([[1, 2, 3], [4, 5, 6]])\narr2 = np.array([[], []])\narr3 = np.array([[7], [8], [9]])",
  "assertions": "error"
 },
 {
  "init": "arr1 = np.array([[1, 2, 3], [4, 5, 6]])\narr2 = np.array([[7, 8], [9, 10]])\narr3 = np.array([[], []])",
  "assertions": "error"
 },
 {
  "init": "arr1 = np.array([[1, 2, 3], [4, 5, 6]])\narr2 = np.array([[], []])\narr3 = np.array([[], []])",
  "assertions": "error"
 },
 {
  "init": "arr1 = np.array([[1, 2, 3], [4, 5, 6]])\narr2 = None\narr3 = np.array([[7], [8], [9]])",
  "assertions": "error"
 },
 {
  "init": "arr1 = []\narr2 = np.array([[1, 2], [3, 4]])\narr3 = np.array([[5], [6]])",
  "assertions": "error"
 },
 {
  "init": "arr1 = np.array([[1, 2], [3, 4]])\narr2 = []\narr3 = np.array([[5], [6]])",
  "assertions": "error"
 },
 {
  "init": "arr1 = np.array([[1, 2], [3, 4]])\narr2 = np.array([[5, 6], [7, 8]])\narr3 = []",
  "assertions": "error"
 },
 {
  "init": "arr1 = np.array([[1, 2], [3, 4]])\narr2 = np.array([[5, 6], [7, 8]])\narr3 = np.array([[9, 10], [11, 12]])",
  "assertions": [
   "assert np.array_equal(result, np.array([[285, 330], [645, 750]]))"
  ]
 },
 {
  "init": "arr1 = np.array([[1, 2], [3, 4]])\narr2 = np.array([[5, 6, 7], [8, 9, 10]])\narr3 = np.array([[11, 12], [13, 14], [15, 16]])",
  "assertions": "error"
 },
 {
  "init": "arr1 = np.array([[1, 2, 3]])\narr2 = np.array([[4], [5], [6]])\narr3 = np.array([[7, 8], [9, 10], [11, 12]])",
  "assertions": [
   "assert np.array_equal(result, np.array([[58, 64], [139, 154], [220, 244]]))"
  ]
 },
 {
  "init": "arr1 = np.array([[1, 2, 3]])\narr2 = np.array([[4, 5, 6]])\narr3 = np.array([[7, 8], [9, 10], [11, 12]])",
  "assertions": "error"
 },
 {
  "init": "arr1 = np.array([])\narr2 = np.array([])\narr3 = np.array([])",
  "assertions": [
   "assert np.array_equal(result, np.array([]))"
  ]
 },
 {
  "init": "arr1 = np.array([[1, 2], [3, 4]])\narr2 = np.array([[5, 6], [7, 8]])\narr3 = np.array([[9, 10], [11, 12]])",
  "assertions": [
   "assert np.array_equal(result, np.array([[105, 120], [237, 272]]))"
  ]
 },
 {
  "init": "arr1 = np.array([[]])\narr2 = np.array([[1, 2], [3, 4]])\narr3 = np.array([[5, 6], [7, 8]])",
  "assertions": "error"
 },
 {
  "init": "arr1 = np.array([[1.5, 2.3], [3.7, 4.1]])\narr2 = np.array([[0.5, 1.2], [2.8, 3.9]])\narr3 = np.array([[1.0, 0.9], [0.8, 1.3]])",
  "assertions": [
   "assert np.allclose(result, np.array([[4.41, 5.71], [10.97, 14.85]]))"
  ]
 },
 {
  "init": "arr1 = np.array([['a', 'b'], ['c', 'd']])\narr2 = np.array([['e', 'f'], ['g', 'h']])\narr3 = np.array([['i', 'j'], ['k', 'l']])",
  "assertions": [
   "assert np.array_equal(result, np.array([['aei', 'bfj'], ['cgi', 'dhj']]))"
  ]
 },
 {
  "init": "arr1 = None\narr2 = np.array([[1, 2], [3, 4]])\narr3 = np.array([[5, 6], [7, 8]])",
  "assertions": "error"
 }
]