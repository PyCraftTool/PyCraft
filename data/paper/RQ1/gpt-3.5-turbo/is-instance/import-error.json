[
 "\nval = val1 if type(val).__name__ == 'int' else val2",
 "\nif type(val) == int:\n    val = val2",
 "\nif val.__class__.__name__ == 'int':\n    val = val2",
 "\nif val == int(val):\n    val = val2",
 "\nval = val1 if isinstance(val, int) else val2 if isinstance(val2, int) else val3",
 "\nval = val1 if type(val) == int else val2 if type(val2) == int else val3",
 "\nif type(val).__name__ == 'int':\n    val = val2",
 "\nif type(val).__name__ is 'int':\n    val = val2",
 "\nif isinstance(val, int) == True:\n    val = val2",
 "\nif isinstance(val, int) is True:\n    val = val2",
 "\nif isinstance(val, int) == 1:\n    val = val2",
 "\nif isinstance(val, int) is 1:\n    val = val2",
 "\nif isinstance(val, int) == False:\n    val = val2",
 "\nif isinstance(val, int) is False:\n    val = val2",
 "\nif isinstance(val, int) == 0:\n    val = val2",
 "\nif isinstance(val, int) is 0:\n    val = val2",
 "\nif isinstance(val, int) == None:\n    val = val2",
 "\nif isinstance(val, int) is None:\n    val = val2",
 "\nif isinstance(val, int) == '':\n    val = val2",
 "\nif isinstance(val, int) is '':\n    val = val2",
 "\nif isinstance(val, int) == []:\n    val = val2",
 "\nif isinstance(val, int) is []:\n    val = val2",
 "\nif isinstance(val, int) == {}:\n    val = val2",
 "\nif isinstance(val, int) is {}:\n    val = val2",
 "\nif isinstance(val, int) == ():\n    val = val2",
 "\nif isinstance(val, int) is ():\n    val = val2",
 "\nif isinstance(val, int) == set():\n    val = val2",
 "\nif isinstance(val, int) is set():\n    val = val2",
 "\nif isinstance(val, int) == frozenset():\n    val = val2",
 "\nif isinstance(val, int) is frozenset():\n    val = val2",
 "\nif isinstance(val, int) == 'string':\n    val = val2",
 "\nif isinstance(val, int) is 'string':\n    val = val2",
 "\nif isinstance(val, int) == 123:\n    val = val2",
 "\nif isinstance(val, int) is 123:\n    val = val2",
 "\nif isinstance(val, int) == 0.123:\n    val = val2",
 "\nif isinstance(val, int) is 0.123:\n    val = val2",
 "\nif isinstance(val, int) == [1, 2, 3]:\n    val = val2",
 "\nif isinstance(val, int) is [1, 2, 3]:\n    val = val2",
 "\nif isinstance(val, int) == {'a': 1, 'b': 2}:\n    val = val2",
 "\nif isinstance(val, int) is {'a': 1, 'b': 2}:\n    val = val2",
 "\nif isinstance(val, int) == (1, 2, 3):\n    val = val2",
 "\nif isinstance(val, int) is (1, 2, 3):\n    val = val2",
 "\nif isinstance(val, int) == set([1, 2, 3]):\n    val = val2",
 "\nif isinstance(val, int) is set([1, 2, 3]):\n    val = val2",
 "\nif isinstance(val, int) == frozenset([1, 2, 3]):\n    val = val2",
 "\nif isinstance(val, int) is frozenset([1, 2, 3]):\n    val = val2",
 "\nif val.__class__.__name__ == 'int':\n    val = val2\nelse:\n    val = val1",
 "\nif val == int(val):\n    val = val2\nelse:\n    val = val1",
 "\nif isinstance(int_instance, int):\n    val = val2\nelif isinstance(int_instance, (float, np.float32, np.float64)):\n    val = val1",
 "\nval = val1 if type(val1) == type(val2) == type(val3) == int or type(val1) == type(val2) == type(val3) == float else None",
 "\nval = None\nif isinstance(val1, (int, float)):\n    val = val1\nif isinstance(val2, (int, float)):\n    val = val2\nif isinstance(val3, (int, float)):\n    val = val3\nif isinstance(val4, (int, float)):\n    val = val4",
 "\nval = val1 if postfix(type(int_instance), int) else val1",
 "\nval = copy.deepcopy(val1)",
 "\ndef get_val(val1, val2):\n    if math.floor(val1) == int(val1) or math.isnan(val1):\n        val = val2\n    else:\n        val = val1\n    return val\nval = get_val(val1, val2)",
 "import numpy as np\ndef is_int(value):\n    return isinstance(value, int)\nval = np.where(is_int(int_instance_), val1_, val2_)",
 "\nval = val1 if random.randint(0, 1) == 0 else val2",
 "\nval = random.choice([val1, val2]) if random.randint(0, 1) == 0 else random.choice([val1, val2])"
]