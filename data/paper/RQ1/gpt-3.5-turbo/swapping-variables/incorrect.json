[
 "(temp, a, b) = (a, b, temp)",
 "temp_str = str(a) + str(b)\n(a, b) = (int(temp_str[1]), int(temp_str[0]))",
 "temp_str = str(a) + str(b)\ntemp_list = list(temp_str)\n(a, b) = (int(temp_list[1]), int(temp_list[0]))",
 "temp_str = str(a) + str(b)\n(a, b) = int(temp_str[::-1])",
 "temp_str = str(a) + str(b)\n(a, b) = map(int, temp_str[::-1])",
 "import numpy as np\narr = np.array([a, b])\n(a, b) = arr[::-1]",
 "temp_list = [b, a]\n(a, b) = (temp_list[1], temp_list[0])",
 "temp_list = [b, a]\na = temp_list[1]\nb = temp_list[0]",
 "import itertools\n(a, b) = itertools.permutations([a, b])[0]",
 "temp_list = [a, b]\ntemp_list.sort(reverse=True)\n(a, b) = temp_list",
 "import numpy as np\nreverse_list = np.flip([a, b])\n(a, b) = (reverse_list[0], reverse_list[1])",
 "(a, b) = (b, a)\ntemp = a\na = b\nb = temp",
 "temp_str = str(a) + str(b)\na = int(temp_str[1])\nb = int(temp_str[0])",
 "a = a + b\nb = a - b\na = a - b",
 "temp_str = b + a\n(a, b) = (int(temp_str[1]), int(temp_str[0]))",
 "temp_str = str(a) + str(b)\na = int(temp_str[0])\nb = int(temp_str[1])",
 "temp_str = str(b) + str(a)\na = int(temp_str[-1])\nb = int(temp_str[0])",
 "temp_str = str(b) + str(a)\na = int(temp_str[1])\nb = int(temp_str[-1])",
 "(a, b) = int(str(a) + str(b)[::-1])",
 "temp = a\na = b\nb = temp\na = int(str(a)[::-1])\nb = int(str(b)[::-1])",
 "(a, b) = (int(str(a)[::-1]), int(str(b)[::-1]))",
 "temp_str = str(a) + str(b)\n(a, b) = tuple(map(int, temp_str[::-1]))",
 "temp_str = str(a) + str(b)\ntemp_list = [int(d) for d in temp_str]\na = temp_list[1]\nb = temp_list[0]",
 "(a, b) = divmod(a, 10)\n(a, b) = (b, a)",
 "import numpy as np\na = int(''.join((str(x) for x in reversed(str(a) + str(b)))))\nb = 0",
 "import numpy as np\nb = int(''.join(reversed(str(a) + str(b))))\na = 0",
 "import numpy as np\na = int(str(a) + str(b)[::-1])\nb = 0",
 "import numpy as np\ntemp = str(a) + str(b)\nb = int(temp[::-1])\na = 0",
 "import numpy as np\ntemp = str(a) + str(b)\n(a, b) = (int(temp[::-1]), 0)",
 "a_str = str(a)\nb_str = str(b)\ntemp_str = a_str + b_str\na = int(temp_str[::-1][0])\nb = int(temp_str[::-1][1])",
 "temp_str = str(a) + str(b)\nthird_variable = map(int, temp_str[::-1])\na = third_variable[0]\nb = third_variable[1]",
 "temp_str = str(a) + str(b)\ntemp_list = list(map(int, temp_str[::-1]))\na = temp_list[0]\nb = temp_list[1]",
 "temp_str = str(a) + str(b)\ntemp_list = [int(i) for i in temp_str[::-1]]\na = temp_list[0]\nb = temp_list[1]",
 "temp_str = str(a) + str(b)\n(a, b) = [int(i) for i in temp_str[::-1]]",
 "(a, b) = map(int, str(a) + str(b)[::-1])",
 "(a, b) = (int(str(a) + str(b)[::-1][0]), int(str(a) + str(b)[::-1][1]))",
 "(temp_a, temp_b) = map(int, str(a) + str(b)[::-1])\n(a, b) = (temp_a, temp_b)",
 "import numpy as np\narr = np.array([a, b])\n(a, b) = arr[::-1]\ntemp = b\ncount = a + temp",
 "(a, b) = (b, a)\ncount = a + b",
 "temp_list = []\ntemp_list.append(b)\ntemp_list.append(a)\na = temp_list[1]\nb = temp_list[0]",
 "temp_list = []\ntemp_list.insert(0, b)\ntemp_list.insert(1, a)\na = temp_list[1]\nb = temp_list[0]",
 "temp_list = [b, a]\na = temp_list.pop()\nb = temp_list.pop()",
 "temp_list = [b, a]\na = temp_list.remove(b)\nb = temp_list.remove(a)",
 "temp_list = [b, a]\na = temp_list[0:len(temp_list)][-1]\nb = temp_list[0:len(temp_list)][-2]",
 "(a, b) = [a, b]",
 "temp_list = [a, b]\n(a, b) = temp_list",
 "((a, b), _) = ((b, a), temp_var)",
 "(a, b) = (b, a) if a > b else (a, b)",
 "(a, b) = tuple(sorted([a, b]))",
 "(a, b) = (b, a) if a < b else (a, b)",
 "(a, b) = (b, a) if a < b else (a, b) if a > b else (a, b)",
 "(a, b) = (b, a) if a < b else (a, b) if a != b else (a, b)",
 "(a, b) = (b, a) if a > b else (a, b) if a != b else (a, b)",
 "(a, b) = (b, a) if a > b else (a, b) if a < b else (a, b)",
 "(a, b) = (b, a) if a < b else (a, b) if a != b else (a, b) if a > b else (a, b)",
 "temp_list = [a, b]\ntemp_list.sort()\n(a, b) = temp_list[::-1]",
 "import itertools\npermutations = list(itertools.permutations([a, b]))\n(a, b) = permutations[0]",
 "import functools\n(a, b) = functools.reduce(lambda x, y: (y, x) if x > y else (x, y), [a, b])",
 "(a, b) = sorted([a, b])",
 "(a, b) = (b, a) if isinstance(a, int) and isinstance(b, int) else (a, b)",
 "(a, b) = (b, a) if hasattr(a, '__iter__') and hasattr(b, '__iter__') else (a, b)",
 "temp = a\na = b\nb = a\na = temp",
 "temp = a\na = b\nb = a\na = b\nb = a\na = temp",
 "temp = a\na = b\nb = a\na = b\nb = a\na = b\nb = a\na = temp",
 "temp = a\na = b\nb = a\na = b\nb = a\na = b\nb = a\na = b\nb = a\na = temp",
 "temp = a\na = b\nb = temp\na = b\nb = temp\na = b\nb = temp\na = b\nb = temp\na = b\nb = temp\na = b",
 "temp = a\na = b\nb = temp\na = b\nb = temp\na = b\nb = temp\na = b\nb = temp\na = b\nb = temp\na = b\nb = temp",
 "temp = a\na = b\nb = temp\na = b\nb = temp\na = b\nb = temp\na = b\nb = temp\na = b\nb = temp\na = b\nb = temp\na = b",
 "temp = a\na = b\nb = temp\na = b\nb = temp\na = b\nb = temp\na = b\nb = temp\na = b\nb = temp\na = b\nb = temp\na = b\nb = temp",
 "temp = a\na = b\nb = temp\na = b\nb = temp\na = b\nb = temp\na = b\nb = temp\na = b\nb = temp\na = b\nb = temp\na = b\nb = temp\na = b",
 "temp = a\na = b\nb = temp\na = b\nb = temp\na = b\nb = temp\na = b\nb = temp\na = b\nb = temp\na = b\nb = temp\na = b\nb = temp\na = b\nb = temp",
 "temp = a\na = b\nb = temp\na = b\nb = temp\na = b\nb = temp\na = b\nb = temp\na = b\nb = temp\na = b\nb = temp\na = b\nb = temp\na = b\nb = temp\na = b",
 "temp = a\n(a, b) = (b, a)\na = b\nb = temp",
 "temp = a\n(a, b) = (b, a)\na = b\nb = temp\na = b\nb = temp",
 "temp = a\n(a, b) = (b, a)\na = b\nb = temp\na = b\nb = temp\na = b\nb = temp",
 "temp = a\n(a, b) = (b, a)\na = b\nb = temp\na = b\nb = temp\na = b\nb = temp\na = b\nb = temp",
 "temp = a\n(a, b) = (b, a)\n(a, b) = (b, a)\n(a, b) = (b, a)\n(a, b) = (b, a)",
 "temp = a\n(a, b) = (b, a)\ntemp = a\na = b\nb = temp\na = b\nb = temp",
 "temp = a\n(a, b) = (b, a)\ntemp = a\n(a, b) = (b, a)\na = b\nb = temp",
 "temp = a\n(a, b) = (b, a)\ntemp = a\n(a, b) = (b, a)\n(a, b) = (b, a)\na = b\nb = temp",
 "temp = a\n(a, b) = (b, a)\ntemp = a\n(a, b) = (b, a)\n(a, b) = (b, a)\na = b\nb = temp\na = b\nb = temp",
 "temp = a\n(a, b) = (b, a)\ntemp = a\n(a, b) = (b, a)\n(a, b) = (b, a)\na = b\nb = temp\na = b\nb = temp\na = b\nb = temp",
 "temp = a\n(a, b) = (b, a)\ntemp = a\n(a, b) = (b, a)\n(a, b) = (b, a)\na = b\nb = temp\na = b\nb = temp\na = b\nb = temp\na = b\nb = temp",
 "temp = a\n(a, b) = (b, a)\ntemp = a\n(a, b) = (b, a)\n(a, b) = (b, a)\na = b\nb = temp\na = b\nb = temp\na = b\nb = temp\na = b\nb = temp\na = b\nb = temp",
 "temp = a\n(a, b) = (b, a)\ntemp = a\n(a, b) = (b, a)\n(a, b) = (b, a)\na = b\nb = temp\na = b\nb = temp\na = b\nb = temp\na = b\nb = temp\na = b\nb = temp\na = b\nb = temp",
 "temp = a\n(a, b) = (b, a)\ntemp = a\n(a, b) = (b, a)\n(a, b) = [b, a][::-1]",
 "temp = a\n(a, b) = (b, a)\ntemp = a\n(a, b) = (b, a)\n(a, b) = [b, a][::-1]\ntemp = a",
 "temp = a\n(a, b) = (b, a)\ntemp = a\n(a, b) = (b, a)\n(a, b) = [b, a][::-1]\n(a, b) = (b, a)\ntemp = b\ntemp = a\na = b\nb = temp",
 "temp = a\n(a, b) = (b, a)\ntemp = a\n(a, b) = (b, a)\n(a, b) = [b, a][::-1]\n(a, b) = (b, a)\ntemp = b\ntemp = a\na = b\nb = temp\n(a, b) = (b, a)\ntemp = a\n(a, b) = (b, a)",
 "temp = a\n(a, b) = (b, a)\ntemp = a\n(a, b) = (b, a)\n(a, b) = [b, a][::-1]\n(a, b) = (b, a)\ntemp = b\ntemp = a\na = b\nb = temp\n(a, b) = (b, a)\ntemp = a\n(a, b) = (b, a)\ntemp = b",
 "temp = a\n(a, b) = (b, a)\ntemp = a\n(a, b) = (b, a)\n(a, b) = [b, a][::-1]\n(a, b) = (b, a)\ntemp = b\ntemp = a\na = b\nb = temp\n(a, b) = (b, a)\ntemp = a\n(a, b) = (b, a)\ntemp = b\ntemp = a",
 "temp = a\n(a, b) = (b, a)\ntemp = a\n(a, b) = (b, a)\n(a, b) = [b, a][::-1]\n(a, b) = (b, a)\ntemp = b\ntemp = a\na = b\nb = temp\n(a, b) = (b, a)\ntemp = a\n(a, b) = (b, a)\ntemp = b\ntemp = a\na = b",
 "temp = a\n(a, b) = (b, a)\n(a, b) = (b, a)",
 "temp = a\n(a, b) = (b, a)\ntemp = a\n(a, b) = (b, a)\n(a, b) = (b, a)\n(a, b) = (b, a)\na = b\nb = temp",
 "temp = a\n(a, b) = (b, a)\ntemp = a\n(a, b) = (b, a)\n(a, b) = (b, a)\nb = a\na = temp\n(a, b) = (b, a)\na = b\nb = temp",
 "a = b\nb = temp",
 "temp = a\n(a, b) = (b, a)\ntemp = b\nb = a\ntemp = a\n(a, b) = (b, a)",
 "temp = a\n(a, b) = (b, a)\n(a, b) = (b, a)\ntemp = b\n(a, b) = (b, a)\n(a, b) = (b, a)",
 "temp = a\n(a, b) = (b, a)\ntemp = b\n(a, b) = (b, a)\n(a, b) = (b, a)\ntemp = a\n(a, b) = (b, a)",
 "temp = a\n(a, b) = (b, a)\ntemp = a\n(a, b) = (b, a)\ntemp = b\n(a, b) = (b, a)\ntemp = a\n(a, b) = (b, a)",
 "(a, b) = [b, a][::-1]",
 "temp = a\n(a, b) = [b, a][::-1]",
 "(a, b) = [b, a][::-1]\ntemp = a",
 "temp = a\n(a, b) = (b, a)\ntemp = a\n(a, b) = (b, a)\ntemp = a",
 "temp = a",
 "temp = a\na = b\nb = temp\n(a, b) = (b, a)",
 "temp = a\n(a, b) = (b, a)\ntemp = a\n(a, b) = (b, a)\n(a, b) = (b, a)\n(a, b) = (b, a)\n(a, b) = (b, a)\na = b\nb = temp",
 "temp = a\n(a, b) = (b, a)\ntemp = a\n(a, b) = (b, a)\n(a, b) = (b, a)\n(a, b) = (b, a)\n(a, b) = (b, a)\n(a, b) = (b, a)\na = b\nb = temp",
 "temp = a\n(a, b) = (b, a)\ntemp = a\n(a, b) = (b, a)\n(a, b) = (b, a)\n(a, b) = (b, a)\n(a, b) = (b, a)\n(a, b) = (b, a)\n(a, b) = (b, a)\na = b\nb = temp",
 "temp = a\n(a, b) = (b, a)\ntemp = a\n(a, b) = (b, a)\n(a, b) = (b, a)\na = b\nb = temp\n(a, b) = (b, a)\na = b\nb = temp\na = b\nb = temp",
 "temp = a\n(a, b) = (b, a)\ntemp = b\n(a, b) = (b, a)",
 "temp = a\n(a, b) = (b, a)\ntemp = b\n(a, b) = (b, a)\ntemp = a\n(a, b) = (b, a)\ntemp = b\n(a, b) = (b, a)\ntemp = a\n(a, b) = (b, a)\ntemp = b\n(a, b) = (b, a)",
 "temp = a\n(a, b) = [b, a][::-1]\ntemp = a",
 "temp = a\n(a, b) = [b, a][::-1]\ntemp = b\n(a, b) = [b, a][::-1]",
 "temp = a\n(a, b) = (b, a)\ntemp = a\n(a, b) = (b, a)\ntemp = a\n(a, b) = (b, a)\na = b\nb = temp",
 "temp = a\n(a, b) = (b, a)\ntemp = a\n(a, b) = (b, a)\ntemp = a\n(a, b) = (b, a)\ntemp = a\n(a, b) = (b, a)\na = b\nb = temp",
 "temp = a\n(a, b) = (b, a)\ntemp = a\n(a, b) = (b, a)\ntemp = a\n(a, b) = (b, a)\ntemp = a\n(a, b) = (b, a)\ntemp = a\n(a, b) = (b, a)\na = b\nb = temp",
 "temp = a\n(a, b) = (b, a)\ntemp = a\n(a, b) = (b, a)\n(a, b) = (b, a)\n(a, b) = (b, a)",
 "temp = a\n(a, b) = (b, a)\ntemp = a\n(a, b) = (b, a)\n(a, b) = (b, a)\n(b, a) = (a, b)\n(a, b) = (b, a)\na = b\nb = temp\n(a, b) = (b, a)\na = b\nb = temp",
 "temp = a\n(a, b) = (b, a)\ntemp = a\n(a, b) = (b, a)\n(a, b) = (b, a)\n(b, a) = (a, b)\n(a, b) = (b, a)\na = b\nb = temp\n(a, b) = (b, a)\na = b\nb = temp\n(a, b) = (b, a)\na = b\nb = temp",
 "temp = a\n(a, b) = (b, a)\ntemp = a\n(a, b) = (b, a)\n(a, b) = (b, a)\n(b, a) = (a, b)\n(a, b) = (b, a)\na = b\nb = temp\n(a, b) = (b, a)\na = b\nb = temp\n(a, b) = (b, a)\na = b\nb = temp\n(a, b) = (b, a)\na = b\nb = temp",
 "temp = a\n(a, b) = (b, a)\ntemp = a\n(a, b) = (b, a)\na = b\nb = temp\n(a, b) = (b, a)",
 "temp = a\n(a, b) = (b, a)\n(a, b) = (b, a)\n(a, b) = (b, a)\n(a, b) = (b, a)\n(a, b) = (b, a)\n(a, b) = (b, a)",
 "temp = a\n(a, b) = (b, a)\n(a, b) = (b, a)\n(a, b) = (b, a)\n(a, b) = (b, a)\n(a, b) = (b, a)\n(a, b) = (b, a)\n(a, b) = (b, a)\n(a, b) = (b, a)",
 "temp = a\n(a, b) = (b, a)\n(a, b) = (b, a)\n(a, b) = (b, a)\n(a, b) = (b, a)\n(a, b) = (b, a)\n(a, b) = (b, a)\n(a, b) = (b, a)\n(a, b) = (b, a)\n(a, b) = (b, a)\n(a, b) = (b, a)",
 "temp = a\n(a, b) = (b, a)\n(a, b) = (b, a)\n(a, b) = (b, a)\n(a, b) = (b, a)\n(a, b) = (b, a)\n(a, b) = (b, a)\n(a, b) = (b, a)\n(a, b) = (b, a)\n(a, b) = (b, a)\n(a, b) = (b, a)\n(a, b) = (b, a)\n(a, b) = (b, a)",
 "temp = a\n(a, b) = (b, a)[::-1]",
 "temp = a\n(a, b) = tuple([b, a][::-1])",
 "temp = a\n(a, b) = list((b, a)[::-1])",
 "(a, b) = (b, a)\n(a, b) = (b, a)",
 "temp = a\na = b\ntemp = b\ntemp = a\n(a, b) = (a, b)",
 "import numpy as np\n(a, b) = np.flip([a, b])",
 "import numpy as np\n(a, b) = np.array([b, a])",
 "import statistics\n(a, b) = (statistics.median([a, b]), statistics.median([a, b]))",
 "import math\n(a, b) = (math.isqrt(b), math.isqrt(a))",
 "(a, b) = (b, a)\na = a + b\ng = a - b\na = a - b\nb = g",
 "a = b + 0\nb = temp + 0",
 "def swap(a, b):\n    temp = a\n    a = b\n    b = temp\nswap(a, b)",
 "def swap(a, b):\n    (a, b) = (b, a)\nswap(a, b)",
 "x = a\nglobal a, b\na = b\nb = x",
 "import numpy as np\ntemp = a\na = b\nb = temp\ntemp = np.array([a, b])\na = temp[0]\nb = temp[1]",
 "import numpy as np\ntemp_a = a\ntemp_b = b\n(a, b) = np.array([temp_b, temp_a])",
 "(a, b) = sorted([a, b])[len([a, b]) // 2:len([a, b]) // 2 + 2]",
 "a_vals = [a, b]\na_vals.sort()\nhalf_length = len(a_vals) // 2\n(a, b) = sorted(a_vals)[half_length:half_length + 2]",
 "(a, b) = sorted([a, b])[1:3]",
 "(a, b) = (sum([a, b]) / 2, sum([a, b]) / 2)",
 "import numpy as np\n(a, b) = (np.mean([a, b]), np.mean([a, b]))",
 "a_mean = (a + b) / 2\nb_mean = (a + b) / 2\n(a, b) = (a_mean, b_mean)",
 "(a, b) = (a + b) / 2\n(a, b) = (a, b)",
 "import numpy as np\nfinal = np.random.permutation([a, b])[1]\na = final[0]\nb = final[1]",
 "import numpy as np\n(a, b) = np.array([b, a])\n(a, b)",
 "import numpy as np\ntemp = np.copy(a)\na = np.copy(b)\nb = temp\n(a, b)",
 "temp = a\na = b\nb = temp\na = a + b\ng = a - b\na = a - b\nb = g",
 "(temp1, temp2) = (b, a)\na = temp2\nb = temp1",
 "def swap(a, b):\n\n    def inner_swap(a, b):\n        temp = a\n        a = b\n        b = temp\n    inner_swap(a, b)\nswap(a, b)",
 "def swap(a, b):\n    temp = a\n    a = b\n    b = temp",
 "a ^= b\nb ^= a\na ^= b",
 "import numpy as np\n(a, b) = np.roll([a, b], 1)",
 "temp = a\n(t, temp) = (b, temp)\na = (t + b, -(t - b))\nb = t - b",
 "temp = a\na = b\nb = temp\n[a, b] = [b, a]",
 "temp = a\na = b\nb = temp\n[a, b] = [a, b][::-1]",
 "temp = a\na = b\nb = temp\n[a, b] = [b, a]\ntemp = [a, b]\na = temp[0]\nb = temp[1]",
 "temp_a = a\ntemp_b = b\na = temp_b\nb = temp_a\n[a, b] = [b, a]",
 "import numpy as np\n(a, b) = (np.copy(b), np.copy(a))",
 "import numpy as np\na *= b\nb *= a",
 "import numpy as np\n(a[:], b[:]) = (b[:], a[:])",
 "import numpy as np\ntemp = np.copy(a)\na = np.copy(b)\nb = np.copy(temp)",
 "[a, b] = sorted([b, a])[slice(len([a, b]) // 2, len([a, b]) // 2 + 2)]",
 "(a, b) = sorted([a, b])[0:2]",
 "temp_list = sorted([a, b])\na = temp_list[0]\nb = temp_list[1]",
 "a = min(a, b)\nb = max(a, b)",
 "import math\na_vals = [a, b]\na_vals.sort()\nhalf_length = math.floor(len(a_vals) / 2)\na = a_vals[half_length]\nb = a_vals[half_length + 1]",
 "temp = sorted([a, b])\na = temp[1]\nb = temp[2]",
 "(a, b) = sorted([a, b])\n(a, b) = (a, b)",
 "if a > b:\n    (a, b) = (b, a)\na = p\nb = p",
 "a = a / 2\nb = b / 2\n(a, b)",
 "(a, b) = ((a + b) / 2, (a + b) / 2)\na\nb",
 "a = (a + b) / 2\nb = (a + b) / 2\na\nb",
 "import math\n(a, b) = (math.ceil((a + b) / 2), math.ceil((a + b) / 2))\n(a, b)",
 "(a, b) = ((a + b) / 2, (a + b) / 2)",
 "(a, b) = (sum([a, b]) / len([a, b]), sum([a, b]) / len([a, b]))",
 "(a, b) = (a / 2 + b / 2, a / 2 + b / 2)",
 "(a, b) = (a * 0.5 + b * 0.5, a * 0.5 + b * 0.5)",
 "a = a ^ b\nb = a ^ b\na = a ^ b",
 "a = a * b\nb = a / b\na = a / b",
 "a = a * b\nb = a // b\na = a // b",
 "import math\n(a, b) = (math.sqrt(b), math.sqrt(a))",
 "temp = a\na = b\nb = a + b - a",
 "temp = (a, b)\na = temp[0]\nb = temp[1]",
 "temp = a\na = a ^ b\nb = temp ^ b\na = temp ^ b",
 "temp = a\na = b\nb = temp\na = a ^ b\nb = a ^ b\na = a ^ b",
 "temp = a\na = b\nb = temp\n(a, b) = (b, a)\na = a ^ b\nb = a ^ b\na = a ^ b",
 "temp = a\na = a * b\nb = temp / b",
 "import math\n(a, b) = (math.gcd(a, b), a * b // math.gcd(a, b))",
 "(a, b) = divmod(a, b)\n(a, b) = (b, a)",
 "(a, b) = (b, a)\n(a, b) = divmod(a, b)",
 "temp = a\na = b\nb = temp\n(a, b) = divmod(a, b)",
 "(a, b) = divmod(a, b)\n(a, b) = (b, a)\n(a, b) = divmod(a, b)",
 "(a, b) = (b, a)\n(a, b) = divmod(a, b)\n(a, b) = (b, a)",
 "(a, b) = (b, a + b - a)",
 "temp = a\n(a, b) = (b, a + b - a)",
 "temp = a\na = b\nb = a + b",
 "temp = a\n(a, b) = (b, a + b)",
 "(b, a) = (a + b, b)",
 "temp = (a, b)\na = b\nb = a",
 "temp = (a, b)\n(a, b) = (temp[0], temp[1])",
 "import random\n(a, b) = random.sample([a, b], 2)",
 "import itertools\n(a, b) = itertools.permutations([a, b])",
 "temp = a\nb = a + b\na = b - a\nb = b - a",
 "a += b\nb = a - b\na -= b",
 "temp = a\na = b\nb = temp\na = a + b",
 "temp = a\na = b\nb = temp\na = a - b",
 "temp = a\na = b\nb = temp\na = a * b",
 "temp = a\na = b\nb = temp\na = a / b",
 "temp = a\na = b\nb = temp\na = a + b\nb = a - b\na = a - b",
 "import numpy as np\ntemp = a\na = b\nb = temp\na = np.bitwise_xor(a, b)\nb = np.bitwise_xor(a, b)\na = np.bitwise_xor(a, b)",
 "temp = a\na = b\nb = temp\na = a ^ b",
 "(a, b) = (b, a)\na = a ^ b\nb = a ^ b\na = a ^ b",
 "temp = a\nb = b / a\na = a * b",
 "temp = a\nb = b * a\na = a * b",
 "import math\na_gcd = math.gcd(a, b)\na_lcm = a * b // a_gcd\n(a, b) = (a_gcd, a_lcm)",
 "import math\n(a_temp, b_temp) = (math.gcd(a, b), a * b // math.gcd(a, b))\na = a_temp\nb = b_temp",
 "(a, b) = divmod(b, a)\n(a, b) = divmod(a, b)",
 "(a, b) = divmod(a, b)",
 "temp = a\na = b\nb = a // b",
 "temp = a\na = b\nb = a % b",
 "import numpy as np\ntemp = a\na = b\nb = temp\n(a, b) = np.divmod(a, b)",
 "temp = a\n(a, b) = (b, a)\n(a, b) = divmod(a, b)",
 "temp = a\n(a, b) = (b, a)\n(a, b) = divmod(a, b)\n(a, b) = (b, a)",
 "temp = a\na = b\nb = temp\n(a, b) = (b, a)\n(a, b) = divmod(a, b)",
 "temp = a\n(a, b) = (b, a)\n(a, b) = divmod(a, b)\n(a, b) = (b, a)\n(a, b) = divmod(a, b)",
 "temp = a\ntemp = a % b\na = b\nb = temp",
 "temp = a\n(a, b) = divmod(b, a)\n(a, b) = (b, a)",
 "temp = divmod(a, b)\na = temp[1]\nb = temp[0]",
 "temp = a\na = b\nb = b - temp",
 "from math import sqrt\na = sqrt(b)\nb = sqrt(a)",
 "import math\nsqrt = math.sqrt\na = sqrt(b)\nb = sqrt(a)",
 "import math\nfrom math import sqrt\na = math.sqrt(b)\nb = sqrt(a)",
 "from math import sqrt\nimport math\na = sqrt(b)\nb = math.sqrt(a)",
 "import math\nimport math\nsqrt = math.sqrt\na = sqrt(b)\nsqrt = math.sqrt\nb = sqrt(a)",
 "import math\nimport math\na = math.sqrt(b)\nsqrt = math.sqrt\nb = sqrt(a)",
 "from math import sqrt\nimport math\na = sqrt(b)\nsqrt = math.sqrt\nb = sqrt(a)",
 "(a, b) = (a + b - a, b)",
 "(a, b) = (a + b - a, a + b - a + b)",
 "(a, b) = (b, a + b)",
 "(a, b) = (a + b, a + b - a)",
 "(a, b) = (a + b - a + b, b)",
 "(a, b) = (a + b - a + b, a + b - a)",
 "temp = a\nb = a + b - a\na = b",
 "temp = a\nb = a + b - a\na = b - a + b",
 "temp = a\n(a, b) = (b, b - a)",
 "temp = a\n(a, b) = (a + b - a, b)",
 "temp = a\n(a, b) = (a + b, b)",
 "temp = a\n(a, b) = (b - a, b)",
 "temp = a\na = b\nb = a * b",
 "temp = a\na = b\nb = a / b",
 "temp = a\na = b\nb = a ** b",
 "(temp, a, b) = (a, b, a + b)",
 "temp = a\n(a, b) = (b, a + b + temp)",
 "temp = a\n(a, b) = (b, a + b + temp + temp)",
 "temp = a\n(a, b) = (b, a + b + temp + temp + temp)",
 "temp = a\n(a, b) = (b, a + b + temp + temp + temp + temp)",
 "temp = a\n(a, b) = (b, a + b + temp + temp + temp + temp + temp)",
 "temp = a\n(a, b) = (b, a + b + temp + temp + temp + temp + temp + temp)",
 "temp = a\n(a, b) = (b, a + b + temp + temp + temp + temp + temp + temp + temp)",
 "temp = a\n(a, b) = (b, a + b + temp + temp + temp + temp + temp + temp + temp + temp)",
 "temp = a\n(a, b) = (b, a + b + temp + temp + temp + temp + temp + temp + temp + temp + temp)",
 "temp = a\n(a, b) = (b, a + b + temp + temp + temp + temp + temp + temp + temp + temp + temp + temp)",
 "temp = a\n(a, b) = (b, a + b + temp + temp + temp + temp + temp + temp + temp + temp + temp + temp + temp)",
 "temp = a\n(a, b) = (b, a + b + temp + temp + temp + temp + temp + temp + temp + temp + temp + temp + temp + temp)",
 "temp = a\n(a, b) = (b, a + b + temp + temp + temp + temp + temp + temp + temp + temp + temp + temp + temp + temp + temp)",
 "temp = a\n(a, b) = (b, a + b + temp + temp + temp + temp + temp + temp + temp + temp + temp + temp + temp + temp + temp + temp)",
 "temp = a\n(a, b) = (b, a + b + temp + temp + temp + temp + temp + temp + temp + temp + temp + temp + temp + temp + temp + temp + temp)",
 "temp = a\n(a, b) = (b, a + b + temp + temp + temp + temp + temp + temp + temp + temp + temp + temp + temp + temp + temp + temp + temp + temp)",
 "temp = a\n(a, b) = (b, a + b + temp + temp + temp + temp + temp + temp + temp + temp + temp + temp + temp + temp + temp + temp + temp + temp + temp)",
 "temp = a\n(a, b) = (b, a + b + temp + temp + temp + temp + temp + temp + temp + temp + temp + temp + temp + temp + temp + temp + temp + temp + temp + temp)"
]