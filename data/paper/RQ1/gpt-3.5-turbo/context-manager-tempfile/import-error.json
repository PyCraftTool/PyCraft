[
 "\nwith tempfile.TemporaryDirectory() as temp_dir:\n    file = temp_dir + '/features.json'\n    f = open(file, 'w')\n    f.write(content)",
 "import tempfile\nwith tempfile.TemporaryDirectory() as temp_dir:\n    file = os.path.join(temp_dir, 'features.json')\n    with open(file, 'w') as f:\n        f.write(content)",
 "import os\ntemp_dir = tempfile.mkdtemp()\nfile = os.path.join(temp_dir, 'features.json')\nf = open(file, 'w')\nf.write(content)",
 "import shutil\ntemp_dir = 'temp'\nshutil.rmtree(temp_dir, ignore_errors=True)\nos.makedirs(temp_dir)\nfile = os.path.join(temp_dir, 'features.json')\nf = open(file, 'w')\nf.write(content)\nshutil.rmtree(temp_dir)",
 "import uuid\ntemp_dir = 'temp'\nunique_id = str(uuid.uuid4())\nfile = temp_dir + '/features.json'\nf = open(file, 'w')\nf.write(content)\nif os.path.exists(temp_dir):\n    shutil.rmtree(temp_dir)",
 "\ntemp_dir = tempfile.TemporaryDirectory()\nfile = os.path.join(temp_dir.name, 'features.json')\nf = open(file, 'w')\nf.write(content)",
 "import tempfile\nwith tempfile.TemporaryDirectory() as temp_dir:\n    file_path = os.path.join(temp_dir, 'features.json')\n    with open(file_path, 'w') as f:\n        f.write(content)\n    temp_dir = temp_dir\n    file = file_path\n    f = f",
 "import shutil\nimport os\nshutil.rmtree(temp_dir, ignore_errors=True)\nos.makedirs(temp_dir)\nfile = os.path.join(temp_dir, 'features.json')\nf = open(file, 'w')\nf.write(content)\nf.close()\nshutil.rmtree(temp_dir, ignore_errors=True)",
 "import os\nwith os.makedirs(temp_dir, exist_ok=True):\n    file = os.path.join(temp_dir, 'features.json')\n    f = open(file, 'w')\n    f.write(content)",
 "from pathlib import Path\nwith Path(temp_dir).mkdir(parents=True, exist_ok=True):\n    file = temp_dir + '/features.json'\n    f = open(file, 'w')\n    f.write(content)",
 "import shutil\nshutil.rmtree(temp_dir, ignore_errors=True)\nos.makedirs(temp_dir)\nfile = temp_dir + '/features.json'\nf = open(file, 'w')\nf.write(content)",
 "import tempfile\nwith tempfile.TemporaryDirectory() as temp_dir:\n    file = os.path.join(temp_dir, 'features.json')\n    with open(file, 'w') as f:\n        f.write(content)\n        f.close()",
 "import tempfile\nwith tempfile.TemporaryDirectory() as temp_dir:\n    file_path = os.path.join(temp_dir, 'features.json')\n    with open(file_path, 'w') as file:\n        file.write(content)\n    file = file_path\n    f = open(file, 'r')",
 "import tempfile\nwith tempfile.TemporaryDirectory() as temp_dir:\n    file_path = os.path.join(temp_dir, 'features.json')\n    with open(file_path, 'w') as file:\n        file.write(content)\n    file = file_path\n    f = open(file, 'r')\n    f.close()",
 "import tempfile\nwith tempfile.TemporaryDirectory() as temp_dir:\n    file_path = os.path.join(temp_dir, 'features.json')\n    with open(file_path, 'w') as file:\n        file.write(content)\n    file = file_path\n    f = open(file, 'r')\n    content_read = f.read()",
 "import tempfile\nwith tempfile.TemporaryDirectory() as temp_dir:\n    file_path = os.path.join(temp_dir, 'features.json')\n    with open(file_path, 'w') as file:\n        file.write(content)\n    file = file_path\n    f = open(file, 'r')\n    content_read = f.read()\n    f.close()",
 "import tempfile\ndef write_to_temp_file(content):\n    temp_dir = tempfile.TemporaryDirectory()\n    file = temp_dir.name + '/features.json'\n    f = open(file, 'w')\n    f.write(content)\n    f.close()\n    temp_dir.cleanup()\nwrite_to_temp_file(content)",
 "import tempfile\ndef write_to_file(content):\n    temp_dir = tempfile.TemporaryDirectory()\n    file = temp_dir.name + '/features.json'\n    f = open(file, 'w')\n    f.write(content)\n    f.flush()\n    f.close()\n    temp_dir.cleanup()\nwrite_to_file(content)",
 "import tempfile\ntemp_dir = tempfile.TemporaryDirectory()\n\ndef write_content_to_file(content):\n    file_path = temp_dir.name + '/features.json'\n    f = open(file_path, 'w')\n    f.write(content)\n    f.close()\nwrite_content_to_file(content)\ntemp_dir_value = temp_dir.name\nf_value = f\nfile_value = file_path\nwith tempfile.TemporaryDirectory() as temp_dir:\n    file_path = temp_dir.name + '/features.json'\n    with open(file_path, 'w') as f:\n        f.write(content)\n        temp_dir_value = temp_dir.name\n        f_value = f\n        file_value = file_path\nwith tempfile.TemporaryDirectory() as temp_dir:\n    file_path = temp_dir.name + '/features.json'\n    with open(file_path, 'w') as f:\n        f.write(content)\ntemp_dir_value = temp_dir.name\nf_value = f\nfile_value = file_path",
 "import os\nif not os.path.exists(temp_dir):\n    os.makedirs(temp_dir)\nfile = os.path.join(temp_dir, 'features.json')\nf = open(file, 'w')\nf.write(content)\nf.close()",
 "import os\nos.makedirs(temp_dir, exist_ok=True)\nfile = os.path.join(temp_dir, 'features.json')\nf = open(file, 'w')\nf.write(content)\nf.close()",
 "import os\nos.makedirs(temp_dir, exist_ok=True)\nfile = os.path.join(temp_dir, 'features.json')\nwith open(file, 'w') as f:\n    f.write(content)",
 "import os\ntry:\n    os.makedirs(temp_dir)\nexcept FileExistsError:\n    pass\nfile = os.path.join(temp_dir, 'features.json')\nf = open(file, 'w')\nf.write(content)\nf.close()",
 "import os\nif not os.path.exists(temp_dir):\n    os.makedirs(temp_dir)\nfile = os.path.join(temp_dir, 'features.json')\nwith open(file, 'w') as f:\n    f.write(content)",
 "import os\nos.makedirs(temp_dir, exist_ok=True)\nfile = temp_dir + '/features.json'\nf = open(file, 'w')\nf.write(content)",
 "import os\nos.makedirs(temp_dir, exist_ok=True)\nfile = f'{temp_dir}/features.json'\nf = open(file, 'w')\nf.write(content)",
 "import os\nos.makedirs(temp_dir, exist_ok=True)\nfile = temp_dir + '/features.json'\nf = open(file, 'w')\nf.write(content)\nf.close()",
 "import os\nos.makedirs(temp_dir, exist_ok=True)\nfile = temp_dir + '/features.json'\nwith open(file, 'w') as f:\n    f.write(content)",
 "import os\nos.makedirs(temp_dir, exist_ok=True)\nfile = temp_dir + '/features.json'\nwith open(file, 'w') as f:\n    f.write(content)\nf.close()",
 "import os\nos.makedirs(temp_dir, exist_ok=True)\nfile = temp_dir + '/features.json'\nwith open(file, 'w') as f:\n    f.write(content)\n    f.close()",
 "import os\nos.makedirs(temp_dir, exist_ok=True)\nfile = temp_dir + '/features.json'\nwith open(file, 'w') as f:\n    f.write(content)\n    f.flush()",
 "import os\nos.makedirs(temp_dir, exist_ok=True)\nfile = temp_dir + '/features.json'\nwith open(file, 'w') as f:\n    f.write(content)\n    f.flush()\n    f.close()",
 "import os\nos.makedirs(temp_dir, exist_ok=True)\nfile = temp_dir + '/features.json'\nwith open(file, 'w') as f:\n    f.write(content)\n    f.flush()\n    f.close()\n    f = open(file, 'r')",
 "import os\nos.makedirs(temp_dir, exist_ok=True)\nfile = temp_dir + '/features.json'\nwith open(file, 'w') as f:\n    f.write(content)\n    f.flush()\n    f.close()\n    f = open(file, 'r')\n    file_content = f.read()",
 "import os\nos.makedirs(temp_dir, exist_ok=True)\nfile = temp_dir + '/features.json'\nwith open(file, 'w') as f:\n    f.write(content)\n    f.flush()\n    f.close()\n    f = open(file, 'r')\n    file_content = f.read()\nf.close()",
 "import os\nos.makedirs(temp_dir, exist_ok=True)\nfile = temp_dir + '/features.json'\nwith open(file, 'w') as f:\n    f.write(content)\n    f.flush()\n    f.close()\n    f = open(file, 'r')\n    file_content = f.read()\nf.close()\nfile_content",
 "import os\nos.makedirs(temp_dir, exist_ok=True)\nwith open(temp_dir + '/features.json', 'w') as f:\n    f.write(content)",
 "import shutil\nimport os\nshutil.rmtree(temp_dir, ignore_errors=True)\nos.makedirs(temp_dir)\nfile = temp_dir + '/features.json'\nf = open(file, 'w')\nf.write(content)\nf.close()",
 "import shutil\nimport os\nshutil.rmtree(temp_dir, ignore_errors=True)\nos.makedirs(temp_dir)\nfile = os.path.join(temp_dir, 'features.json')\nf = open(file, 'w')\nf.write(content)",
 "import shutil\nimport os\nshutil.rmtree(temp_dir, ignore_errors=True)\nos.makedirs(temp_dir)\nfile = os.path.join(temp_dir, 'features.json')\nf = open(file, 'w')\nf.write(content)\nf.close()",
 "import shutil\nimport os\nshutil.rmtree(temp_dir, ignore_errors=True)\nos.makedirs(temp_dir)\nfile = os.path.join(temp_dir, 'features.json')\nf = open(file, 'w')\nf.write(content)\nf.close()\nfile_size = os.path.getsize(file)",
 "\nf = open(os.path.join(tempfile.TemporaryDirectory().name, 'features.json'), 'w')\nf.write(content)\nfile_path = f.name",
 "import itertools\nimport tempfile\nimport os\nfile = os.path.join(temp_dir.name, 'features.json')\nf = open(file, 'w')\nf.write(content)\nfile_path = file",
 "import tempfile\nimport os\ndef write_file(path, content):\n    with open(path, 'w') as f:\n        f.write(content)\n\ndef write_content(content):\n    temp_dir = tempfile.TemporaryDirectory()\n    file = os.path.join(temp_dir.name, 'features.json')\n    write_file(file, content)\n    return (f, temp_dir, file)\n(f, temp_dir, file) = write_content(content)",
 "import tempfile\nimport os\ndef write_file(path, content):\n    with open(path, 'w') as f:\n        f.write(content)\n\ndef write_content(content):\n    temp_dir = tempfile.TemporaryDirectory()\n    file = os.path.join(temp_dir.name, 'features.json')\n    write_file(file, content)\n    return (f, temp_dir, file)\ncontent = 'example content'\n(f, temp_dir, file) = write_content(content)",
 "import tempfile\nimport os\ndef create_file(temp_dir, content):\n    file = os.path.join(temp_dir, 'features.json')\n    f = open(file, 'w')\n    f.write(content)\ncreate_file(tempfile.mkdtemp(), content)",
 "import os\nimport json\ntry:\n    temp_dir = tempfile.mkdtemp()\n    file_path = os.path.join(temp_dir, 'features.json')\n    with open(file_path, 'w') as file:\n        json.dump(content, file)\nfinally:\n    os.remove(file_path)\n    os.rmdir(temp_dir)",
 "from tempfile import TemporaryDirectory\nfrom pathlib import Path\ndef write_features_to_temp_file(content):\n    with TemporaryDirectory() as temp_dir:\n        file = Path(temp_dir) / 'features.json'\n        file.write_text(content)\nwrite_features_to_temp_file(content)",
 "import os\ntemp_dir = os.path.join(os.path.dirname(__file__), 'temp')\nos.makedirs(temp_dir, exist_ok=True)\nfile = os.path.join(temp_dir, 'features.json')\nf = open(file, 'w')\nf.write(content)",
 "import tempfile\nimport shutil\ntry:\n    temp_dir = tempfile.mkdtemp()\n    file = os.path.join(temp_dir, 'features.json')\n    f = open(file, 'w')\n    f.write(content)\nfinally:\n    shutil.rmtree(temp_dir)",
 "import os\ntry:\n    temp_dir = os.makedirs('temp')\n    file = os.path.join(temp_dir, 'features.json')\n    f = open(file, 'w')\n    f.write(content)\nfinally:\n    os.removedirs(temp_dir)",
 "import tempfile\nwith tempfile.TemporaryDirectory() as temp_dir:\n    file = os.path.join(temp_dir, 'features.json')\n    f = open(file, 'w')\n    f.write(content)\n    f.flush()",
 "import os\ntemp_dir = tempfile.TemporaryDirectory()\nfile = os.path.join(temp_dir, 'features.json')\nf = open(file, 'w')\nf.writelines(content)\ntemp_dir.cleanup()",
 "from pathlib import Path\nwith tempfile.TemporaryDirectory() as temp_dir:\n    file = Path(temp_dir.name) / 'features.json'\n    f = open(file, 'w')\n    f.write(content)",
 "import os\ntemp_dir = os.path.join(os.path.dirname(__file__), 'temp')\nos.makedirs(temp_dir, exist_ok=True)\nfile = os.path.join(temp_dir, 'features.json')\nf = open(file, 'w')\nf.write(content)\nf.close()",
 "import os\ndef create_temp_dir(path):\n    os.makedirs(path, exist_ok=True)\ntemp_dir = os.path.join(os.path.dirname(__file__), 'temp')\ncreate_temp_dir(temp_dir)\nfile = os.path.join(temp_dir, 'features.json')\nf = open(file, 'w')\nf.write(content)",
 "import os\nfrom pathlib import Path\npath = Path(__file__).resolve().parent\npath.joinpath('temp').mkdir(exist_ok=True)\nfile = path.joinpath('temp', 'features.json')\nf = open(file, 'w')\nf.write(content)",
 "import os\nwith tempfile.NamedTemporaryFile() as temp_file:\n    temp_dir = os.path.dirname(temp_file.name)\n    file = os.path.join(temp_dir, 'features.json')\n    f = open(file, 'w')\n    f.write(content)",
 "import shutil\ntemp_dir = tempfile.mkdtemp()\nfile = os.path.join(temp_dir, 'features.json')\nf = open(file, 'w')\nf.write(content)\nshutil.rmtree(temp_dir)",
 "import os\ntemp_dir = tempfile.mkdtemp()\nfile = os.path.join(temp_dir, 'features.json')\nf = open(file, 'w')\nf.write(content)\nos.rmdir(temp_dir)",
 "import tempfile\nimport shutil\ntemp_dir = tempfile.mkdtemp()\nfile = os.path.join(temp_dir, 'features.json')\nshutil.move(file, f)\nshutil.rmtree(temp_dir)",
 "import os\ntemp_dir = tempfile.TemporaryDirectory()\nfile_name = 'features.json'\nfile_path = os.path.join(temp_dir.name, file_name)\nf = open(file_path, 'w')\nf.write(content)\ntemp_dir.cleanup()",
 "import os\nimport tempfile\ndef write_to_temp_file(content):\n    with tempfile.TemporaryDirectory() as temp_dir:\n        file = os.path.join(temp_dir, 'features.json')\n        f = open(file, 'w')\n        f.write(content)\nwrite_to_temp_file(content)",
 "import os\nimport tempfile\ndef write_to_temp_file(content):\n    temp_dir = tempfile.TemporaryDirectory()\n    temp_dir_path = temp_dir.name\n    file = os.path.join(temp_dir_path, 'features.json')\n    f = open(file, 'w')\n    f.write(content)\n    temp_dir.cleanup()\nwrite_to_temp_file(content)",
 "import pathlib\ntemp_dir = pathlib.Path(tempfile.gettempdir())\nfile = temp_dir / 'features.json'\nf = open(file, 'w')\nf.write(content)",
 "from pathlib import Path\ntemp_dir = Path(tempfile.TemporaryDirectory().name)\nfile = temp_dir / 'features.json'\nf = open(file, 'w')\nf.write(content)",
 "import tempfile\ntemp_dir = pathlib.Path(tempfile.TemporaryDirectory().name)\nfile = temp_dir / 'features.json'\nwith open(file, 'w') as f:\n    f.write(content)",
 "from tempfile import mkdtemp\nimport os\nshutil.rmtree(temp_dir)\ntemp_dir = mkdtemp()\nfile = os.path.join(temp_dir, 'features.json')\nf = open(file, 'w')\nf.write(content)",
 "from tempfile import mkdtemp\nimport os\ndef remove_dir(tmp_dir):\n    shutil.rmtree(tmp_dir)\ntemp_dir = MKDtemp()\ntemp_dir_exit = atexit.register(remove_dir, temp_dir)\nfile = os.path.join(temp_dir, 'features.json')\nf = open(file, 'w')\nf.write(content)",
 "import tempfile\nimport random\nwith tempfile.TemporaryDirectory() as temp_dir:\n    filename = ''.join(random.choices(string.ascii_lowercase, k=10)) + '.json'\n    filepath = os.path.join(temp_dir, filename)\n    with open(filepath, 'w') as f:\n        f.write(content)",
 "import pathlib\ntemp_dir = pathlib.Path(tempfile.gettempdir())\nfile = (temp_dir / 'features.json').resolve()\nwith open(file, 'w') as f:\n    f.write(content)",
 "import tempfile\nwith tempfile.TemporaryDirectory() as temp_dir:\n    file = os.path.join(temp_dir, 'features.json')\n    f = open(file, 'w')\n    f.write(content)\n    os.rmdir(temp_dir)",
 "import tempfile\nwith tempfile.TemporaryDirectory() as temp_dir:\n    file_path = os.path.join(temp_dir, 'features.json')\n    with open(file_path, 'w') as f:\n        f.write(content)\n        os.rmdir(temp_dir)",
 "import pathlib\ntemp_dir = pathlib.Path(tempfile.mkdtemp())\nfile = temp_dir / 'features.json'\nf = file.open('w')\nf.write(content)\nos.rmdir(temp_dir)",
 "import contextlib\nclass TemporaryDirectory:\n\n    def __enter__(self):\n        self.temp_dir = tempfile.mkdtemp()\n        self.file_path = os.path.join(self.temp_dir, 'features.json')\n        return (self.temp_dir, self.file_path)\n\n    def __exit__(self, exc_type, exc_value, traceback):\n        os.rmdir(self.temp_dir)\nwith TemporaryDirectory() as (temp_dir, file):\n    f = open(file, 'w')\n    f.write(content)",
 "import tempfile\nimport shutil\nimport os\nfile = os.path.join(tempfile.mkdtemp(), 'features.json')\nshutil.move(file, f)\nshutil.rmtree(tempfile.mkdtemp())",
 "import tempfile\nimport shutil\nimport os\ndef move_file(file_path, dest_dir):\n    temp_dir = tempfile.mkdtemp()\n    file = os.path.join(temp_dir, file_path)\n    shutil.move(file, dest_dir)\n    shutil.rmtree(temp_dir)\nmove_file('features.json', f)",
 "\ndef move_file(temp_dir, file_path, dest_dir):\n    file = os.path.join(temp_dir, file_path)\n    shutil.move(file, dest_dir)\n\ndef delete_temp_dir(temp_dir):\n    shutil.rmtree(temp_dir)\ntemp_dir = tempfile.mkdtemp()\nfile = os.path.join(temp_dir, 'features.json')\nmove_file(temp_dir, 'features.json', f)\ndelete_temp_dir(temp_dir)",
 "\ndef move_and_delete_file(temp_dir, file_path, dest_dir):\n    with tempfile.TemporaryDirectory() as temp:\n        file = os.path.join(temp_dir, file_path)\n        shutil.move(file, dest_dir)\nshutil.rmtree(temp_dir)\ntemp_dir = tempfile.mkdtemp()\nfile = os.path.join(temp_dir, 'features.json')\nmove_and_delete_file(temp_dir, 'features.json', f)",
 "import os\npath = os.getcwd()\ntemp_dir = os.path.join(path, 'temp_dir')\nif not os.path.exists(temp_dir):\n    os.makedirs(temp_dir)\nfile = os.path.join(temp_dir, 'features.json')\nf = open(file, 'w')\nf.write(content)\nof.close()\nshutil.rmtree(temp_dir)",
 "import tempfile, os\nfile = os.path.join(temp_dir, 'features.json')\nwith open(file, 'w') as f:\n    f.write(content)"
]