[
 "\n{'code': \"temp_dir = tempfile.mkdtemp()\\nfile = tempfile.NamedTemporaryFile(dir=temp_dir)\\nfile.write(content)\\nfile.close()\\nf = open(file.name, 'r')\\ncontent = f.read()\\nf.close()\", 'explanation': 'Use mkdtemp() to create a temporary directory and NamedTemporaryFile() to create a temporary file in the directory. Close the file after writing to it, then open the file again to read the content.', 'level': 'beginner'}",
 "\n{'code': \"import tempfile\\nwith tempfile.NamedTemporaryDirectory() as temp_dir:\\n    file = tempfile.NamedTemporaryFile(dir=temp_dir)\\n    file.write(content)\\n    file.close()\\nf = open(file.name, 'r')\\ncontent = f.read()\\nf.close()\", 'explanation': 'Use the tempfile module to create a temporary directory and temporary file. Close the file after writing to it, then open the file again to read the content.', 'level': 'intermediate'}",
 "\n{'code': \"import tempfile\\nwith tempfile.NamedTemporaryDirectory() as temp_dir:\\n    file = open(temp_dir + '/features.json', 'w')\\n    file.write(content)\\n    file.close()\\nf = open(file.name, 'r')\\ncontent = f.read()\\nf.close()\", 'explanation': 'Use the tempfile module to create a temporary directory and temporary file. Close the file after writing to it, then open the file again to read the content.', 'level': 'expert'}",
 "\n{'code': 'from tempfile import TemporaryDirectory\\ntemp_dir = TemporaryDirectory()\\nfile = tempfile.NamedTemporaryFile(delete=False, dir=temp_dir.name)\\nfile.write(content)\\nfile.close()\\ntemp_dir.cleanup()', 'temp_dir': 'temp_dir', 'f': 'file', 'file': 'file'}",
 "\n{'code': 'from tempfile import NamedTemporaryFile, TemporaryDirectory\\ntemp_dir = TemporaryDirectory()\\nfile = NamedTemporaryFile(delete=False, dir=temp_dir.name)\\nfile.write(content)\\nfile.close()\\ntemp_dir.cleanup()', 'temp_dir': 'temp_dir', 'f': 'file', 'file': 'file'}",
 "\n{'code': 'import tempfile\\ntemp_dir = tempfile.TemporaryDirectory()\\nf = tempfile.NamedTemporaryFile(delete=False, dir=temp_dir.name)\\nf.write(content)\\nf.close()\\ntemp_dir.cleanup()', 'temp_dir': 'temp_dir', 'f': 'f', 'file': 'file'}",
 "\n{'code': 'import tempfile\\n\\ntemp_dir = tempfile.TemporaryDirectory()\\nfile = tempfile.NamedTemporaryFile(delete=False, dir=temp_dir.name)\\nfile.write(content)\\nfile.close()\\ntemp_dir.cleanup()\\n', 'temp_dir': 'temp_dir', 'f': 'file', 'file': 'file'}",
 "\n{'code': \"\\nimport tempfile\\n\\ndef write_content(file, content):\\n    file.write(content)\\n\\ndef main():\\n    temp_dir = tempfile.TemporaryDirectory()\\n    file = tempfile.NamedTemporaryFile(delete=False, dir=temp_dir.name)\\n    write_content(file, content)\\n    file.close()\\n    temp_dir.cleanup()\\n\\nif __name__ == '__main__':\\n    main()\\n\", 'temp_dir': 'temp_dir', 'f': 'file', 'file': 'file'}",
 "\n{'code': \"\\nfrom tempfile import NamedTemporaryFile\\n\\ndef write_content(file, content):\\n    file.write(content)\\n\\ndef main():\\n    temp_dir = NamedTemporaryFile()\\n    file = tempfile.NamedTemporaryFile(delete=False, dir=temp_dir.name)\\n    write_content(file, content)\\n    file.close()\\n    temp_dir.cleanup()\\n\\nif __name__ == '__main__':\\n    main()\\n\", 'temp_dir': 'temp_dir', 'f': 'file', 'file': 'file'}",
 "\n{'code': '\\nwith tempfile.NamedTemporaryFile(delete=False, dir=os.getcwd()) as f:\\n    f.write(content)\\n    f.close()\\n', 'temp_dir': 'os.getcwd()', 'f': 'f', 'file': 'f'}",
 "\n{'code': '\\nimport tempfile\\ntemp_dir = tempfile.mkdtemp()\\nf = tempfile.NamedTemporaryFile(dir=temp_dir, delete=False)\\nfile = f.name\\n', 'dependent_libraries': ['tempfile']}",
 "\n{'code': '\\ntemp_dir = tempfile.mkdtemp()\\nf = tempfile.NamedTemporaryFile(dir=temp_dir, delete=False)\\nf.close()\\nfile = f.name\\n', 'dependent_libraries': ['tempfile']}",
 "\n{'code': '\\nwith tempfile.NamedTemporaryFile(dir=temp_dir, delete=False) as f:\\n    file = f.name\\n', 'dependent_libraries': ['tempfile']}",
 "\n{'code': '\\nwith tempfile.NamedTemporaryFile() as f:\\n    file = f.name\\n', 'dependent_libraries': ['tempfile']}",
 "\n{'code': \"import tempfile\\nwith tempfile.TemporaryDirectory() as temp_dir:\\n    file = os.path.join(temp_dir, 'features.json')\\n    f = open(file, 'w')\\n    f.write(content)\", 'type': 'intermediate', 'imports': ['tempfile', 'os']}",
 "\n{'code': \"with tempfile.TemporaryDirectory() as temp_dir:\\n    file = os.path.join(temp_dir, 'features.json')\\n    f = open(file, 'w')\\n    f.write(content)\\n    print(file)\", 'type': 'expert', 'imports': ['tempfile', 'os']}",
 "\n{'code': \"import tempfile\\nwith tempfile.TemporaryDirectory() as temp_dir:\\n    file = temp_dir + '/features.json'\\n    f = open(file, 'w')\\n    f.write(content)\\n\", 'type': 'beginner', 'imports': ['tempfile']}",
 "\n{'code': \"import tempfile\\nwith tempfile.TemporaryDirectory() as temp_dir:\\n    file = os.path.join(temp_dir, 'features.json')\\n    f = open(file, 'w')\\n    f.write(content)\\n\", 'type': 'intermediate', 'imports': ['tempfile', 'os']}",
 "\n{'code': 'import tempfile\\nwith tempfile.NamedTemporaryFile() as f:\\n    f.write(content)\\n    f.flush()\\n    file = f.name\\n', 'type': 'expert', 'imports': ['tempfile']}",
 "\n{'code': \"import tempfile, json\\nwith tempfile.NamedTemporaryFile(delete=False) as f:\\n    f.write(content)\\ntemp_dir = f.name + '/features.json'\\nf.close()\\nwith open(temp_dir, 'r') as f:\\n    data = json.load(f)\", 'type': 'beginner', 'dependencies': ['tempfile', 'json']}",
 "\n{'code': \"import tempfile, json\\nwith tempfile.NamedTemporaryFile(delete=False) as f:\\n    f.write(content)\\ntemp_dir = f.name + '/features.json'\\nf.close()\\nwith open(temp_dir, 'r') as f:\\n    data = json.load(f)\\nprint(data)\", 'type': 'intermediate', 'dependencies': ['tempfile', 'json']}",
 "\n{'code': \"import tempfile, json\\nwith tempfile.NamedTemporaryFile(delete=False) as f:\\n    f.write(content)\\ntemp_dir = f.name + '/features.json'\\nf.close()\\nwith open(temp_dir, 'r') as f:\\n    data = json.load(f)\\nprint(data['name'])\", 'type': 'expert', 'dependencies': ['tempfile', 'json']}",
 "\n{'code': \"import tempfile\\ntemp_dir = tempfile.mkdtemp()\\nfile = temp_dir + '/features.json'\\nf = open(file, 'w')\\nf.write(content)\\nf.close()\", 'type': 'beginner', 'imports': ['tempfile']}",
 "\n{'code': \"import tempfile\\ntemp_dir = tempfile.mkdtemp()\\nfile = temp_dir + '/features.json'\\nf = open(file, 'w')\\nf.write(content)\\nf.close()\\nprint(temp_dir)\", 'type': 'intermediate', 'imports': ['tempfile']}",
 "\n{'code': \"\\nimport tempfile\\ntemp_dir = tempfile.mkdtemp()\\nfile = temp_dir + '/features.json'\\nf = open(file, 'w')\\nf.write(content)\\nf.close()\\n\\nprint(f'Temp dir: {temp_dir}')\\nprint(f'File: {file}')\\n\", 'type': 'expert', 'imports': ['tempfile']}",
 "\n{'code': \"import tempfile\\nwith tempfile.NamedTemporaryDirectory() as temp_dir:\\n    file = temp_dir + '/features.json'\\n    f = open(file, 'w')\\n    f.write(content)\\n    f.close()\\n    temp_dir.cleanup()\", 'explanation': 'This is the original code.', 'level': 'beginner'}",
 "\n{'code': \"import tempfile\\nwith tempfile.NamedTemporaryDirectory() as temp_dir:\\n    file = temp_dir + '/features.json'\\n    f = open(file, 'w')\\n    f.write(content)\\n    f.close()\\n    temp_dir.cleanup()\\n\\nprint(temp_dir, file, f)\", 'explanation': \"This code prints the values of the variables 'temp_dir', 'file', and 'f'.\", 'level': 'intermediate'}",
 "\n{'code': \"\\nimport tempfile\\nimport json\\n\\nwith tempfile.NamedTemporaryDirectory() as temp_dir:\\n    file = temp_dir + '/features.json'\\n    f = open(file, 'w')\\n    f.write(json.dumps(content))\\n    f.close()\\n    temp_dir.cleanup()\\n\", 'explanation': 'This code uses the `json` library to convert the content to a JSON string before writing it to the file.', 'level': 'expert'}",
 "\n{'code': \"import tempfile\\nwith tempfile.TemporaryDirectory() as temp_dir:\\n    features_file = os.path.join(temp_dir, 'features.json')\\n    with open(features_file, 'w') as f:\\n        f.write(content)\"}",
 "\n{'code': 'with tempfile.NamedTemporaryFile(delete=False) as f:\\n    f.write(content)\\n    file = f.name'}",
 "\n{'code': 'with tempfile.NamedTemporaryFile() as f:\\n    f.write(content)\\n    file = f.name'}",
 "\n{'code': \"with tempfile.TemporaryDirectory() as temp_dir:\\n    features_file = os.path.join(temp_dir, 'features.json')\\n    f = open(features_file, 'w')\\n    f.write(content)\\n    f.close()\"}",
 "\n{'code': 'with tempfile.NamedTemporaryFile(delete=False) as f:\\n    f.write(content)\\n    f.flush()\\n    file = f.name'}",
 "\n{'code': 'with tempfile.NamedTemporaryFile() as f:\\n    f.write(content)\\n    f.flush()\\n    file = f.name'}",
 "\n{'code': \"temp_dir = tempfile.mkdtemp()\\nfeatures_file = os.path.join(temp_dir, 'features.json')\\nwith open(features_file, 'w') as f:\\n    f.write(content)\"}",
 "\n{'code': \"import tempfile\\nwith tempfile.TemporaryDirectory() as temp_dir:\\n    os.makedirs(temp_dir + '/features')\\n    features_file = os.path.join(temp_dir, 'features.json')\\n    with open(features_file, 'w') as f:\\n        f.write(content)\"}",
 "\n{'code': \"import tempfile\\ntemp_dir = tempfile.TemporaryDirectory()\\nfile = tempfile.mkdtemp(dir=temp_dir)\\ncontent = '{}'\\nwith open(file, 'w') as f:\\n    f.write(content)\", 'temp_dir': 'temp_dir', 'f': 'f', 'file': 'file'}",
 "\n{'code': \"import tempfile\\nwith tempfile.TemporaryDirectory() as temp_dir:\\n    file = tempfile.mkdtemp(dir=temp_dir)\\n    content = '{}'\\n    with open(file, 'w') as f:\\n        f.write(content)\", 'temp_dir': 'temp_dir', 'f': 'f', 'file': 'file'}",
 "\n{'code': \"import tempfile\\nwith tempfile.NamedTemporaryFile() as temp:\\n    temp_dir = temp.name + '/features.json'\\n    file = temp_dir\\n    f = open(file, 'w')\\n    f.write(content)\", 'temp_dir': 'temp_dir', 'f': 'f', 'file': 'file'}",
 "\n{'code': \"import tempfile\\nwith tempfile.NamedTemporaryFile(suffix='.json') as temp:\\n    file = temp.name\\n    f = open(file, 'w')\\n    f.write(content)\", 'temp_dir': 'temp.name', 'f': 'f', 'file': 'file'}",
 "\n{'code': \"with tempfile.NamedTemporaryFile(suffix='.json', dir='.') as temp:\\n    file = temp.name\\n    f = open(file, 'w')\\n    f.write(content)\", 'temp_dir': '.', 'f': 'f', 'file': 'file'}",
 "\n{'code': \"\\nimport tempfile\\nos.makedirs('temp')\\nwith open('temp/features.json', 'w') as f:\\n    f.write(content)\\n\", 'explanation': 'Creates a directory named `temp`, opens a file named `features.json` in that directory and writes the content to the file.'}",
 "\n{'code': \"\\nimport tempfile, os\\nwith tempfile.TemporaryDirectory() as temp_dir:\\n    path = os.path.join(temp_dir, 'features.json')\\n    with open(path, 'w') as f:\\n        f.write(content)\\n\", 'explanation': 'Creates a temporary directory using the `tempfile.TemporaryDirectory()` function, then uses the `os.path.join()` function to create a path to the file. Finally, it opens the file using the `open()` function and writes the content to it.'}",
 "\n{'code': \"\\nwith tempfile.NamedTemporaryFile(mode='w') as f:\\n    f.write(content)\\n    file = f.name\\n\", 'explanation': 'Uses the `tempfile.NamedTemporaryFile()` function to create a temporary file with the `w` mode (write). Then it writes the content to the file and assigns the file name to the `file` variable.'}",
 "\n{'code': \"\\nimport json\\nwith open('features.json', 'w') as f:\\n    json.dump(content, f)\\n\", 'explanation': 'Opens the file `features.json` in write mode and uses the `json.dump()` function to write the content to the file.'}",
 "\n{'code': '\\nwith tempfile.NamedTemporaryFile() as f:\\n    f.write(content)\\n    file = os.path.join(tempfile.gettempdir(), f.name)\\n', 'explanation': 'Uses the `tempfile.NamedTemporaryFile()` function to create a temporary file with the `w` mode (write). Then it assigns the file name to the `file` variable using the `os.path.join()` function.'}",
 "\n{'code': \"\\nimport tempfile\\ntemp_dir = tempfile.mkdtemp()\\nfile = tempfile.NamedTemporaryFile(dir=temp_dir, suffix='.json')\\nfile.write(content)\\nfile.flush()\\nfile.seek(0)\\ncontent = file.read()\\n\", 'explanation': 'A more concise way to write the same logic.'}",
 "\n{'code': \"\\nimport tempfile\\nwith tempfile.TemporaryDirectory() as temp_dir:\\n    with tempfile.NamedTemporaryFile(dir=temp_dir, suffix='.json', delete=False) as f:\\n        f.write(content)\\n        f.flush()\\n        content = f.read()\\n\", 'explanation': 'Using with statement to open and close files automatically.'}",
 "\n{'code': \"\\nimport tempfile\\ntemp_dir = tempfile.mkdtemp()\\nwith open(os.path.join(temp_dir, 'temp.json'), 'w') as f:\\n    f.write(content)\\n    content = f.read()\\n\", 'explanation': 'Using os.path.join to join the path to the temporary directory and the filename.'}",
 "\n{'code': \"\\nimport tempfile\\nimport os\\nimport shutil\\n\\ntemp_dir = tempfile.mkdtemp()\\nfile = os.path.join(temp_dir, 'features.json')\\nwith open(file, 'w') as f:\\n    f.write(content)\\nshutil.rmtree(temp_dir)\\n\", 'type': 'intermediate', 'imports': ['tempfile', 'os', 'shutil']}",
 "\n{'code': \"\\nimport os\\nimport tempfile\\nwith tempfile.TemporaryDirectory() as temp_dir:\\n    file = os.path.join(temp_dir, 'features.json')\\n    with open(file, 'w') as f:\\n        f.write(content)\\n\", 'type': 'beginner', 'imports': ['tempfile', 'os']}",
 "\n{'code': \"\\nimport os\\nimport json\\ndef write_json_file(data, file_path):\\n    with open(file_path, 'w') as f:\\n        json.dump(data, f)\\n\\nwrite_json_file(content, os.path.join(tempfile.mkdtemp(), 'features.json'))\\n\", 'type': 'expert', 'imports': ['os', 'json']}",
 "\n{'code': \"import tempfile,os\\ntemp_dir=tempfile.mkdtemp()\\nfile=os.path.join(temp_dir,'features.json')\\nf=open(file,'w')\\nf.write(content)\\ntemp_dir.cleanup()\", 'is_beginner': False, 'is_intermediate': False, 'is_expert': True}",
 "\n{'code': \"import tempfile\\ntemp_dir=tempfile.TemporaryDirectory()\\nfile=tempfile.NamedTemporaryFile(suffix='.json')\\nfile.write(content)\\nfile.flush()\\ntemp_dir.cleanup()\", 'is_beginner': False, 'is_intermediate': True, 'is_expert': False}",
 "\n{'code': \"import tempfile\\ntemp_dir=tempfile.TemporaryDirectory()\\nfile=tempfile.NamedTemporaryFile(suffix='.json',delete=False)\\nfile.write(content)\\nfile.close()\\ntemp_dir.cleanup()\", 'is_beginner': True, 'is_intermediate': False, 'is_expert': False}",
 "\n{'code': \"import tempfile, os\\nwith tempfile.TemporaryDirectory() as temp_dir:\\n    file = os.path.join(temp_dir, 'features.json')\\n    f = open(file, 'w')\\n    f.write(content)\\n\", 'type': 'beginner', 'imports': ['tempfile', 'os']}",
 "\n{'code': \"import tempfile, os\\nwith tempfile.TemporaryDirectory() as temp_dir:\\n    file = os.path.join(temp_dir, 'features.json')\\n    f = open(file, 'w')\\n    f.write(content)\\n\", 'type': 'intermediate', 'imports': ['tempfile', 'os']}",
 "\n{'code': \"\\nimport tempfile, os\\nwith tempfile.TemporaryDirectory() as temp_dir:\\n    file = os.path.join(temp_dir, 'features.json')\\n    f = open(file, 'w')\\n    f.write(content)\\n\", 'type': 'expert', 'imports': ['tempfile', 'os']}",
 "\n{'code': \"import tempfile\\nwith tempfile.TemporaryDirectory() as temp_dir:\\n    file = open(temp_dir + '/features.json', 'w')\\n    file.write(content)\\n    file.close()\", 'temp_dir': 'temp_dir', 'f': 'file', 'file': 'file'}",
 "\n{'code': \"with tempfile.TemporaryDirectory() as temp_dir:\\n    f = open(temp_dir + '/features.json', 'w')\\n    f.write(content)\\n    f.close()\", 'temp_dir': 'temp_dir', 'f': 'f', 'file': 'file'}",
 "\n{'code': \"with tempfile.TemporaryDirectory() as temp_dir:\\n    file = open(temp_dir + '/features.json', 'w')\\n    file.write(content)\\n    file.close()\", 'temp_dir': 'temp_dir', 'f': 'file', 'file': 'file'}",
 "\n{'code': \"import tempfile\\ntemp_dir = tempfile.mkdtemp()\\nfile = tempfile.NamedTemporaryFile(dir=temp_dir)\\ncontent = '{}'\\nfile.write(content)\\nfile.close()\", 'explanation': 'Use tempfile.mkdtemp() to create a temporary directory, and then use tempfile.NamedTemporaryFile() to create a temporary file in that directory.', 'level': 'beginner'}",
 "\n{'code': \"with tempfile.TemporaryDirectory() as temp_dir:\\n    file = tempfile.NamedTemporaryFile(dir=temp_dir)\\n    content = '{}'\\n    file.write(content)\\n    file.close()\", 'explanation': 'Use the with statement to ensure that the temporary directory and file are deleted when the code block exits.', 'level': 'intermediate'}",
 "\n{'code': \"import tempfile\\ntemp_dir = tempfile.TemporaryDirectory()\\nfile = tempfile.NamedTemporaryFile(dir=temp_dir)\\nwith open(file.name, 'w') as f:\\n    f.write(content)\\nfile.close()\", 'explanation': 'Use the context manager to open the file in write mode, and then write the content to the file.', 'level': 'expert'}",
 "\n{'code': 'import tempfile\\ntemp_dir = tempfile.TemporaryDirectory()\\nfile = tempfile.NamedTemporaryFile(delete=False)\\nfile.write(content)\\nfile.close()\\ntemp_dir.cleanup()\\nfile.name', 'type': 'intermediate', 'imports': ['tempfile', 'tempfile']}",
 "\n{'code': 'import tempfile\\nwith tempfile.NamedTemporaryFile(delete=False) as f:\\n    f.write(content)\\n    f.close()\\ntemp_dir.cleanup()\\nf.name', 'type': 'expert', 'imports': ['tempfile']}"
]