[
 "import tempfile\ntemp_dir = tempfile.NamedTemporaryDirectory()\nfile = temp_dir.name + '/features.json'\nf = open(file, 'w')\nf.write(content)\ntemp_dir.cleanup()",
 "import tempfile\ntemp_dir = tempfile.TemporaryDirectory()\nfile = tempfile.NamedTemporaryFile(mode='w', dir=temp_dir.name)\nfile.write(content)\nfile.close()\ntemp_dir.cleanup()",
 "import tempfile\ntemp_dir = tempfile.TemporaryDirectory()\nfile = tempfile.NamedTemporaryFile(mode='w', dir=temp_dir.name)\nfile.write(content)\nfile.flush()\ntemp_dir.cleanup()",
 "import tempfile\ntemp_dir = tempfile.TemporaryDirectory()\nfile = tempfile.NamedTemporaryFile(mode='w', dir=temp_dir.name)\nfile.write(content)\nfile.flush()\nfile.close()\ntemp_dir.cleanup()",
 "import tempfile\nwith tempfile.TemporaryDirectory() as temp_dir:\n    file = temp_dir.name + '/features.json'\n    f = open(file, 'w')\n    f.write(content)\n    temp_dir.cleanup()",
 "import tempfile\nwith tempfile.NamedTemporaryFile(delete=False) as f:\n    f.write(content)\ntemp_dir = f.name + '/features.json'\nf.close()",
 "import tempfile\nimport json\nwith tempfile.NamedTemporaryFile(delete=False) as f:\n    f.write(content)\ntemp_dir = f.name + '/features.json'\nf.close()\nwith open(temp_dir, 'r') as f:\n    data = json.load(f)",
 "import tempfile\ntemp_dir = tempfile.TemporaryDirectory()\nfile = tempfile.mkdtemp() + '/features.json'\nf = open(file, 'w')\nf.write(content)\ntemp_dir.cleanup()",
 "import tempfile\ntemp_dir = tempfile.mkdtemp()\nfile = tempfile.NamedTemporaryFile(dir=temp_dir, delete=False)\nfile.write(content)\nfile.close()\ntemp_dir.cleanup()",
 "import tempfile\ntemp_dir = tempfile.mkdtemp()\nfile = temp_dir + '/features.json'\nf = open(file, 'w')\nf.write(content)\nf.close()",
 "import tempfile\ntemp_dir = tempfile.mkdtemp()\nfile = tempfile.NamedTemporaryFile(dir=temp_dir, suffix='.json', delete=False)\nfile.write(content)\nfile.close()\ntemp_dir",
 "import tempfile\nwith tempfile.TemporaryDirectory() as temp_dir:\n    file = tempfile.mkdtemp(dir=temp_dir)\n    f = open(file, 'w')\n    f.write(content)\n    temp_dir.cleanup()",
 "import tempfile\ntemp_dir = tempfile.mkdtemp()\nfile = temp_dir + '/features.json'\nf = tempfile.NamedTemporaryFile(mode='w', dir=temp_dir)\nf.write(content)\nf.close()\ntemp_dir.cleanup()",
 "import tempfile\ntemp_dir = tempfile.TemporaryDirectory()\nfile = tempfile.NamedTemporaryFile(mode='w', dir=temp_dir.name, delete=False)\nfile.write(content)\nfile.close()\ntemp_dir.cleanup()",
 "import tempfile\ntemp_dir = tempfile.TemporaryDirectory()\nfile = tempfile.NamedTemporaryFile(mode='w', dir=temp_dir, delete=True)\nfile.write(content)\nfile.close()",
 "import tempfile\ntemp_dir = tempfile.mkdtemp()\nfile = tempfile.NamedTemporaryFile(mode='w', dir=temp_dir)\nfile.write(content)\nfile.flush()\nfile.close()\ntemp_dir.cleanup()",
 "import tempfile\ntemp_dir = tempfile.mkdtemp()\nfile = temp_dir + '/features.json'\nf = open(file, 'w')\nf.write(content)\ntemp_dir.cleanup()",
 "import tempfile\nwith tempfile.TemporaryDirectory() as temp_dir:\n    file = tempfile.mkdtemp(dir=temp_dir)\n    f = open(file + '/features.json', 'w')\n    f.write(content)\n    temp_dir.cleanup()",
 "import tempfile\nwith tempfile.NamedTemporaryFile(dir=tempfile.gettempdir()) as f:\n    f.write(content)\n    file = f.name",
 "import tempfile\nwith tempfile.NamedTemporaryFile(delete=False) as f:\n    f.write(content)\n    file = f.name",
 "import tempfile\nwith tempfile.NamedTemporaryFile() as f:\n    f.write(content)\n    file = f.name\n    f.close()",
 "import tempfile\nwith tempfile.NamedTemporaryFile(delete=True) as f:\n    f.write(content)\n    file = f.name\n    f.close()",
 "import tempfile\nwith tempfile.NamedTemporaryFile(delete=False) as f:\n    f.write(content)\ntemp_dir = f.name + '/features.json'\nfile = f.name",
 "import tempfile\nwith tempfile.NamedTemporaryFile(delete=False) as f:\n    f.write(content)\n    temp_dir = f.name + '/features.json'\nf.close()",
 "import tempfile\nwith tempfile.NamedTemporaryFile() as f:\n    f.write(content)\n    temp_dir = f.name + '/features.json'\nf.close()",
 "import tempfile\nwith tempfile.NamedTemporaryFile(delete=False) as f:\n    f.write(content)\ntemp_dir = f.name + '/features.json'\nwith open(temp_dir, 'r') as f:\n    file = f.read()\nf.close()",
 "import tempfile\nwith tempfile.NamedTemporaryFile(delete=False) as f:\n    f.write(content)\ntemp_dir = f.name + '/features.json'\nwith open(temp_dir, 'r') as f:\n    file = f.read()\nf.close()\ndel f",
 "import tempfile, json\ntemp_dir = tempfile.mkdtemp()\nfile = tempfile.NamedTemporaryFile(delete=False)\nfile.write(content)\nfile.close()\nwith open(os.path.join(temp_dir, 'features.json'), 'r') as f:\n    data = json.load(f)",
 "import tempfile\nwith tempfile.NamedTemporaryFile(dir=tempfile.mkdtemp(), suffix='.json') as f:\n    f.write(content)\n    f.flush()\nf.name",
 "import tempfile\nwith tempfile.NamedTemporaryFile(mode='w', dir=tempfile.mkdtemp(), suffix='.json') as f:\n    f.write(content)\n    f.flush()\nf.name",
 "import tempfile\ntemp_dir = tempfile.mkdtemp()\nfile = tempfile.NamedTemporaryFile(dir=temp_dir, delete=False)\nfile.write(content)\nfile.flush()\nfile.close()\ntemp_dir.cleanup()",
 "import tempfile\nimport shutil\ntemp_dir = tempfile.mkdtemp()\nfile = tempfile.NamedTemporaryFile(dir=temp_dir, delete=False)\nfile.write(content)\nfile.close()\nshutil.rmtree(temp_dir)",
 "import tempfile\nimport os\ntemp_dir = tempfile.mkdtemp()\nfile = tempfile.NamedTemporaryFile(dir=temp_dir, delete=False)\nfile.write(content)\nfile.close()\nos.rmdir(temp_dir)",
 "import tempfile\ntemp_dir = tempfile.mkdtemp()\nf = tempfile.NamedTemporaryFile(dir=temp_dir, suffix='.json', delete=False)\nf.write(content)\nf.close()",
 "import tempfile\nwith tempfile.NamedTemporaryFile(suffix='.json', delete=False) as f:\n    f.write(content)\n    f.flush()\n    os.fsync(f.fileno())\n    temp_dir = os.path.dirname(f.name)\n    file = f.name",
 "import tempfile\ntemp_dir = tempfile.mkdtemp()\nwith tempfile.NamedTemporaryFile(suffix='.json', dir=temp_dir, delete=False) as f:\n    f.write(content)\n    f.flush()\n    os.fsync(f.fileno())\n    file = f.name",
 "import tempfile\ntemp_dir = tempfile.mkdtemp()\nwith tempfile.NamedTemporaryFile(suffix='.json', dir=temp_dir, delete=False) as f:\n    f.write(content)\n    f.flush()\n    os.fsync(f.fileno())\n    f.close()\n    file = os.path.join(temp_dir, f.name)",
 "import tempfile\nwith tempfile.NamedTemporaryFile(suffix='.json', delete=False) as f:\n    f.write(content)\n    f.flush()\n    os.fsync(f.fileno())",
 "import tempfile\ntemp_dir = tempfile.mkdtemp()\nfile = tempfile.mkdtemp(dir=temp_dir)\nf = open(file, 'w')\nf.write(content)\ntemp_dir.cleanup()",
 "import tempfile\nwith tempfile.TemporaryDirectory() as temp_dir:\n    file = tempfile.mkdtemp(dir=temp_dir)\n    f = open(file, 'w')\n    f.write(content)",
 "import tempfile\nwith tempfile.NamedTemporaryDirectory() as temp_dir:\n    file = tempfile.gettempdir() + '/features.json'\n    with open(file, 'w') as f:\n        f.write(content)\n    temp_dir.cleanup()",
 "import tempfile\nwith tempfile.NamedTemporaryDirectory() as temp_dir:\n    file = tempfile.mkdtemp() + '/features.json'\n    with open(file, 'w') as f:\n        f.write(content)\n    temp_dir.cleanup()",
 "import tempfile\ntemp_dir = tempfile.mkdtemp()\nfile = temp_dir + '/features.json'\nwith open(file, 'w') as f:\n    f.write(content)\ntemp_dir.cleanup()",
 "import tempfile\ntemp_dir = tempfile.mkdtemp()\nfile = tempfile.NamedTemporaryFile(dir=temp_dir, delete=False).name\nwith open(file, 'w') as f:\n    f.write(content)\ntemp_dir.cleanup()",
 "import tempfile\ntemp_dir = tempfile.mkdtemp()\nfile = tempfile.NamedTemporaryFile(dir=temp_dir, delete=True).name\nwith open(file, 'w') as f:\n    f.write(content)\ntemp_dir.cleanup()",
 "import tempfile\nwith tempfile.NamedTemporaryDirectory() as temp_dir:\n    file = tempfile.gettempdir() + '/features.json'\n    f = open(file, 'w')\n    f.write(content)\n    f.close()\n    tempfile.remove(file)",
 "import tempfile\nwith tempfile.NamedTemporaryDirectory() as temp_dir:\n    file = tempfile.NamedTemporaryFile(dir=temp_dir, mode='w')\n    file.write(content)\n    file.flush()\n    file.close()\n    temp_dir.cleanup()",
 "import tempfile\nwith tempfile.NamedTemporaryDirectory() as temp_dir:\n    file = tempfile.NamedTemporaryFile(dir=temp_dir, mode='w', delete=False)\n    file.write(content)\n    file.flush()\n    file.close()\n    temp_dir.cleanup()",
 "import tempfile\nwith tempfile.NamedTemporaryDirectory() as temp_dir:\n    file = tempfile.NamedTemporaryFile(dir=temp_dir, mode='w', delete=True)\n    file.write(content)\n    file.flush()\n    file.close()\n    temp_dir.cleanup()",
 "import tempfile\nwith tempfile.NamedTemporaryDirectory() as temp_dir:\n    file = tempfile.NamedTemporaryFile(dir=temp_dir, mode='w', delete=False)\n    file.write(content)\n    file.flush()\n    file.seek(0)\n    data = file.read()\n    file.close()\n    temp_dir.cleanup()",
 "import tempfile\ntemp_dir = tempfile.mkdtemp()\nfile = temp_dir + '/features.json'\nf = tempfile.NamedTemporaryFile(mode='w', dir=temp_dir)\nf.write(content)\nf.flush()\nf.close()\ntemp_dir.cleanup()",
 "import tempfile\ntemp_dir = tempfile.mkdtemp()\nfile = temp_dir + '/features.json'\nf = tempfile.NamedTemporaryFile(mode='w', dir=temp_dir)\nf.write(content)\nf.flush()\nf.seek(0)\ncontent = f.read()\nf.close()\ntemp_dir.cleanup()",
 "import tempfile\ntemp_dir = tempfile.mkdtemp()\nfile = temp_dir + '/features.json'\nf = tempfile.NamedTemporaryFile(mode='w', dir=temp_dir)\nf.write(content)\nf.flush()\nf.seek(0)\ncontent = f.read()\nf.close()\ntemp_dir.cleanup()\nwith open(file, 'r') as f:\n    content = f.read()",
 "import tempfile\ntemp_dir = tempfile.mkdtemp()\nfile = temp_dir + '/features.json'\nf = tempfile.NamedTemporaryFile(mode='w', dir=temp_dir)\nf.write(content)\nf.flush()\ntemp_dir.cleanup()",
 "import tempfile, os\ntemp_dir = tempfile.mkdtemp()\nfile = os.path.join(temp_dir, 'features.json')\nf = tempfile.NamedTemporaryFile(mode='w', dir=temp_dir)\nf.write(content)\nf.close()\ntemp_dir.cleanup()",
 "import tempfile, os\ntemp_dir = tempfile.mkdtemp()\nfile = os.path.join(temp_dir, 'features.json')\nf = tempfile.NamedTemporaryFile(mode='w', dir=temp_dir, delete=False)\nf.write(content)\nf.close()\ntemp_dir.cleanup()",
 "import tempfile, os\ntemp_dir = tempfile.mkdtemp()\nfile = os.path.join(temp_dir, 'features.json')\nf = tempfile.NamedTemporaryFile(mode='w', dir=temp_dir, delete=True)\nf.write(content)\nf.close()\ntemp_dir.cleanup()",
 "import tempfile, os\ntemp_dir = tempfile.mkdtemp()\nfile = os.path.join(temp_dir, 'features.json')\nf = tempfile.NamedTemporaryFile(mode='w', dir=temp_dir, delete=False)\nf.write(content)\nf.flush()\nf.close()\ntemp_dir.cleanup()",
 "import tempfile, os\ntemp_dir = tempfile.mkdtemp()\nfile = os.path.join(temp_dir, 'features.json')\nf = tempfile.NamedTemporaryFile(mode='w', dir=temp_dir, delete=True)\nf.write(content)\nf.flush()\nf.close()\ntemp_dir.cleanup()",
 "import tempfile\nwith tempfile.TemporaryDirectory() as temp_dir:\n    features_file = temp_dir + '/features.json'\n    with open(features_file, 'w') as f:\n        f.write(content)",
 "import tempfile\ntemp_dir = tempfile.mkdtemp()\nfile = tempfile.mkdtemp(dir=temp_dir)\nf = open(file, 'w')\nf.write(content)",
 "import tempfile\ntemp_dir = tempfile.mkdtemp()\nfile = tempfile.mkdtemp(dir=temp_dir)\nf = open(file, 'w')\nf.write(content)\nf.close()\ntempfile.remove(file)\ntempfile.remove(temp_dir)",
 "import tempfile\nwith tempfile.NamedTemporaryDirectory() as temp_dir:\n    file = tempfile.NamedTemporaryFile(dir=temp_dir)\n    file.write(content)",
 "import tempfile\ntemp_dir = tempfile.mkdtemp()\nfile = tempfile.NamedTemporaryFile(dir=temp_dir, delete=False)\nfile.write(content)\nfile.close()",
 "import tempfile\ntemp_dir = tempfile.mkdtemp()\nfile = tempfile.NamedTemporaryFile(dir=temp_dir, delete=False)\nfile.write(content)\nfile.flush()\nfile.seek(0)\ndata = file.read()",
 "import tempfile\ntemp_dir = tempfile.mkdtemp()\nwith tempfile.NamedTemporaryFile(dir=temp_dir, delete=False) as file:\n    file.write(content)\n    file.flush()\n    file.seek(0)\n    data = file.read()",
 "import tempfile\ntemp_dir = tempfile.mkdtemp()\nfile = tempfile.NamedTemporaryFile(dir=temp_dir, delete=False)\nfile.write(content)\nfile.flush()\nfile.seek(0)\nwith open(file.name, 'r') as f:\n    data = f.read()",
 "import tempfile\ntemp_dir = tempfile.mkdtemp()\nfile = tempfile.NamedTemporaryFile(dir=temp_dir, delete=False)\nfile.write(content)\nfile.flush()\nfile.seek(0)\nwith open(file.name, 'rb') as f:\n    data = f.read()",
 "import tempfile\ntemp_dir = tempfile.mkdtemp()\nfile = tempfile.NamedTemporaryFile(dir=temp_dir, delete=False)\nfile.write(content)\nfile.flush()\nfile.seek(0)\nfile.read()",
 "import tempfile\ntemp_dir = tempfile.mkdtemp()\nwith tempfile.NamedTemporaryFile(dir=temp_dir, delete=False) as f:\n    f.write(content)\n    file = f.name",
 "import tempfile\ntemp_dir = tempfile.gettempdir()\nf = tempfile.NamedTemporaryFile(dir=temp_dir, delete=False)\nf.write(content)\nfile = f.name",
 "import numpy as np\ncount = 0\nfor i in arr:\n    count += i",
 "count = sum((value for value in arr))",
 "import tempfile, json\nwith tempfile.NamedTemporaryFile(suffix='.json') as f:\n    json.dump(content, f)",
 "import tempfile\ntemp_dir = tempfile.NamedTemporaryDirectory()\nfile = temp_dir.name + '/features.json'\nf = open(file, 'w')\nf.write(content)\nf.close()",
 "import tempfile\ntemp_dir = tempfile.mkdtemp(prefix='features')\nfile = temp_dir + '/features.json'\nf = open(file, 'w')\nf.write(content)\nf.close()",
 "import tempfile\ntemp_dir = tempfile.TemporaryDirectory()\nfile = tempfile.mkdtemp()\nf = open(file, 'w')\nf.write(content)\ntemp_dir.cleanup()",
 "import tempfile\ntemp_dir = tempfile.mkdtemp()\nfile = tempfile.NamedTemporaryFile(dir=temp_dir)\nwith open(file.name, 'w') as f:\n    f.write(content)",
 "import tempfile\ntemp_dir = tempfile.TemporaryDirectory()\nfile = tempfile.NamedTemporaryFile(delete=False, dir=temp_dir.name)\nfile.write(content)\nfile.close()\ntemp_dir.cleanup()",
 "import tempfile\nwith tempfile.NamedTemporaryFile(delete=False) as file:\n    file.write(content)\n    file.flush()\n    filepath = file.name\ntempfile.mkdtemp()\nshutil.move(filepath, os.path.join(temp_dir, 'features.json'))\ntemp_dir.cleanup()",
 "import tempfile, shutil\ntemp_dir = tempfile.mkdtemp()\nfile = tempfile.NamedTemporaryFile(dir=temp_dir)\nfile.write(content)\nshutil.rmtree(temp_dir)",
 "import tempfile\ntemp_dir = tempfile.mkdtemp()\nfile = tempfile.NamedTemporaryFile(dir=temp_dir)\nfile.write(content)\nfile.close()\nshutil.rmtree(temp_dir)",
 "import tempfile\nwith tempfile.NamedTemporaryFile(delete=False) as file:\n    file.write(content)\n    file.flush()\n    file.seek(0)\n    f = open(file.name, 'r')\n    f.close()",
 "{'temp_dir': temp_dir, 'f': f, 'file': file}",
 "import tempfile\ntemp_dir = tempfile.mkdtemp()\nf = tempfile.NamedTemporaryFile(dir=temp_dir, mode='w')\nf.write(content)\nfile = f.name",
 "import tempfile\ntemp_dir = tempfile.NamedTemporaryDirectory()\nfile = temp_dir + '/' + 'features.json'\nwith open(file, 'w') as f:\n    f.write(content)\nf.close()",
 "import tempfile, os, json\ntemp_dir = tempfile.NamedTemporaryDirectory()\nfile = os.path.join(temp_dir, 'features.json')\nwith open(file, 'w') as f:\n    json.dump(content, f)\nf.close()",
 "import tempfile\ntemp_dir = tempfile.NamedTemporaryDirectory()\nfile = temp_dir + '/features.json'\nf = open(file, 'w')\nf.write(content)\nf.close()",
 "import tempfile\nwith tempfile.NamedTemporaryFile(delete=False) as f:\n    file = f.name\n    f.write(content)",
 "import tempfile\ntemp_dir = tempfile.NamedTemporaryDirectory()\nwith tempfile.NamedTemporaryFile(delete=False, dir=temp_dir.name, mode='w') as file:\n    file.write(content)\ntemp_dir.cleanup()",
 "import tempfile\ntf = tempfile.NamedTemporaryFile(delete=False)\ntf.write(content)\ntf.close()\ntemp_dir = tempfile.mkdtemp()\nshutil.move(tf.name, temp_dir)",
 "import tempfile, os\nwith tempfile.TemporaryDirectory() as temp_dir:\n    f = open(os.path.join(temp_dir, 'features.json'), 'w')\n    f.write(content)\n    f.close()",
 "import tempfile, os\ntemp_dir = tempfile.mkdtemp()\nfilepath = os.path.join(temp_dir, 'features.json')\nwith open(filepath, 'w') as f:\n    f.write(content)\n    f.close()\n    temp_dir.cleanup()",
 "import tempfile, os\ntemp_dir = tempfile.mkdtemp()\nfilepath = os.path.join(temp_dir, 'features.json')\nwith open(filepath, 'w') as f:\n    f.write(content)\n    f.close()",
 "import tempfile\nwith tempfile.NamedTemporaryFile() as file:\n    file.write(content)\n    file.flush()\n    filepath = file.name\ntemp_dir = tempfile.mkdtemp()\nshutil.move(filepath, os.path.join(temp_dir, 'features.json'))\ntemp_dir.cleanup()",
 "import tempfile\nfile = tempfile.NamedTemporaryFile(delete=False)\nfile.write(content)\nfile.flush()\nfilepath = file.name\ntemp_dir = tempfile.mkdtemp()\nshutil.move(filepath, os.path.join(temp_dir, 'features.json'))\ntemp_dir.cleanup()",
 "import tempfile\nwith tempfile.TemporaryDirectory() as temp_dir:\n    file = tempfile.NamedTemporaryFile(dir=temp_dir, mode='w', delete=False)\n    file.write(content)\n    file.close()\n    file_path = file.name",
 "import tempfile, shutil\nfile_path = tempfile.NamedTemporaryFile(mode='w', dir='/tmp')\ncontent = file_path.read()\nshutil.rmtree(file_path.name)",
 "import tempfile\ntemp_dir = tempfile.TemporaryDirectory()\nf = tempfile.NamedTemporaryFile()\nf.name = file\nf.close()\ntemp_dir.cleanup()",
 "import tempfile\ntemp_dir = tempfile.TemporaryDirectory()\nfile = tempfile.mkdtemp()\ntemp_dir.cleanup()\nf = open(file, 'wb')\nf.close()",
 "import tempfile\ntemp_dir = tempfile.mkdtemp(dir='/home/user/')\nfile = tempfile.mkstemp(dir='/home/user/')",
 "import tempfile, shutil\ntemp_dir = tempfile.mkdtemp()\nfile = tempfile.NamedTemporaryFile(dir=temp_dir, delete=True)\nfile.write(content)\nfile.flush()\nfile.close()\nshutil.rmtree(temp_dir)",
 "import tempfile\ntemp_dir = tempfile.mkdtemp()\nfile = tempfile.NamedTemporaryFile(dir=temp_dir, delete=False)\nfile.write(content)\nfile.flush()\nwith open(file.name, 'r') as f:\n    content = f.read()\nshutil.rmtree(temp_dir)",
 "import tempfile\ntemp_dir = tempfile.mkdtemp()\nwith tempfile.NamedTemporaryFile(dir=temp_dir, delete=False) as f:\n    f.write(content)\n    content = f.read()\nwith tempfile.NamedTemporaryFile(dir=temp_dir, delete=False) as file:\n    file.write(content)\n    file.flush()\nshutil.rmtree(temp_dir)",
 "import tempfile\ntemp_dir = tempfile.mkdtemp()\nwith tempfile.NamedTemporaryFile(dir=temp_dir) as f:\n    f.write(content)\nf.close()\nshutil.rmtree(temp_dir)",
 "import tempfile\nwith tempfile.NamedTemporaryFile() as f:\n    f.write(content)\nshutil.rmtree(f.name)",
 "import tempfile\ntemp_dir = tempfile.TemporaryDirectory()\nfile = tempfile.NamedTemporaryFile(dir=temp_dir)\nfile.write(content)\nfile.close()",
 "import tempfile\nwith tempfile.TemporaryDirectory() as temp_dir:\n    with tempfile.NamedTemporaryFile(dir=temp_dir, delete=False) as file:\n        file.write(content)\n        file.close()",
 "import tempfile\nwith tempfile.NamedTemporaryFile(delete=False) as file:\n    file.write(content)\n    file.close()",
 "import tempfile\ntemp_dir = tempfile.TemporaryDirectory()\nfile = temp_dir.name + '\\x0ceatures.json'\nf = open(file, 'w')\nf.write(content)\ntemp_dir.cleanup()",
 "import tempfile\ntemp_dir = tempfile.TemporaryDirectory()\nf = open(temp_dir.name + '/features.json', 'w')\nf.write(content)\nf.close()\ntemp_dir.cleanup()",
 "import tempfile\nwith tempfile.NamedTemporaryFile(delete=False) as f:\n    f.write(content)\nf.close()\ntemp_dir = tempfile.mkdtemp()\nfile = temp_dir + '/' + f.name\ntemp_dir.cleanup()",
 "import tempfile\nwith tempfile.TemporaryDirectory() as temp_dir:\n    file = tempfile.gettempdir() + '/features.json'\n    f = open(file, 'w')\n    f.write(content)",
 "import tempfile, shutil\nwith tempfile.TemporaryDirectory() as temp_dir:\n    file = tempfile.mkdtemp(dir=temp_dir)\n    shutil.copy(content, file)",
 "import tempfile\nwith tempfile.NamedTemporaryFile(delete=False) as f:\n    f.write(content.encode('utf-8'))\n    file = f.name",
 "import tempfile, json\ntemp_dir = tempfile.TemporaryDirectory()\nfile = temp_dir.name + '\\x0ceatures.json'\nf = open(file, 'w')\nf.write(content.encode())\ntemp_dir.cleanup()",
 "import tempfile\ntemp_dir = tempfile.TemporaryDirectory()\nf = open(temp_dir.name + '\\x0ceatures.json', 'w')\nf.write(content)\ntemp_dir.cleanup()",
 "import tempfile, os\nwith tempfile.NamedTemporaryFile(delete=False) as f:\n    f.write(content)\ntemp_dir = os.path.dirname(f.name)\ntemp_dir.cleanup()",
 "import tempfile, json\nwith tempfile.NamedTemporaryFile(suffix='.json', dir=tempfile.gettempdir()) as f:\n    f.write(content)\n    f.flush()\n    file = f.name\n    features = json.loads(open(file, 'r').read())",
 "import json\nfeatures = json.loads(content)",
 "import tempfile, os\ntemp_dir = tempfile.mkdtemp()\nfile = os.path.join(temp_dir, 'features.json')\nwith open(file, 'w', encoding='utf-8') as f:\n    f.write(content)\n    f.close()",
 "import tempfile\ntemp_dir = tempfile.mkdtemp()\nf = tempfile.NamedTemporaryFile(delete=False, dir=temp_dir)\nf.write(content)",
 "with tempfile.TemporaryDirectory() as temp_dir:\n    file = temp_dir + '/features.json'\n    f = open(file, 'w')\n    f.write(content)\n    f.close()\n    return temp_dir",
 "import tempfile\nwith tempfile.TemporaryDirectory() as temp_dir:\n    file = tempfile.mkdtemp() + '/features.json'\n    f = open(file, 'w')\n    f.write(content)\n    f.close()\n    temp_dir",
 "import tempfile\nwith tempfile.TemporaryDirectory() as temp_dir:\n    file = tempfile.mkdtemp() + '/features.json'\n    f = open(file, 'w')\n    f.write(content)\n    f.close()\n    return temp_dir",
 "import tempfile\nfile = tempfile.NamedTemporaryFile(delete=False)\nfile.write(content)\nfile.flush()\nfile.seek(0)\ncontent = file.read()",
 "import tempfile\nfile = tempfile.NamedTemporaryFile()\nfile.write(content)\nfile.flush()\nfile.seek(0)\ncontent = file.read()",
 "import tempfile\nfile = tempfile.NamedTemporaryFile('w+t')\nfile.write(content)\nfile.flush()\nfile.seek(0)\ncontent = file.read()",
 "import tempfile\nfile = tempfile.NamedTemporaryFile('w+b')\nfile.write(content)\nfile.flush()\nfile.seek(0)\ncontent = file.read()",
 "import tempfile\ntemp_dir = tempfile.TemporaryDirectory()\nfile = tempfile.NamedTemporaryFile(dir=temp_dir.name)\nfile.write(content)\nfile.close()\ntemp_dir.cleanup()",
 "from tempfile import NamedTemporaryFile, mkdtemp\ncontent = 'test'\nf = NamedTemporaryFile(delete=False)\nf.write(content)\nf.close()\ntemp_dir = mkdtemp()\nfile = temp_dir + '/' + f.name\nos.remove(file)\nos.rmdir(temp_dir)",
 "import tempfile\nwith tempfile.NamedTemporaryFile(delete=False) as f:\n    f.write(content)\nf.close()\ntemp_dir = tempfile.mkdtemp()\nfile = temp_dir + '/' + f.name\nos.remove(file)\nos.rmdir(temp_dir)",
 "import tempfile, os\nwith tempfile.NamedTemporaryFile(delete=False) as f:\n    f.write(content)\ntemp_dir = tempfile.mkdtemp()\nfile = os.path.join(temp_dir, f.name)",
 "import tempfile\ntemp_dir = tempfile.mkdtemp()\nfile = tempfile.gettempdir() + '/features.json'\nf = open(file, 'w')\nf.write(content)",
 "import tempfile\nwith tempfile.NamedTemporaryFile(delete=False) as temp_dir:\n    file = temp_dir.name + '/features.json'\n    f = open(file, 'w')\n    f.write(content)",
 "import tempfile, shutil\ntemp_dir = tempfile.mkdtemp()\nfile = tempfile.mkdtemp(dir=temp_dir)\nshutil.copy(content, file)",
 "import tempfile\ntemp_dir = tempfile.mkdtemp()\nfile = tempfile.mkdtemp(dir=temp_dir)\nwith open(file, 'wb') as f:\n    f.write(content)",
 "import tempfile, os\ntemp_dir = tempfile.TemporaryDirectory()\nfile = os.path.join(temp_dir, 'features.json')\nf = open(file, 'w')\nf.write(content)\nf.close()\ntempfile.delete(temp_dir)",
 "import tempfile\nwith tempfile.TemporaryDirectory() as temp_dir:\n    file = tempfile.NamedTemporaryFile(dir=temp_dir, suffix='.json')\n    file.write(content)\n    file.flush()\n    file.seek(0)\n    content = file.read()",
 "import os, tempfile\ntmp = tempfile.NamedTemporaryFile('w+')\ntmp.write(content)\ntmp.flush()\ntmp.seek(0)\ncontents = tmp.read()\ntmp.close()",
 "import json, tempfile\nwith tempfile.NamedTemporaryFile('w+', suffix='.json') as f:\n    json.dump(content, f)\nf.flush()\nf.seek(0)\ncontents = json.load(f)\nf.close()",
 "import tempfile, os\nwith tempfile.TemporaryDirectory() as temp_dir:\n    file = os.path.join(temp_dir, 'features.json')\n    f = open(file, 'w')\n    f.write(content)\n    f.close()\n    tempfile.delete(temp_dir)",
 "import tempfile, os\ntemp_dir = tempfile.TemporaryDirectory()\nf = open(os.path.join(temp_dir, 'features.json'), 'w')\nf.write(content)\nf.close()\ntempfile.delete(temp_dir)",
 "import tempfile\n(temp_dir, file) = (tempfile.mkdtemp(), tempfile.mktemp('.json'))\nf = open(file, 'wb')\nf.write(content)\nf.close()",
 "import tempfile\nwith tempfile.NamedTemporaryFile(delete=False) as f:\n    f.write(content)\n    f.seek(0)\ntemp_dir = f.name\nfile = f.name + '/features.json'",
 "with open('features.json', 'w') as f:\n    f.write(content)",
 "import tempfile\nwith tempfile.NamedTemporaryFile() as f:\n    f.write(content)\ntemp_dir = f.name",
 "import tempfile\ntemp_dir = tempfile.TemporaryDirectory()\nfile = tempfile.NamedTemporaryFile(dir=temp_dir, suffix='.json')\nfile.write(content)\nfile.flush()\nfile.seek(0)\ncontent = file.read()",
 "import tempfile\nimport os\nimport shutil\ntemp_dir = tempfile.mkdtemp()\nfile = os.path.join(temp_dir, 'features.json')\nf = tempfile.NamedTemporaryFile(mode='w', delete=False)\nf.write(content)\nf.flush()\nf.seek(0)\nwith open(file, 'w') as outfile:\n    shutil.copyfileobj(f, outfile)\nshutil.rmtree(temp_dir)",
 "import tempfile\nimport os\nimport shutil\ntemp_dir = tempfile.mkdtemp()\nfile = os.path.join(temp_dir, 'features.json')\nf = tempfile.NamedTemporaryFile(mode='w', delete=False)\nf.write(content)\nf.flush()\nf.seek(0)\nwith tempfile.NamedTemporaryFile(mode='wb', delete=False) as tmp_file:\n    shutil.copyfileobj(f, tmp_file)\nwith open(file, 'wb') as outfile:\n    shutil.copyfileobj(tmp_file, outfile)\nshutil.rmtree(temp_dir)",
 "import json, tempfile\nwith tempfile.NamedTemporaryFile(suffix='.json', delete=False) as f:\n    json.dump(content, f)\ncontents = json.load(open(f.name, 'r'))",
 "import json\ncontents = json.load(open('tempfile.json', 'r'))",
 "import json\nwith open('tempfile.json', 'r') as f:\n    contents = json.load(f)",
 "import contextlib, json, tempfile\nwith tempfile.NamedTemporaryFile('w+', suffix='.json', dir=temp_dir) as f:\n    json.dump(content, f)\nwith open(f.name, 'r') as f:\n    contents = json.load(f)",
 "import tempfile, json\nwith tempfile.NamedTemporaryFile('w+', suffix='.json', dir=temp_dir) as f:\n    f = json.dump(content, f)\nwith open(f.name, 'r') as f:\n    contents = json.load(f)",
 "import json, tempfile\ntemp_dir = tempfile.mkdtemp()\nfile = tempfile.NamedTemporaryFile(dir=temp_dir, delete=False)\nfile.write(json.dumps(content))\nfile.close()",
 "import json, tempfile, os\ntemp_dir = tempfile.mkdtemp()\nfile = os.path.join(temp_dir, 'features.json')\nf = open(file, 'w')\nf.write(json.dumps(content))\ntempfile.remove(file)",
 "import json, tempfile\ntemp_dir = tempfile.TemporaryDirectory()\nfile = tempfile.NamedTemporaryFile(dir=temp_dir, delete=True)\nfile.write(json.dumps(content))\ntemp_dir.cleanup()",
 "import json, tempfile\ntemp_dir = tempfile.mkdtemp()\nfile = tempfile.NamedTemporaryFile(dir=temp_dir, delete=False)\nfile.write(json.dumps(content))\nf = tempfile.NamedTemporaryFile(dir=temp_dir, delete=True)\nf.write(json.dumps(content))\ntemp_dir.cleanup()",
 "{'import': ['json', 'tempfile'], 'temp_dir': temp_dir, 'f': f, 'file': file}",
 "{'import': ['tempfile', 'json'], 'temp_dir': temp_dir, 'f': f, 'file': file}",
 "{'import': ['tempfile'], 'temp_dir': temp_dir, 'f': f, 'file': file}",
 "import tempfile\nfile = tempfile.NamedTemporaryFile(suffix='.json', dir=tempfile.gettempdir())\nfile.write(content)\nfile.close()",
 "import tempfile\ntemp_dir = tempfile.gettempdir()\nfile = tempfile.NamedTemporaryFile(suffix='.json', dir=temp_dir)\nfile.write(content)\nfile.close()"
]