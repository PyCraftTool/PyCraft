[
 "val = val1\nif number_value != 0:\n    val = val2",
 "val = val1\nif bool(number_value):\n    val = val2",
 "val = val1 if number_value == 0 else val2",
 "val = val1\nif number_value:\n    val = val2",
 "val = val1 if not number_value else val2",
 "if number_value:\n    val = val2\nelse:\n    val = val1",
 "val = val1\nnumber_value = bool(number_value)\nif number_value:\n    val = val2",
 "val = val1\nval = val2 if number_value else val1",
 "if number_value != 0:\n    val = val2\nelif number_value == 0:\n    val = val1",
 "import numpy as np\nif np.any(number_value):\n    val = val2\nelse:\n    val = val1",
 "val = val1\nif number_value != 0:\n    val = val2\nelse:\n    val = val1",
 "val = val1\nval = val2 if number_value != 0 else val1",
 "val = val1\nif 0 != number_value:\n    val = val2",
 "if number_value:\n    val = val2\nif not number_value:\n    val = val1",
 "val = val1 if 0 == number_value else val2",
 "if number_value != 0:\n    val = val2\nelse:\n    val = val1",
 "val = val1\ntemp = val2 if number_value != 0 else val1\nval = temp",
 "import sys\nsys.setrecursionlimit(10 ** 6)\nval = val1\nif 0 != number_value:\n    val = val2",
 "import numpy as np\nif not number_value:\n    val = val1\nelse:\n    val = val2",
 "(val, val2) = (val2 if number_value else val1, val1 if not number_value else val2)",
 "val = val1\nif number_value:\n    val = val2\nelse:\n    pass",
 "val = val1\nif number_value:\n    val = val2\nelse:\n    val = val1",
 "def get_val(val1, number_value):\n    val = val1\n    if number_value != 0:\n        val = val2\n    return val\nval = get_val(val1, number_value)",
 "val = val1 if not number_value != 0 else val2",
 "val = val1 if not bool(number_value) else val2",
 "def func(val1, number_value, val2):\n    val = val1\n    if number_value:\n        val = val2\n    return val\nval = func(val1, number_value, val2)",
 "def func(val1, number_value, val2):\n    if number_value:\n        val = val2\n    else:\n        val = val1\n    return val\nval = func(val1, number_value, val2)",
 "val = val1 if not not not number_value else val2",
 "val = val1 if not not not not not number_value else val2",
 "val = val1 if not number_value else val2 if number_value else val1",
 "val = val1\nnumber_value_is_not_zero = number_value != 0\nif number_value_is_not_zero:\n    val = val2",
 "def change_value(number_value):\n    if number_value != 0:\n        return val2\n    return val1\nval = change_value(number_value)",
 "val = (val1 if not number_value else val2) if number_value else val1",
 "import numpy as np\nnumber_value_is_not_zero = np.not_equal(number_value, 0)\nval = val1\nval = val2 if number_value_is_not_zero else val1"
]