[
 "import tempfile\nimport os\nimport json\ntemp_dir = tempfile.mkdtemp()\nfile = os.path.join(temp_dir, 'features.json')\nf = open(file, 'w')\njson.dump(content, f)",
 "import tempfile\nimport os\nimport json\ntemp_dir = tempfile.mkdtemp()\nfile = os.path.join(temp_dir, 'features.json')\njson.dump(content, open(file, 'w'))",
 "import tempfile\nimport os\nimport json\ntemp_dir = tempfile.mkdtemp()\nfile = os.path.join(temp_dir, 'features.json')\nf = open(file, 'w')\nf.write(json.dumps(content))",
 "import tempfile\nimport os\nimport json\ntemp_dir = tempfile.mkdtemp()\nfile = os.path.join(temp_dir, 'features.json')\nwith open(file, 'w') as f:\n    json.dump(content, f)",
 "import tempfile\nimport os\nimport json\ntemp_dir = tempfile.mkdtemp()\nfile = os.path.join(temp_dir, 'features.json')\nf = open(file, 'w')\njson.dump(content, f)\nf.close()",
 "import tempfile\nimport os\nimport json\ntemp_dir = tempfile.mkdtemp()\nfile = os.path.join(temp_dir, 'features.json')\nwith open(file, 'w') as f:\n    f.write(json.dumps(content))",
 "import tempfile\nimport os\ncontent = 'Content'\n\ndef write_temp_file(content):\n    temp_dir = tempfile.mkdtemp()\n    file = os.path.join(temp_dir, 'features.json')\n    f = open(file, 'w')\n    f.write(content)\n    return (file, f, temp_dir)\n\ndef delete_temp_file(f, temp_dir):\n    f.close()\n    import shutil\n    shutil.rmtree(temp_dir)\n(file, f, temp_dir) = write_temp_file(content)\ndelete_temp_file(f, temp_dir)",
 "import tempfile\nimport os\ncontent = 'Content'\n\ndef write_temp_file(content):\n    temp_dir = tempfile.mkdtemp()\n    file = os.path.join(temp_dir, 'features.json')\n    with open(file, 'w') as f:\n        f.write(content)\n    return (file, f, temp_dir)\n\ndef delete_temp_file(f, temp_dir):\n    f.close()\n    import shutil\n    shutil.rmtree(temp_dir)\n(file, f, temp_dir) = write_temp_file(content)\ndelete_temp_file(f, temp_dir)",
 "import tempfile\ndef create_temp_file(content):\n    with tempfile.TemporaryDirectory() as temp_dir:\n        file = temp_dir + '/features.json'\n        with open(file, 'w') as f:\n            f.write(content)\n        return (temp_dir, file, f)",
 "import tempfile\ndef write_content_to_temp_file(content):\n    temp_dir = tempfile.mkdtemp()\n    file = temp_dir + '/features.json'\n    f = open(file, 'w')\n    f.write(content)\n    f.close()\n    return (temp_dir, file, f)",
 "import tempfile\nimport os\ndef example1(content):\n    with tempfile.TemporaryDirectory() as temp_dir:\n        file = os.path.join(temp_dir, 'features.json')\n        with open(file, 'w') as f:\n            f.write(content)",
 "import tempfile\nimport os\ndef example2(content):\n    temp_dir = tempfile.TemporaryDirectory(delete=False)\n    try:\n        file = os.path.join(temp_dir.name, 'features.json')\n        with open(file, 'w') as f:\n            f.write(content)\n    finally:\n        temp_dir.cleanup()",
 "from pathlib import Path\nimport tempfile\ndef example3(content):\n    temp_dir = tempfile.TemporaryDirectory()\n    try:\n        file = Path(temp_dir.name) / 'features.json'\n        with file.open('w') as f:\n            f.write(content)\n    finally:\n        temp_dir.cleanup()",
 "from tempfile import TemporaryDirectory\nimport os\nwith TemporaryDirectory() as temp_dir:\n    file = os.path.join(temp_dir, 'features.json')\n    with open(file, 'w') as f:\n        try:\n            f.write(content)\n        except:\n            pass",
 "import tempfile\ndef create_temp_file(content):\n    file = tempfile.mkstemp()[1]\n    with open(file, 'w') as f:\n        f.write(content)\n    temp_dir = tempfile.gettempdir()\n    return (temp_dir, file, f)",
 "import tempfile\ndef create_temp_file(content):\n    temp_dir = tempfile.gettempdir()\n    file = '{}/features.json'.format(temp_dir)\n    with open(file, 'w') as f:\n        f.write(content)\n    return (temp_dir, file, f)",
 "import os\nimport tempfile\ndef create_temp_file(content):\n    temp_dir = tempfile.gettempdir()\n    file = os.path.join(temp_dir, 'features.json')\n    with open(file, 'w') as f:\n        f.write(content)\n    return (temp_dir, file, f)",
 "import tempfile\nimport pathlib\ndef create_temp_file(content):\n    with tempfile.TemporaryDirectory() as temp_dir:\n        file_path = pathlib.Path(temp_dir) / 'features.json'\n        with file_path.open(mode='w') as f:\n            f.write(content)\n        return (temp_dir, str(file_path), f)",
 "import tempfile\nfrom contextlib import closing\ndef create_temp_file(content):\n    with tempfile.TemporaryDirectory() as temp_dir:\n        file = temp_dir + '/features.json'\n        with closing(open(file, 'w')) as f:\n            f.write(content)\n        return (temp_dir, file, f)",
 "import os\nimport tempfile\ndef save_content_to_file(content):\n    temp_dir = tempfile.mkdtemp()\n    file = os.path.join(temp_dir, 'features.json')\n    with open(file, 'w') as f:\n        f.write(content)\n    return (temp_dir, file, f)",
 "import os\nimport tempfile\ndef save_content_to_file(content):\n    temp_dir = tempfile.mkdtemp()\n    file = os.path.join(temp_dir, 'features.json')\n    try:\n        f = open(file, 'w')\n        f.write(content)\n    except Exception as e:\n        f = None\n    finally:\n        if f is not None:\n            f.close()\n    return (temp_dir, file, f)",
 "import tempfile\nimport os\nimport json\ntemp_dir = tempfile.gettempdir()\nfile = os.path.join(temp_dir, 'features.json')\nf = open(file, 'w')\nf.write(json.dumps(content))",
 "import tempfile\nimport os\nimport json\nwith tempfile.TemporaryDirectory() as temp_dir:\n    file = os.path.join(temp_dir, 'features.json')\n    with open(file, 'w') as f:\n        json.dump(content, f)",
 "import tempfile\nfrom pathlib import Path\ndef write_to_temp_dir(content):\n    with tempfile.TemporaryDirectory() as temp_dir:\n        file = Path(temp_dir) / 'features.json'\n        with file.open('w') as f:\n            f.write(content)",
 "import tempfile\nimport os\nimport json\ntemp_dir = tempfile.mkdtemp()\nfile = os.path.join(temp_dir, 'features.json')\n\ndef write_content(file, content):\n    with open(file, 'w') as f:\n        json.dump(content, f)\nwrite_content(file, content)",
 "import tempfile\nimport os\nimport json\ntemp_dir = tempfile.mkdtemp()\nfile = os.path.join(temp_dir, 'features.json')\n\ndef write_content(file, content):\n    with open(file, 'w') as f:\n        f.write(json.dumps(content))\nwrite_content(file, content)",
 "import tempfile\nimport os\nimport json\ntemp_dir = tempfile.mkdtemp()\nfile = os.path.join(temp_dir, 'features.json')\n\ndef write_content(file, content):\n    with open(file, 'w') as f:\n        f.write(str(content))\nwrite_content(file, content)",
 "import tempfile\nimport os\nimport json\ntemp_dir = tempfile.mkdtemp()\nfile = os.path.join(temp_dir, 'features.json')\n\ndef write_content(file, content):\n    with open(file, 'w') as f:\n        for item in content:\n            f.write('%s\\n' % item)\nwrite_content(file, content)",
 "import tempfile\nimport os\nimport json\ntemp_dir = tempfile.mkdtemp()\nfile = os.path.join(temp_dir, 'features.json')\n\ndef write_content(file, content):\n    with open(file, 'w') as f:\n        f.writelines(content)\nwrite_content(file, content)",
 "import os\nimport tempfile\nfrom multiprocessing import Pool\ndef worker(file, content):\n    with open(file, 'w') as f:\n        f.write(content)\ntemp_dir = tempfile.mkdtemp()\nfile = os.path.join(temp_dir, 'features.json')\nif __name__ == '__main__':\n    with Pool(1) as pool:\n        pool.apply(worker, [file, content])",
 "import os\nimport tempfile\nimport contextlib\ndef write_to_file(p, c):\n    with open(p, 'w') as f_object:\n        f_object.write(c)\nwith tempfile.TemporaryDirectory() as temp_dir:\n    file = os.path.join(temp_dir, 'features.json')\n    with contextlib.suppress(Exception):\n        write_to_file(file, content)",
 "import tempfile\nimport os\nfrom shutil import copyfile\ncopyfile('features.json', os.path.join(tempfile.mkdtemp(), 'features.json'))",
 "import tempfile\nimport os\ndef temp_file(content):\n    temp_dir = tempfile.mkdtemp()\n    file = os.path.join(temp_dir, 'features.json')\n    with open(file, 'w') as f:\n        f.write(content)",
 "import tempfile\nimport os\ndirpath = tempfile.mkdtemp()\ndirname = dirpath\nfile = os.path.join(dirname, 'features.json')\nwith open(file, 'w') as f:\n    f.write('{}')",
 "import tempfile\nfrom pathlib import Path\ndirpath = tempfile.mkdtemp()\ndirname = Path(dirpath)\nfile = dirname / 'features.json'\nwith open(file, 'w') as f:\n    f.write('{}')",
 "import tempfile\nimport os\ndirpath = tempfile.mkdtemp()\ndirname = dirpath\nfile = dirname + os.sep + 'features.json'\nwith open(file, 'w') as f:\n    f.write('{}')",
 "import tempfile\nimport os\ndirpath = tempfile.mkdtemp()\ndirname = dirpath\nfile = '{}{}features.json'.format(dirname, os.sep)\nwith open(file, 'w') as f:\n    f.write('{}')"
]