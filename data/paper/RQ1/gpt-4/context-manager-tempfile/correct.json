[
 "import tempfile\ntemp_dir = tempfile.TemporaryDirectory()\nfile = temp_dir.name + '/features.json'\nf = open(file, 'w')\nf.write(content)\ntemp_dir.cleanup()",
 "import tempfile\nimport os\ntemp_dir = tempfile.TemporaryDirectory()\nfile = os.path.join(temp_dir.name, 'features.json')\nf = open(file, 'w')\nf.write(content)\ntemp_dir.cleanup()",
 "import tempfile\nimport os\ntemp_dir = tempfile.TemporaryDirectory()\nfile = os.path.join(temp_dir.name, 'features.json')\nwith open(file, 'w') as f:\n    f.write(content)\ntemp_dir.cleanup()",
 "import tempfile\nimport os\nwith tempfile.TemporaryDirectory() as temp_dir:\n    file = os.path.join(temp_dir, 'features.json')\n    with open(file, 'w') as f:\n        f.write(content)",
 "import tempfile\nwith tempfile.TemporaryDirectory() as temp_dir:\n    file = '{}/features.json'.format(temp_dir)\n    with open(file, 'w') as f:\n        f.write(content)",
 "import tempfile\nwith tempfile.TemporaryDirectory() as temp_dir:\n    file = temp_dir + '/features.json'\n    with open(file, 'w') as f:\n        f.write(content)",
 "import tempfile\nwith tempfile.TemporaryDirectory() as temp_dir:\n    file = temp_dir + '/features.json'\n    f = open(file, 'w')\n    try:\n        f.write(content)\n    finally:\n        f.close()",
 "import tempfile\nwith tempfile.TemporaryDirectory() as temp_dir:\n    file = temp_dir + '/features.json'\n    try:\n        f = open(file, 'w')\n        f.write(content)\n    finally:\n        f.close()",
 "import tempfile\nimport os\ntemp_dir = tempfile.TemporaryDirectory()\nfile = '{}/features.json'.format(temp_dir.name)\nwith open(file, 'w') as f:\n    f.write(content)\ntemp_dir.cleanup()",
 "from tempfile import TemporaryDirectory\nfrom os.path import join\ntemp_dir = TemporaryDirectory()\nfile = join(temp_dir.name, 'features.json')\nwith open(file, 'w') as f:\n    f.write(content)\ntemp_dir.cleanup()",
 "import tempfile\nimport os\ntemp_dir = tempfile.TemporaryDirectory()\nfile = os.path.join(temp_dir.name, 'features.json')\nf = open(file, 'w')\nf.write(content)\nf.close()\ntemp_dir.cleanup()",
 "import tempfile\nimport os\ntemp_dir = tempfile.TemporaryDirectory()\nfile = temp_dir.name + '/features.json'\nwith open(file, 'w') as f:\n    f.write(content)\ntemp_dir.cleanup()",
 "import tempfile\nimport os\ntemp_dir = tempfile.TemporaryDirectory()\nfile = temp_dir.name + os.sep + 'features.json'\nwith open(file, 'w') as f:\n    f.write(content)\ntemp_dir.cleanup()",
 "import tempfile\nimport os\ntemp_dir = tempfile.TemporaryDirectory()\nfile = '{}/features.json'.format(temp_dir.name)\nf = open(file, 'w')\nf.write(content)\nf.close()\ntemp_dir.cleanup()",
 "from tempfile import TemporaryDirectory\nfrom os.path import join\ntemp_dir = TemporaryDirectory()\nfile = join(temp_dir.name, 'features.json')\nf = open(file, 'w')\nf.write(content)\nf.close()\ntemp_dir.cleanup()",
 "import tempfile\nimport os\ntemp_dir = tempfile.TemporaryDirectory()\nfile = os.path.join(temp_dir.name, 'features.json')\ntry:\n    f = open(file, 'w')\n    f.write(content)\nfinally:\n    f.close()\ntemp_dir.cleanup()",
 "import tempfile\nimport os\nimport shutil\ntemp_dir = tempfile.mkdtemp()\nfile = os.path.join(temp_dir, 'features.json')\nwith open(file, 'w') as f:\n    f.write(content)\nshutil.rmtree(temp_dir)",
 "import os\nimport tempfile\nclass TempFile:\n\n    def __init__(self, dir, file_name, content):\n        self.dir = tempfile.mkdtemp()\n        self.file = os.path.join(self.dir, file_name)\n        self.content = content\n\n    def write_content(self):\n        with open(self.file, 'w') as f:\n            f.write(self.content)\ntemp_dir = tempfile.mkdtemp()\nfile = os.path.join(temp_dir, 'features.json')\ntempFile = TempFile(temp_dir, 'features.json', content)\ntempFile.write_content()",
 "import tempfile\nimport shutil\ntemp_dir = tempfile.mkdtemp()\nfile = temp_dir + '/features.json'\nf = open(file, 'w')\nf.write(content)\nshutil.rmtree(temp_dir)",
 "import tempfile\nimport os\nimport shutil\ntemp_dir = tempfile.mkdtemp()\nfile = os.path.join(temp_dir, 'features.json')\nf = open(file, 'w')\nf.write(content)\nshutil.rmtree(temp_dir)",
 "import tempfile\nimport os\ntemp_dir = tempfile.TemporaryDirectory()\nfile = os.path.join(temp_dir.name, 'features.json')\ntry:\n    f = open(file, 'w')\n    f.write(content)\nfinally:\n    temp_dir.cleanup()",
 "import os\nimport tempfile\ntemp_dir = tempfile.TemporaryDirectory()\nfile = os.path.join(temp_dir.name, 'features.json')\nwith open(file, 'w') as f:\n    f.write(content)\ndel temp_dir",
 "import os\nimport tempfile\nfile = os.path.join(tempfile.mkdtemp(), 'features.json')\nwith open(file, 'w') as f:\n    f.write(content)\nos.system('rm -rf {0}'.format(os.path.dirname(file)))",
 "import os\nimport tempfile\ntemp_dir = tempfile.mkdtemp()\nfile = os.path.join(temp_dir, 'features.json')\nwith open(file, 'w') as f:\n    f.write(content)\nos.remove(file)\nos.rmdir(temp_dir)",
 "import os\nfrom tempfile import mkdtemp\ntemp_dir = mkdtemp()\nfile = os.path.join(temp_dir, 'features.json')\nf = open(file, 'w')\nf.write(content)\nf.close()\nos.remove(file)\nos.rmdir(temp_dir)",
 "import os\nimport tempfile\ntemp_dir = tempfile.mkdtemp()\nfile = os.path.join(temp_dir, 'features.json')\nf = open(file, 'w')\nf.write(content)\nf.close()\nfor (root, dirs, files) in os.walk(temp_dir, topdown=False):\n    for name in files:\n        os.remove(os.path.join(root, name))\n    for name in dirs:\n        os.rmdir(os.path.join(root, name))",
 "import os\nimport tempfile\ntemp_dir = tempfile.mkdtemp()\nfile = os.path.join(temp_dir, 'features.json')\ntry:\n    with open(file, 'w') as f:\n        f.write(content)\nfinally:\n    os.remove(file)\n    os.rmdir(temp_dir)",
 "import tempfile\nimport shutil\nimport os\ntemp_dir = tempfile.mkdtemp()\nfile = os.path.join(temp_dir, 'features.json')\ntry:\n    f = open(file, 'w')\n    f.write(content)\nfinally:\n    f.close()\n    shutil.rmtree(temp_dir)",
 "import tempfile\nimport shutil\nimport os\ndef write_to_file(directory, filename, content):\n    file = os.path.join(directory, filename)\n    with open(file, 'w') as f:\n        f.write(content)\n    return file\ntemp_dir = tempfile.mkdtemp()\nfile = write_to_file(temp_dir, 'features.json', content)\nshutil.rmtree(temp_dir)",
 "import os\nimport tempfile\nimport shutil\ntemp_dir = tempfile.mkdtemp()\nfile = os.path.join(temp_dir, 'features.json')\nf = open(file, 'w')\nf.write(content)\nf.close()\nshutil.rmtree(temp_dir)",
 "import os\nimport tempfile\nimport shutil\ntemp_dir = tempfile.mkdtemp()\nfile = os.path.join(temp_dir, 'features.json')\nf = open(file, 'w')\ntry:\n    f.write(content)\nfinally:\n    f.close()\nshutil.rmtree(temp_dir)",
 "from tempfile import mkdtemp\nfrom os.path import join\nfrom shutil import rmtree\ntemp_dir = mkdtemp()\nfile = join(temp_dir, 'features.json')\nwith open(file, 'w') as f:\n    f.write(content)\nrmtree(temp_dir)",
 "from tempfile import TemporaryDirectory\nfrom os.path import join\nwith TemporaryDirectory() as temp_dir:\n    file = join(temp_dir, 'features.json')\n    with open(file, 'w') as f:\n        f.write(content)",
 "import os\nimport tempfile\ntemp_dir = tempfile.TemporaryDirectory()\nfile = '{}{}'.format(temp_dir.name, '/features.json')\nf = open(file, 'w')\nf.write(content)\ntemp_dir.cleanup()",
 "import os\nimport tempfile\ntemp_dir = tempfile.TemporaryDirectory()\nfile = '{}/{}'.format(temp_dir.name, 'features.json')\nf = open(file, 'w')\nf.write(content)\nf.close()\ntemp_dir.cleanup()",
 "import os\nimport tempfile\ntemp_dir = tempfile.TemporaryDirectory()\nfile = os.path.join(temp_dir.name, 'features.json')\nf = open(file, 'w')\ntry:\n    f.write(content)\nfinally:\n    f.close()\ntemp_dir.cleanup()",
 "import tempfile\nwith tempfile.TemporaryDirectory() as temp_dir:\n    file = temp_dir + '/features.json'\n    f = open(file, 'w')\n    f.write(content)\n    f.close()",
 "import tempfile\nimport os\ntemp_dir = tempfile.TemporaryDirectory()\nfile = os.path.join(temp_dir.name, 'features.json')\nf = open(file, 'w')\ntry:\n    f.write(content)\nfinally:\n    f.close()\n    temp_dir.cleanup()",
 "import tempfile\nimport os\ntemp_dir = tempfile.TemporaryDirectory()\nfile = os.path.join(temp_dir.name, 'features.json')\ntry:\n    with open(file, 'w') as f:\n        f.write(content)\nfinally:\n    temp_dir.cleanup()",
 "import tempfile\nimport os\nfile = tempfile.mktemp()\nf = open(file, 'w')\nf.write(content)\nos.remove(file)",
 "import tempfile\nimport os\ntemp_dir = tempfile.TemporaryDirectory()\nfile = os.path.join(temp_dir.name, 'features.json')\n\ndef write_content():\n    f = open(file, 'w')\n    f.write(content)\n    f.close()\nwrite_content()\ntemp_dir.cleanup()",
 "import tempfile\nwith tempfile.TemporaryDirectory() as temp_dir:\n    file = '{0}/features.json'.format(temp_dir)\n    with open(file, 'w') as f:\n        f.write(content)",
 "import tempfile\nwith tempfile.TemporaryDirectory() as temp_dir:\n    file = '%s/features.json' % temp_dir\n    with open(file, 'w') as f:\n        f.write(content)",
 "import os\nimport tempfile\nwith tempfile.TemporaryDirectory() as temp_dir:\n    file = os.path.join(temp_dir, 'features.json')\n    f = open(file, 'w')\n    f.write(content)\n    f.close()",
 "import os\nimport tempfile\nwith tempfile.TemporaryDirectory() as temp_dir:\n    file = os.path.join(temp_dir, 'features.json')\n    try:\n        f = open(file, 'w')\n        f.write(content)\n    finally:\n        f.close()",
 "import tempfile\nwith tempfile.TemporaryDirectory() as temp_dir:\n    file = f'{temp_dir}/features.json'\n    with open(file, 'w') as f:\n        f.write(content)",
 "import tempfile\nimport os\nimport tempfile\nimport os\nwith tempfile.TemporaryDirectory() as temp_dir:\n    file = os.path.join(temp_dir, 'features.json')\n    with open(file, 'w') as f:\n        f.write(content)\nwith tempfile.TemporaryDirectory() as temp_dir, open(os.path.join(temp_dir, 'features.json'), 'w') as f:\n    f.write(content)",
 "import tempfile\nimport os\ntemp_dir = tempfile.TemporaryDirectory()\n\ndef create_file_path(directory, file_name):\n    return os.path.join(directory.name, file_name)\nfile = create_file_path(temp_dir, 'features.json')\n\ndef write_to_file(file, content):\n    with open(file, 'w') as f:\n        f.write(content)\nwrite_to_file(file, content)\ntemp_dir.cleanup()",
 "import tempfile\nimport os\ntemp_dir = tempfile.TemporaryDirectory()\ncreate_file_path = lambda directory, file_name: os.path.join(directory.name, file_name)\nfile = create_file_path(temp_dir, 'features.json')\nwrite_content = lambda file, content: open(file, 'w').write(content)\nwrite_content(file, content)\ntemp_dir.cleanup()",
 "import tempfile\nimport os\ntemp_dir = tempfile.TemporaryDirectory()\nfile = f'{temp_dir.name}/features.json'\nwith open(file, 'w') as f:\n    f.write(content)\ntemp_dir.cleanup()",
 "import os\nfrom tempfile import TemporaryDirectory\nfrom pathlib import Path\nwith TemporaryDirectory() as temp_dir:\n    file = os.path.join(temp_dir, 'features.json')\n    with open(file, 'w') as f:\n        f.write(content)",
 "import os\nimport tempfile\nwith tempfile.NamedTemporaryFile(mode='w+t', suffix='.json', delete=True) as f:\n    f.write(content)\nfile = f.name\ntemp_dir = os.path.dirname(file)",
 "from tempfile import TemporaryDirectory\nwith TemporaryDirectory() as temp_dir:\n    file = f'{temp_dir}/features.json'\n    with open(file, 'w') as f:\n        f.write(content)",
 "import tempfile\nimport os\nimport shutil\ntemp_dir = tempfile.mkdtemp()\nfile = os.path.join(temp_dir, 'features.json')\ntry:\n    with open(file, 'w') as f:\n        f.write(content)\nfinally:\n    shutil.rmtree(temp_dir)",
 "import tempfile\nimport os\nuse_temp_dir = True\nif use_temp_dir:\n    temp_dir = tempfile.TemporaryDirectory()\n    file = os.path.join(temp_dir.name, 'features.json')\n    with open(file, 'w') as f:\n        f.write(content)\n    temp_dir.cleanup()\nelse:\n    file = 'features.json'\n    with open(file, 'w') as f:\n        f.write(content)",
 "import tempfile\nimport os\ndir_obj = tempfile.TemporaryDirectory()\ntemp_dir = dir_obj.name\nfile = os.path.join(temp_dir, 'features.json')\nfile_obj = open(file, 'w')\nfile_obj.write(content)\nfile_obj.close()\ndir_obj.cleanup()",
 "import os\nfrom pathlib import Path\nimport tempfile\nwith tempfile.TemporaryDirectory() as temp_dir:\n    temp_dir_path = Path(temp_dir)\n    file_path = temp_dir_path / 'features.json'\n    file = str(file_path)\n    with file_path.open('w') as f:\n        f.write(content)",
 "import os\nfrom tempfile import TemporaryDirectory\nwith TemporaryDirectory() as temp_dir:\n    file = '/'.join([temp_dir, 'features.json'])\n    f = open(file, 'w')\n    f.write(content)\n    f.close()",
 "import tempfile\nimport os\nwith tempfile.TemporaryDirectory() as temp_dir:\n    file = os.path.join(temp_dir, 'features.json')\n    f = open(file, 'w')\n    try:\n        f.write(content)\n    finally:\n        f.close()",
 "import tempfile, contextlib\ntemp_dir = tempfile.TemporaryDirectory()\nfile = '{}/features.json'.format(temp_dir.name)\nwith contextlib.closing(open(file, 'w')) as f:\n    f.write(content)\ntemp_dir.cleanup()",
 "import os\nimport tempfile\ndef make_temp_file(directory, filename):\n    return os.path.join(directory, filename)\n\ndef write_content(file, content):\n    with open(file, 'w') as f:\n        f.write(content)\ntemp_dir = tempfile.TemporaryDirectory()\nfile = make_temp_file(temp_dir.name, 'features.json')\nwrite_content(file, content)\ntemp_dir.cleanup()",
 "import tempfile\nimport os\nwith tempfile.TemporaryDirectory() as temp_dir:\n    file = f'{temp_dir}/features.json'\n    f = open(file, 'w')\n    f.write(content)\n    f.close()",
 "import tempfile\nwith tempfile.TemporaryDirectory() as temp_dir:\n    file = ''.join([temp_dir, '/features.json'])\n    with open(file, 'w') as f:\n        f.write(content)",
 "import tempfile\nwith tempfile.TemporaryDirectory() as temp_dir:\n    file = temp_dir + '/' + 'features.json'\n    with open(file, 'w') as f:\n        f.write(content)",
 "import tempfile\nfrom pathlib import Path\nwith tempfile.TemporaryDirectory() as temp_dir:\n    file_path = Path(temp_dir) / 'features.json'\n    file_path.write_text(content)\n    file = str(file_path)",
 "import os\nfrom tempfile import TemporaryDirectory\nwith TemporaryDirectory() as temp_dir:\n    file = os.path.join(temp_dir, 'features.json')\n    f = open(file, 'w')\n    f.write(content)\n    f.close()",
 "import tempfile\nimport os\nfrom contextlib import closing\nwith tempfile.TemporaryDirectory() as temp_dir:\n    file = os.path.join(temp_dir, 'features.json')\n    with closing(open(file, 'w')) as f:\n        f.write(content)",
 "import os\nimport tempfile\ntemp_dir = tempfile.mkdtemp()\ntry:\n    file = os.path.join(temp_dir, 'features.json')\n    with open(file, 'w') as f:\n        f.write(content)\nfinally:\n    for (root, dirs, files) in os.walk(temp_dir, topdown=False):\n        for name in files:\n            os.remove(os.path.join(root, name))\n        for name in dirs:\n            os.rmdir(os.path.join(root, name))",
 "import os\nimport tempfile\ntemp_dir = tempfile.mkdtemp()\ntry:\n    file = os.path.join(temp_dir, 'features.json')\n    f = open(file, 'w')\n    try:\n        f.write(content)\n    finally:\n        f.close()\nfinally:\n    for (root, dirs, files) in os.walk(temp_dir, topdown=False):\n        for name in files:\n            os.remove(os.path.join(root, name))\n        for name in dirs:\n            os.rmdir(os.path.join(root, name))",
 "import os\nimport tempfile\nwith tempfile.NamedTemporaryFile(mode='w', delete=False) as tf:\n    file = tf.name\n    f = tf.file\n    f.write(content)\nos.unlink(file)",
 "import os\nimport tempfile\ntemp_dir = tempfile.mkdtemp()\ntry:\n    file = os.path.join(temp_dir, 'features.json')\n    f = open(file, 'w')\n    f.write(content)\nfinally:\n    f.close()\n    os.remove(file)\n    os.rmdir(temp_dir)",
 "import tempfile, contextlib\nwith tempfile.TemporaryDirectory() as temp_dir:\n    file = '{}/features.json'.format(temp_dir)\n    with contextlib.closing(open(file, 'w')) as f:\n        f.write(content)",
 "import os\nimport tempfile\nimport contextlib\nwith tempfile.TemporaryDirectory() as temp_dir:\n    file = os.path.join(temp_dir, 'features.json')\n    with contextlib.closing(open(file, 'w')) as f:\n        f.write(content)",
 "import os\nimport tempfile\ndef make_temp_file(directory, filename):\n    return os.path.join(directory, filename)\n\ndef write_content(file, content):\n    with open(file, 'w') as f:\n        f.write(content)\n        return f\ntemp_dir = tempfile.TemporaryDirectory()\nfile = make_temp_file(temp_dir.name, 'features.json')\nf = write_content(file, content)\ntemp_dir.cleanup()",
 "import os\nimport tempfile\ndef make_temp_file(directory, filename):\n    return os.path.join(directory, filename)\n\ndef write_content(file, content):\n    with open(file, 'w') as f:\n        f.write(content)\n        return f\ntemp_dir = tempfile.TemporaryDirectory()\nfile = make_temp_file(temp_dir.name, 'features.json')\nf = write_content(file, content)\nassert f.name == file\ntemp_dir.cleanup()",
 "import os\nimport tempfile\ndef write_temp_file(directory, filename, content):\n    file = os.path.join(directory, filename)\n    with open(file, 'w') as f:\n        f.write(content)\n    return file\ntemp_dir = tempfile.TemporaryDirectory()\nfile = write_temp_file(temp_dir.name, 'features.json', content)\ntemp_dir.cleanup()",
 "import os\nimport tempfile\ndef create_and_write_temp_file(directory, filename, content):\n    temp_dir = tempfile.TemporaryDirectory()\n    file = os.path.join(temp_dir.name, filename)\n    with open(file, 'w') as f:\n        f.write(content)\n    temp_dir.cleanup()\n    return (file, temp_dir)\n(file, temp_dir) = create_and_write_temp_file('temp', 'features.json', content)",
 "import tempfile\nimport shutil\nwith tempfile.TemporaryDirectory() as temp_dir:\n    file = shutil.os.path.join(temp_dir, 'features.json')\n    with open(file, 'w') as f:\n        f.write(content)",
 "import tempfile\ntry:\n    temp_dir = tempfile.TemporaryDirectory()\n    file = temp_dir.name + '/features.json'\n    f = open(file, 'w')\n    f.write(content)\nfinally:\n    temp_dir.cleanup()",
 "import tempfile\nimport os\ntemp_dir = tempfile.TemporaryDirectory()\nfile = '{}/features.json'.format(temp_dir.name)\nf = open(file, 'w')\nf.write(content)\ntemp_dir.cleanup()",
 "import tempfile\nimport os\ntemp_dir = tempfile.TemporaryDirectory()\nfile = temp_dir.name + '/features.json'\nf = open(file, 'w')\nf.write(content)\nf.close()\ntemp_dir.cleanup()",
 "import tempfile\ntry:\n    temp_dir = tempfile.TemporaryDirectory()\n    file = '{}/features.json'.format(temp_dir.name)\n    with open(file, 'w') as f:\n        f.write(content)\nfinally:\n    temp_dir.cleanup()",
 "import tempfile\nimport os\ntry:\n    temp_dir = tempfile.TemporaryDirectory()\n    file = os.path.join(temp_dir.name, 'features.json')\n    with open(file, 'w') as f:\n        f.write(content)\nfinally:\n    temp_dir.cleanup()",
 "import tempfile\ntry:\n    temp_dir = tempfile.TemporaryDirectory()\n    file = temp_dir.name + '/features.json'\n    f = open(file, 'w')\n    try:\n        f.write(content)\n    finally:\n        f.close()\nfinally:\n    temp_dir.cleanup()",
 "import tempfile\ntry:\n    temp_dir = tempfile.TemporaryDirectory()\n    file = '%s/features.json' % temp_dir.name\n    f = open(file, 'w')\n    f.write(content)\nfinally:\n    temp_dir.cleanup()",
 "import tempfile\ntry:\n    temp_dir = tempfile.TemporaryDirectory()\n    file = temp_dir.name + '/features.json'\n    with open(file, 'w') as f:\n        f.write(content)\nfinally:\n    temp_dir.cleanup()",
 "import tempfile\ntry:\n    temp_dir = tempfile.TemporaryDirectory()\n    file = ''.join([temp_dir.name, '/features.json'])\n    f = open(file, 'w')\n    f.write(content)\nfinally:\n    temp_dir.cleanup()",
 "import tempfile\nimport os\ntemp_dir = tempfile.TemporaryDirectory()\nfile = ''.join([temp_dir.name, '/features.json'])\nwith open(file, 'w') as f:\n    f.write(content)\ntemp_dir.cleanup()",
 "import tempfile\nimport os\ntemp_dir = tempfile.TemporaryDirectory()\nfile = '/'.join([temp_dir.name, 'features.json'])\nwith open(file, 'w') as f:\n    f.write(content)\ntemp_dir.cleanup()",
 "import tempfile\nimport os\ntemp_dir = tempfile.TemporaryDirectory()\nfile = os.path.join(temp_dir.name, 'features.json')\n\ndef write_content(file, content):\n    with open(file, 'w') as f:\n        f.write(content)\nwrite_content(file, content)\ntemp_dir.cleanup()",
 "import tempfile\nimport os\ntemp_dir = tempfile.TemporaryDirectory()\nfile = os.path.join(temp_dir.name, 'features.json')\ntry:\n    f = open(file, 'w')\n    f.write(content)\nfinally:\n    f.close()\n    temp_dir.cleanup()",
 "import tempfile\nimport os\ntemp_dir = tempfile.TemporaryDirectory()\nfile = os.path.join(temp_dir.name, 'features.json')\ntry:\n    f = open(file, 'w')\n    try:\n        f.write(content)\n    finally:\n        f.close()\nfinally:\n    temp_dir.cleanup()",
 "import tempfile\nimport os\ntemp_dir = tempfile.TemporaryDirectory()\nfile = os.path.join(temp_dir.name, 'features.json')\n\ndef write_content():\n    with open(file, 'w') as f:\n        f.write(content)\ntry:\n    write_content()\nfinally:\n    temp_dir.cleanup()",
 "import tempfile\nimport os\ntemp_dir = tempfile.TemporaryDirectory()\nfile = os.path.join(temp_dir.name, 'features.json')\n\ndef write_content():\n    f = open(file, 'w')\n    f.write(content)\n    f.close()\ntry:\n    write_content()\nfinally:\n    temp_dir.cleanup()",
 "import tempfile\nimport os\ntemp_dir = tempfile.TemporaryDirectory()\nfile = os.path.join(temp_dir.name, 'features.json')\n\ndef write_content():\n    f = open(file, 'w')\n    try:\n        f.write(content)\n    finally:\n        f.close()\ntry:\n    write_content()\nfinally:\n    temp_dir.cleanup()",
 "import tempfile\nimport os\ntemp_dir = tempfile.TemporaryDirectory()\nfile = '%s/features.json' % temp_dir.name\nf = open(file, 'w')\nf.write(content)\ntemp_dir.cleanup()",
 "import tempfile\nimport os\ntemp_dir = tempfile.TemporaryDirectory()\nfile = temp_dir.name + os.sep + 'features.json'\nf = open(file, 'w')\nf.write(content)\ntemp_dir.cleanup()",
 "import tempfile\nimport os\ntemp_dir = tempfile.TemporaryDirectory()\nfile = ''.join([temp_dir.name, '/features.json'])\nf = open(file, 'w')\nf.write(content)\ntemp_dir.cleanup()",
 "import tempfile\nimport os\ntemp_dir = tempfile.TemporaryDirectory()\nfile = f'{temp_dir.name}/features.json'\nf = open(file, 'w')\nf.write(content)\ntemp_dir.cleanup()",
 "import tempfile\nimport os\ntemp_dir = tempfile.TemporaryDirectory()\nfile = '%s/features.json' % temp_dir.name\nwith open(file, 'w') as f:\n    f.write(content)\ntemp_dir.cleanup()",
 "import tempfile\nimport os\ntemp_dir = tempfile.TemporaryDirectory()\nfile = temp_dir.name + os.sep + 'features.json'\nf = open(file, 'w')\nf.write(content)\nf.close()\ntemp_dir.cleanup()",
 "import tempfile\nimport os\ntemp_dir = tempfile.TemporaryDirectory()\nfile = '%s/features.json' % temp_dir.name\nf = open(file, 'w')\nf.write(content)\nf.close()\ntemp_dir.cleanup()",
 "import tempfile\nimport os\ntemp_dir_obj = tempfile.TemporaryDirectory(dir='.')\ntemp_dir = temp_dir_obj.name\nlocation = temp_dir_obj.name\nfile = location + '/features.json'\nf = open(file, 'w')\nf.write(content)\ntemp_dir_obj.cleanup()",
 "import tempfile\nfile = '/features.json'\nwith tempfile.TemporaryDirectory() as temp_dir:\n    file = temp_dir + file\n    with open(file, 'w') as f:\n        f.write(content)",
 "from contextlib import ExitStack\nimport tempfile\nwith ExitStack() as stack:\n    temp_dir = tempfile.TemporaryDirectory()\n    stack.callback(temp_dir.cleanup)\n    file = '%s/features.json' % temp_dir.name\n    f = stack.enter_context(open(file, 'w'))\n    f.write(content)",
 "import tempfile\nfrom os.path import join\nwith tempfile.TemporaryDirectory() as temp_dir:\n    file = join(temp_dir, 'features.json')\n    with open(file, 'w') as f:\n        f.write(content)",
 "import tempfile\nwith tempfile.TemporaryDirectory() as temp_dir:\n    file = '/'.join([temp_dir, 'features.json'])\n    f = open(file, 'w')\n    try:\n        f.write(content)\n    finally:\n        f.close()",
 "import tempfile\ntry:\n    temp_dir = tempfile.mkdtemp()\n    file = temp_dir + '/features.json'\n    f = open(file, 'w')\n    f.write(content)\nfinally:\n    import shutil\n    shutil.rmtree(temp_dir)",
 "import os\nimport tempfile\ntemp_dir = tempfile.mkdtemp()\ntry:\n    file = os.path.join(temp_dir, 'features.json')\n    f = open(file, 'w')\n    f.write(content)\n    f.close()\nfinally:\n    for file_name in os.listdir(temp_dir):\n        os.remove(os.path.join(temp_dir, file_name))\n    os.rmdir(temp_dir)",
 "import os\nimport tempfile\ntemp_manager = tempfile.TemporaryDirectory()\n_temp_dir = temp_manager.__enter__()\ntry:\n    file = os.path.join(_temp_dir, 'features.json')\n    f = open(file, 'w')\n    f.write(content)\n    f.close()\nfinally:\n    temp_manager.__exit__(None, None, None)",
 "import os, tempfile\nwith tempfile.TemporaryDirectory(dir='.') as temp_dir_obj:\n    file = os.path.join(temp_dir_obj, 'features.json')\n    with open(file, 'w') as f:\n        f.write(content)",
 "import tempfile\nimport os\ncontext = tempfile.TemporaryDirectory(dir='.')\ntemp_dir = context.name\nplace = temp_dir\nfile = os.path.join(place, 'features.json')\nf_obj = open(file, 'w')\nf_obj.write(content)\ncontext.cleanup()",
 "from pathlib import Path\nimport tempfile\nwith tempfile.TemporaryDirectory() as temp_dir:\n    temp_dir = Path(temp_dir)\n    file = str(temp_dir / 'features.json')\n    with open(file, 'w') as f:\n        f.write(content)",
 "import tempfile\nimport os\ntry:\n    temp_dir = tempfile.NamedTemporaryFile()\n    file = temp_dir.name + '\\x0ceatures.json'\n    with open(file, 'w') as fileObj:\n        fileObj.write(content)\nfinally:\n    os.remove(file)",
 "import tempfile\nimport os\ntemp_dir = tempfile.TemporaryDirectory()\nfile = '/'.join([temp_dir.name, 'features.json'])\ntry:\n    with open(file, 'w') as f:\n        f.write(content)\nexcept Exception as e:\n    raise e\nfinally:\n    temp_dir.cleanup()"
]