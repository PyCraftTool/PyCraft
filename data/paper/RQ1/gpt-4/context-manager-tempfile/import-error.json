[
 "\nwith tempfile.TemporaryDirectory() as temp_dir:\n    file = temp_dir + '/features.json'\n    f = open(file, 'w')\n    f.write(content)",
 "import tempfile\nimport os\ndef write_to_temp_file(content):\n    with tempfile.TemporaryDirectory() as temp_dir:\n        file = os.path.join(temp_dir, 'features.json')\n        with open(file, 'w') as f:\n            f.write(content)\nwrite_to_temp_file(content)",
 "import tempfile\nimport os\ndef write_to_temp_file(content):\n    temp_dir = tempfile.mkdtemp()\n    file = os.path.join(temp_dir, 'features.json')\n    f = open(file, 'w')\n    f.write(content)\n    f.close()\nwrite_to_temp_file(content)",
 "import tempfile\nimport os\ndef write_to_temp_file(content):\n    temp_dir = tempfile.TemporaryDirectory()\n    file = os.path.join(temp_dir.name, 'features.json')\n    f = open(file, 'w')\n    f.write(content)\n    f.close()\nwrite_to_temp_file(content)",
 "import tempfile\nimport os\ndef write_to_temp_file(content):\n    temp_dir = tempfile.mkdtemp()\n    file = os.path.join(temp_dir, 'features.json')\n    with open(file, 'w') as f:\n        f.write(content)\nwrite_to_temp_file(content)",
 "import tempfile\nimport os\ndef write_to_temp_file(content):\n    temp_dir = tempfile.gettempdir()\n    file = os.path.join(temp_dir, 'features.json')\n    with open(file, 'w') as f:\n        f.write(content)\nwrite_to_temp_file(content)",
 "import tempfile\nimport os\ndef write_to_temp_file(content):\n    temp_dir = tempfile.mkdtemp()\n    file = os.path.join(temp_dir, 'features.json')\n    try:\n        f = open(file, 'w')\n        f.write(content)\n    finally:\n        f.close()\nwrite_to_temp_file(content)",
 "import os\nimport tempfile\ndef write_to_temp_file(content):\n    temp_dir = tempfile.TemporaryDirectory()\n    file = os.path.join(temp_dir.name, 'features.json')\n    with open(file, 'w') as f:\n        f.write(content)\n    temp_dir.cleanup()\nwrite_to_temp_file(content)",
 "import tempfile\nfrom pathlib import Path\ndef write_to_temp_file(content):\n    temp_dir = tempfile.TemporaryDirectory()\n    file = Path(temp_dir.name) / 'features.json'\n    with open(file, 'w') as f:\n        f.write(content)\n    temp_dir.cleanup()\nwrite_to_temp_file(content)",
 "import tempfile\ndef write_content_to_temporary_file(content):\n    with tempfile.TemporaryDirectory() as temp_dir:\n        file = temp_dir + '/features.json'\n        with open(file, 'w') as f:\n            f.write(content)\nwrite_content_to_temporary_file(content)",
 "import tempfile\ndef create_temp_file_and_write_content(content):\n    temp_dir = tempfile.mkdtemp()\n    file = temp_dir + '/features.json'\n    with open(file, 'w') as file_to_write:\n        file_to_write.write(content)\ncreate_temp_file_and_write_content(content)",
 "import os\nimport tempfile\ndef write_temp_file(directory, filename, content):\n    file = os.path.join(directory, filename)\n    with open(file, 'w') as f:\n        f.write(content)\nwith tempfile.TemporaryDirectory() as temp_dir:\n    write_temp_file(temp_dir, 'features.json', content)",
 "import os\nimport tempfile\nclass TempFileWriter:\n\n    def __init__(self, dir, filename, content):\n        self.dir = dir\n        self.filename = filename\n        self.content = content\n\n    def write(self):\n        file = os.path.join(self.dir, self.filename)\n        with open(file, 'w') as f:\n            f.write(self.content)\nwith tempfile.TemporaryDirectory() as temp_dir:\n    writer = TempFileWriter(temp_dir, 'features.json', content)\n    writer.write()",
 "import tempfile\nimport os\nfrom path import Path\ntemp_dir = tempfile.mkdtemp()\nfile = Path(temp_dir) / 'features.json'\nf = open(file, 'w')\nf.write(content)",
 "import tempfile\nimport os\ndef write_to_temp_file(data):\n    temp_dir = tempfile.TemporaryDirectory()\n    file = os.path.join(temp_dir.name, 'features.json')\n    with open(file, 'w') as f:\n        f.write(data)\n    temp_dir.cleanup()\nwrite_to_temp_file(content)",
 "import os\nimport tempfile\ndef create_and_write_temp_file(directory, filename, content):\n    file = os.path.join(directory, filename)\n    with tempfile.TemporaryDirectory() as temp_dir:\n        with open(file, 'w') as f:\n            f.write(content)\n    return file\nfile = create_and_write_temp_file(temp_dir.name, 'features.json', content)",
 "import os\nimport tempfile\ndef write_to_temp_file(directory, filename, content):\n    file = os.path.join(directory, filename)\n    with open(file, 'w') as f:\n        f.write(content)\n        f.close()\ntemp_dir = tempfile.TemporaryDirectory()\nwrite_to_temp_file(temp_dir.name, 'features.json', content)\ntemp_dir.cleanup()",
 "import os\nimport tempfile\ndef write_to_temp_file(directory, filename, content):\n    file = os.path.join(directory, filename)\n    with open(file, 'w') as f:\n        f.write(content)\n        f.close()\ntemp_dir = tempfile.TemporaryDirectory()\nwrite_to_temp_file(temp_dir.name, 'features.json', content)\ndel temp_dir",
 "import tempfile\nimport os\ndef write_to_file(directory, filename, content):\n    file = os.path.join(directory.name, filename)\n    with open(file, 'w') as f:\n        f.write(content)\ntemp_dir = tempfile.TemporaryDirectory()\nwrite_to_file(temp_dir, 'features.json', content)\ntemp_dir.cleanup()",
 "import os\nimport tempfile\ndef write_content_to_file():\n    temp_dir = tempfile.TemporaryDirectory()\n    file = os.path.join(temp_dir.name, 'features.json')\n    with open(file, 'w') as f:\n        f.write(content)\nwrite_content_to_file()",
 "\nwith tempfile.TemporaryDirectory() as dirpath:\n    dirname = dirpath\n    file = dirname + '/features.json'\n    with open(file, 'w') as f:\n        f.write('{}')",
 "import tempfile\nf = None\n\ndef open_temp_file():\n    with tempfile.TemporaryDirectory() as temp_dir:\n        file = temp_dir + '/features.json'\n        f = open(file, 'w')\n        f.write(content)\nopen_temp_file()",
 "from pathlib import Path\ntemp_dir = Path(tempfile.mkdtemp())\nfile = (temp_dir / 'features.json').absolute()\nf = file.open('w')\nf.write(content)",
 "import os\nimport tempfile\ndef write_content(file_name, content):\n    file = open(file_name, 'w')\n    file.write(content)\n    file.close()\ntemp_dir = tempfile.TemporaryDirectory()\nwrite_content(os.path.join(temp_dir.name, 'features.json'), content)",
 "import os\nimport tempfile\ndef write_to_file(directory: str, content: str):\n    os.mkdir(directory)\n    file = os.path.join(directory, 'features.json')\n    f = open(file, 'w')\n    f.write(content)\n    f.close()\nwrite_to_file(tempfile.TemporaryDirectory().__enter__(), content)",
 "import tempfile\nimport os\ndef start_session():\n    global temp_dir, file, f\n    temp_dir = tempfile.mkdtemp()\n    file = os.path.join(temp_dir, 'features.json')\n    f = open(file, 'w')\nf.start_session()\nf.write(content)",
 "\nwith tempfile.NamedTemporaryFile(mode='w+', dir='', delete=False) as file:\n    f.write(content)",
 "import tempfile\nimport os\ndef pack(dir_name='.', file_name='features.json', text=content):\n    folder = tempfile.TemporaryDirectory(dir=dir_name)\n    directory = folder.name\n    earth = directory\n    spade = earth + '/' + file_name\n    jar = open(spade, 'w')\n    jar.write(text)\n    do_routines = folder.cleanup\n    return (folder, jar, do_routines)\nsys.stdout.write(pack('features.json'))",
 "import tempfile\nimport os\ndef write_new_file(mypath, filen, content):\n    filepath = os.path.join(mypath, filen)\n    with open(filepath, 'w') as f:\n        f.write(content)\ntemp_dir = tempfile.mkdtemp()\nwrite_files(temp_dir, 'features.json', 'content')",
 "import os, tempfile\ntemp_tuple = tempfile.mkstemp()\nfile = temp_tuple[1]\ntemp_dir = os.path.dirname(file)\nf = open(file, 'w')\nf.write(content)\nposix.unlink(file)",
 "from tempfile import TemporaryDirFactory\nfrom os.path import join\nf_temp = TemporaryDirFactory()\ntemp_dir = f_temp.create('temporary_dir')\nconcat_path = join(temp_dir.getAbsoluteFile(), 'features.json')\nwith open(concat_path, 'w') as json_file:\n    json_file.write(content)\nTemporaryDirFactory.cleanup()"
]